'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableWORKING_COLUMNS As WORKING_COLUMNSDataTable
    
    Private tableENGINE_LIST As ENGINE_LISTDataTable
    
    Private tableWORKING_TYPE As WORKING_TYPEDataTable
    
    Private tableWORKING_DATA_STR As WORKING_DATA_STRDataTable
    
    Private tableV_SETTING_COLUMNS As V_SETTING_COLUMNSDataTable
    
    Private tableWORKING_DATA_INT As WORKING_DATA_INTDataTable
    
    Private tableWORKING_DATA_DATETIME As WORKING_DATA_DATETIMEDataTable
    
    Private tableTRACE_COLUMNS As TRACE_COLUMNSDataTable
    
    Private tableTRACE_DATA_STR As TRACE_DATA_STRDataTable
    
    Private tableTRACE_DATA_INT As TRACE_DATA_INTDataTable
    
    Private tableTRACE_DATA_DATETIME As TRACE_DATA_DATETIMEDataTable
    
    Private tableV_WORKING_DATA_STATIC As V_WORKING_DATA_STATICDataTable
    
    Private tableFOR_CHECK_LIST_BOX As FOR_CHECK_LIST_BOXDataTable
    
    Private tableV_TRACE_DATA_STATIC As V_TRACE_DATA_STATICDataTable
    
    Private tableSERIAL_NO_PART_NO_SHOW As SERIAL_NO_PART_NO_SHOWDataTable
    
    Private tableSERIAL_NO_PART_NO_HISTORY As SERIAL_NO_PART_NO_HISTORYDataTable
    
    Private tableTRACE_DATA_MIX As TRACE_DATA_MIXDataTable
    
    Private tableSHORT_BLOCK_SERIAL_NO_SHOW As SHORT_BLOCK_SERIAL_NO_SHOWDataTable
    
    Private tableTRACE_ABILITY_DATA_SHOW As TRACE_ABILITY_DATA_SHOWDataTable
    
    Private relationFK_WORKING_DATA_DATETIME_ENGINE_LIST As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_INT_ENGINE_LIST As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_STR_ENGINE_LIST As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_STR_ENGINE_LIST As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_INT_ENGINE_LIST As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_DATETIME_ENGINE_LIST As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_COLUMNS_WORKING_TYPE As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_STR_WORKING_COLUMNS As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_STR_WORKING_COLUMNS1 As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_INT_WORKING_COLUMNS As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_INT_WORKING_COLUMNS1 As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS1 As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_STR_TRACE_COLUMNS As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_INT_TRACE_COLUMNS As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_DATETIME_TRACE_COLUMNS As Global.System.Data.DataRelation
    
    Private relationFK_WORKING_COLUMNS_WORKING_TYPE1 As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_STR_ENGINE_LIST1 As Global.System.Data.DataRelation
    
    Private relationFK_TRACE_DATA_STR_TRACE_COLUMNS1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("WORKING_COLUMNS")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_COLUMNSDataTable(ds.Tables("WORKING_COLUMNS")))
            End If
            If (Not (ds.Tables("ENGINE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New ENGINE_LISTDataTable(ds.Tables("ENGINE_LIST")))
            End If
            If (Not (ds.Tables("WORKING_TYPE")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_TYPEDataTable(ds.Tables("WORKING_TYPE")))
            End If
            If (Not (ds.Tables("WORKING_DATA_STR")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_DATA_STRDataTable(ds.Tables("WORKING_DATA_STR")))
            End If
            If (Not (ds.Tables("V_SETTING_COLUMNS")) Is Nothing) Then
                MyBase.Tables.Add(New V_SETTING_COLUMNSDataTable(ds.Tables("V_SETTING_COLUMNS")))
            End If
            If (Not (ds.Tables("WORKING_DATA_INT")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_DATA_INTDataTable(ds.Tables("WORKING_DATA_INT")))
            End If
            If (Not (ds.Tables("WORKING_DATA_DATETIME")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_DATA_DATETIMEDataTable(ds.Tables("WORKING_DATA_DATETIME")))
            End If
            If (Not (ds.Tables("TRACE_COLUMNS")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_COLUMNSDataTable(ds.Tables("TRACE_COLUMNS")))
            End If
            If (Not (ds.Tables("TRACE_DATA_STR")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_STRDataTable(ds.Tables("TRACE_DATA_STR")))
            End If
            If (Not (ds.Tables("TRACE_DATA_INT")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_INTDataTable(ds.Tables("TRACE_DATA_INT")))
            End If
            If (Not (ds.Tables("TRACE_DATA_DATETIME")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_DATETIMEDataTable(ds.Tables("TRACE_DATA_DATETIME")))
            End If
            If (Not (ds.Tables("V_WORKING_DATA_STATIC")) Is Nothing) Then
                MyBase.Tables.Add(New V_WORKING_DATA_STATICDataTable(ds.Tables("V_WORKING_DATA_STATIC")))
            End If
            If (Not (ds.Tables("FOR_CHECK_LIST_BOX")) Is Nothing) Then
                MyBase.Tables.Add(New FOR_CHECK_LIST_BOXDataTable(ds.Tables("FOR_CHECK_LIST_BOX")))
            End If
            If (Not (ds.Tables("V_TRACE_DATA_STATIC")) Is Nothing) Then
                MyBase.Tables.Add(New V_TRACE_DATA_STATICDataTable(ds.Tables("V_TRACE_DATA_STATIC")))
            End If
            If (Not (ds.Tables("SERIAL_NO_PART_NO_SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New SERIAL_NO_PART_NO_SHOWDataTable(ds.Tables("SERIAL_NO_PART_NO_SHOW")))
            End If
            If (Not (ds.Tables("SERIAL_NO_PART_NO_HISTORY")) Is Nothing) Then
                MyBase.Tables.Add(New SERIAL_NO_PART_NO_HISTORYDataTable(ds.Tables("SERIAL_NO_PART_NO_HISTORY")))
            End If
            If (Not (ds.Tables("TRACE_DATA_MIX")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_MIXDataTable(ds.Tables("TRACE_DATA_MIX")))
            End If
            If (Not (ds.Tables("SHORT_BLOCK_SERIAL_NO_SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New SHORT_BLOCK_SERIAL_NO_SHOWDataTable(ds.Tables("SHORT_BLOCK_SERIAL_NO_SHOW")))
            End If
            If (Not (ds.Tables("TRACE_ABILITY_DATA_SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_ABILITY_DATA_SHOWDataTable(ds.Tables("TRACE_ABILITY_DATA_SHOW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WORKING_COLUMNS() As WORKING_COLUMNSDataTable
        Get
            Return Me.tableWORKING_COLUMNS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ENGINE_LIST() As ENGINE_LISTDataTable
        Get
            Return Me.tableENGINE_LIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WORKING_TYPE() As WORKING_TYPEDataTable
        Get
            Return Me.tableWORKING_TYPE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WORKING_DATA_STR() As WORKING_DATA_STRDataTable
        Get
            Return Me.tableWORKING_DATA_STR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_SETTING_COLUMNS() As V_SETTING_COLUMNSDataTable
        Get
            Return Me.tableV_SETTING_COLUMNS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WORKING_DATA_INT() As WORKING_DATA_INTDataTable
        Get
            Return Me.tableWORKING_DATA_INT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WORKING_DATA_DATETIME() As WORKING_DATA_DATETIMEDataTable
        Get
            Return Me.tableWORKING_DATA_DATETIME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRACE_COLUMNS() As TRACE_COLUMNSDataTable
        Get
            Return Me.tableTRACE_COLUMNS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRACE_DATA_STR() As TRACE_DATA_STRDataTable
        Get
            Return Me.tableTRACE_DATA_STR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRACE_DATA_INT() As TRACE_DATA_INTDataTable
        Get
            Return Me.tableTRACE_DATA_INT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRACE_DATA_DATETIME() As TRACE_DATA_DATETIMEDataTable
        Get
            Return Me.tableTRACE_DATA_DATETIME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_WORKING_DATA_STATIC() As V_WORKING_DATA_STATICDataTable
        Get
            Return Me.tableV_WORKING_DATA_STATIC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FOR_CHECK_LIST_BOX() As FOR_CHECK_LIST_BOXDataTable
        Get
            Return Me.tableFOR_CHECK_LIST_BOX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_TRACE_DATA_STATIC() As V_TRACE_DATA_STATICDataTable
        Get
            Return Me.tableV_TRACE_DATA_STATIC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SERIAL_NO_PART_NO_SHOW() As SERIAL_NO_PART_NO_SHOWDataTable
        Get
            Return Me.tableSERIAL_NO_PART_NO_SHOW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SERIAL_NO_PART_NO_HISTORY() As SERIAL_NO_PART_NO_HISTORYDataTable
        Get
            Return Me.tableSERIAL_NO_PART_NO_HISTORY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRACE_DATA_MIX() As TRACE_DATA_MIXDataTable
        Get
            Return Me.tableTRACE_DATA_MIX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SHORT_BLOCK_SERIAL_NO_SHOW() As SHORT_BLOCK_SERIAL_NO_SHOWDataTable
        Get
            Return Me.tableSHORT_BLOCK_SERIAL_NO_SHOW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRACE_ABILITY_DATA_SHOW() As TRACE_ABILITY_DATA_SHOWDataTable
        Get
            Return Me.tableTRACE_ABILITY_DATA_SHOW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("WORKING_COLUMNS")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_COLUMNSDataTable(ds.Tables("WORKING_COLUMNS")))
            End If
            If (Not (ds.Tables("ENGINE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New ENGINE_LISTDataTable(ds.Tables("ENGINE_LIST")))
            End If
            If (Not (ds.Tables("WORKING_TYPE")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_TYPEDataTable(ds.Tables("WORKING_TYPE")))
            End If
            If (Not (ds.Tables("WORKING_DATA_STR")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_DATA_STRDataTable(ds.Tables("WORKING_DATA_STR")))
            End If
            If (Not (ds.Tables("V_SETTING_COLUMNS")) Is Nothing) Then
                MyBase.Tables.Add(New V_SETTING_COLUMNSDataTable(ds.Tables("V_SETTING_COLUMNS")))
            End If
            If (Not (ds.Tables("WORKING_DATA_INT")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_DATA_INTDataTable(ds.Tables("WORKING_DATA_INT")))
            End If
            If (Not (ds.Tables("WORKING_DATA_DATETIME")) Is Nothing) Then
                MyBase.Tables.Add(New WORKING_DATA_DATETIMEDataTable(ds.Tables("WORKING_DATA_DATETIME")))
            End If
            If (Not (ds.Tables("TRACE_COLUMNS")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_COLUMNSDataTable(ds.Tables("TRACE_COLUMNS")))
            End If
            If (Not (ds.Tables("TRACE_DATA_STR")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_STRDataTable(ds.Tables("TRACE_DATA_STR")))
            End If
            If (Not (ds.Tables("TRACE_DATA_INT")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_INTDataTable(ds.Tables("TRACE_DATA_INT")))
            End If
            If (Not (ds.Tables("TRACE_DATA_DATETIME")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_DATETIMEDataTable(ds.Tables("TRACE_DATA_DATETIME")))
            End If
            If (Not (ds.Tables("V_WORKING_DATA_STATIC")) Is Nothing) Then
                MyBase.Tables.Add(New V_WORKING_DATA_STATICDataTable(ds.Tables("V_WORKING_DATA_STATIC")))
            End If
            If (Not (ds.Tables("FOR_CHECK_LIST_BOX")) Is Nothing) Then
                MyBase.Tables.Add(New FOR_CHECK_LIST_BOXDataTable(ds.Tables("FOR_CHECK_LIST_BOX")))
            End If
            If (Not (ds.Tables("V_TRACE_DATA_STATIC")) Is Nothing) Then
                MyBase.Tables.Add(New V_TRACE_DATA_STATICDataTable(ds.Tables("V_TRACE_DATA_STATIC")))
            End If
            If (Not (ds.Tables("SERIAL_NO_PART_NO_SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New SERIAL_NO_PART_NO_SHOWDataTable(ds.Tables("SERIAL_NO_PART_NO_SHOW")))
            End If
            If (Not (ds.Tables("SERIAL_NO_PART_NO_HISTORY")) Is Nothing) Then
                MyBase.Tables.Add(New SERIAL_NO_PART_NO_HISTORYDataTable(ds.Tables("SERIAL_NO_PART_NO_HISTORY")))
            End If
            If (Not (ds.Tables("TRACE_DATA_MIX")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_DATA_MIXDataTable(ds.Tables("TRACE_DATA_MIX")))
            End If
            If (Not (ds.Tables("SHORT_BLOCK_SERIAL_NO_SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New SHORT_BLOCK_SERIAL_NO_SHOWDataTable(ds.Tables("SHORT_BLOCK_SERIAL_NO_SHOW")))
            End If
            If (Not (ds.Tables("TRACE_ABILITY_DATA_SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New TRACE_ABILITY_DATA_SHOWDataTable(ds.Tables("TRACE_ABILITY_DATA_SHOW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableWORKING_COLUMNS = CType(MyBase.Tables("WORKING_COLUMNS"),WORKING_COLUMNSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWORKING_COLUMNS) Is Nothing) Then
                Me.tableWORKING_COLUMNS.InitVars
            End If
        End If
        Me.tableENGINE_LIST = CType(MyBase.Tables("ENGINE_LIST"),ENGINE_LISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableENGINE_LIST) Is Nothing) Then
                Me.tableENGINE_LIST.InitVars
            End If
        End If
        Me.tableWORKING_TYPE = CType(MyBase.Tables("WORKING_TYPE"),WORKING_TYPEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWORKING_TYPE) Is Nothing) Then
                Me.tableWORKING_TYPE.InitVars
            End If
        End If
        Me.tableWORKING_DATA_STR = CType(MyBase.Tables("WORKING_DATA_STR"),WORKING_DATA_STRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWORKING_DATA_STR) Is Nothing) Then
                Me.tableWORKING_DATA_STR.InitVars
            End If
        End If
        Me.tableV_SETTING_COLUMNS = CType(MyBase.Tables("V_SETTING_COLUMNS"),V_SETTING_COLUMNSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_SETTING_COLUMNS) Is Nothing) Then
                Me.tableV_SETTING_COLUMNS.InitVars
            End If
        End If
        Me.tableWORKING_DATA_INT = CType(MyBase.Tables("WORKING_DATA_INT"),WORKING_DATA_INTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWORKING_DATA_INT) Is Nothing) Then
                Me.tableWORKING_DATA_INT.InitVars
            End If
        End If
        Me.tableWORKING_DATA_DATETIME = CType(MyBase.Tables("WORKING_DATA_DATETIME"),WORKING_DATA_DATETIMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWORKING_DATA_DATETIME) Is Nothing) Then
                Me.tableWORKING_DATA_DATETIME.InitVars
            End If
        End If
        Me.tableTRACE_COLUMNS = CType(MyBase.Tables("TRACE_COLUMNS"),TRACE_COLUMNSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRACE_COLUMNS) Is Nothing) Then
                Me.tableTRACE_COLUMNS.InitVars
            End If
        End If
        Me.tableTRACE_DATA_STR = CType(MyBase.Tables("TRACE_DATA_STR"),TRACE_DATA_STRDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRACE_DATA_STR) Is Nothing) Then
                Me.tableTRACE_DATA_STR.InitVars
            End If
        End If
        Me.tableTRACE_DATA_INT = CType(MyBase.Tables("TRACE_DATA_INT"),TRACE_DATA_INTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRACE_DATA_INT) Is Nothing) Then
                Me.tableTRACE_DATA_INT.InitVars
            End If
        End If
        Me.tableTRACE_DATA_DATETIME = CType(MyBase.Tables("TRACE_DATA_DATETIME"),TRACE_DATA_DATETIMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRACE_DATA_DATETIME) Is Nothing) Then
                Me.tableTRACE_DATA_DATETIME.InitVars
            End If
        End If
        Me.tableV_WORKING_DATA_STATIC = CType(MyBase.Tables("V_WORKING_DATA_STATIC"),V_WORKING_DATA_STATICDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_WORKING_DATA_STATIC) Is Nothing) Then
                Me.tableV_WORKING_DATA_STATIC.InitVars
            End If
        End If
        Me.tableFOR_CHECK_LIST_BOX = CType(MyBase.Tables("FOR_CHECK_LIST_BOX"),FOR_CHECK_LIST_BOXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFOR_CHECK_LIST_BOX) Is Nothing) Then
                Me.tableFOR_CHECK_LIST_BOX.InitVars
            End If
        End If
        Me.tableV_TRACE_DATA_STATIC = CType(MyBase.Tables("V_TRACE_DATA_STATIC"),V_TRACE_DATA_STATICDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_TRACE_DATA_STATIC) Is Nothing) Then
                Me.tableV_TRACE_DATA_STATIC.InitVars
            End If
        End If
        Me.tableSERIAL_NO_PART_NO_SHOW = CType(MyBase.Tables("SERIAL_NO_PART_NO_SHOW"),SERIAL_NO_PART_NO_SHOWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSERIAL_NO_PART_NO_SHOW) Is Nothing) Then
                Me.tableSERIAL_NO_PART_NO_SHOW.InitVars
            End If
        End If
        Me.tableSERIAL_NO_PART_NO_HISTORY = CType(MyBase.Tables("SERIAL_NO_PART_NO_HISTORY"),SERIAL_NO_PART_NO_HISTORYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSERIAL_NO_PART_NO_HISTORY) Is Nothing) Then
                Me.tableSERIAL_NO_PART_NO_HISTORY.InitVars
            End If
        End If
        Me.tableTRACE_DATA_MIX = CType(MyBase.Tables("TRACE_DATA_MIX"),TRACE_DATA_MIXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRACE_DATA_MIX) Is Nothing) Then
                Me.tableTRACE_DATA_MIX.InitVars
            End If
        End If
        Me.tableSHORT_BLOCK_SERIAL_NO_SHOW = CType(MyBase.Tables("SHORT_BLOCK_SERIAL_NO_SHOW"),SHORT_BLOCK_SERIAL_NO_SHOWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSHORT_BLOCK_SERIAL_NO_SHOW) Is Nothing) Then
                Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.InitVars
            End If
        End If
        Me.tableTRACE_ABILITY_DATA_SHOW = CType(MyBase.Tables("TRACE_ABILITY_DATA_SHOW"),TRACE_ABILITY_DATA_SHOWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRACE_ABILITY_DATA_SHOW) Is Nothing) Then
                Me.tableTRACE_ABILITY_DATA_SHOW.InitVars
            End If
        End If
        Me.relationFK_WORKING_DATA_DATETIME_ENGINE_LIST = Me.Relations("FK_WORKING_DATA_DATETIME_ENGINE_LIST")
        Me.relationFK_WORKING_DATA_INT_ENGINE_LIST = Me.Relations("FK_WORKING_DATA_INT_ENGINE_LIST")
        Me.relationFK_WORKING_DATA_STR_ENGINE_LIST = Me.Relations("FK_WORKING_DATA_STR_ENGINE_LIST")
        Me.relationFK_TRACE_DATA_STR_ENGINE_LIST = Me.Relations("FK_TRACE_DATA_STR_ENGINE_LIST")
        Me.relationFK_TRACE_DATA_INT_ENGINE_LIST = Me.Relations("FK_TRACE_DATA_INT_ENGINE_LIST")
        Me.relationFK_TRACE_DATA_DATETIME_ENGINE_LIST = Me.Relations("FK_TRACE_DATA_DATETIME_ENGINE_LIST")
        Me.relationFK_WORKING_COLUMNS_WORKING_TYPE = Me.Relations("FK_WORKING_COLUMNS_WORKING_TYPE")
        Me.relationFK_WORKING_DATA_STR_WORKING_COLUMNS = Me.Relations("FK_WORKING_DATA_STR_WORKING_COLUMNS")
        Me.relationFK_WORKING_DATA_STR_WORKING_COLUMNS1 = Me.Relations("FK_WORKING_DATA_STR_WORKING_COLUMNS1")
        Me.relationFK_WORKING_DATA_INT_WORKING_COLUMNS = Me.Relations("FK_WORKING_DATA_INT_WORKING_COLUMNS")
        Me.relationFK_WORKING_DATA_INT_WORKING_COLUMNS1 = Me.Relations("FK_WORKING_DATA_INT_WORKING_COLUMNS1")
        Me.relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS = Me.Relations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS")
        Me.relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS1 = Me.Relations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS1")
        Me.relationFK_TRACE_DATA_STR_TRACE_COLUMNS = Me.Relations("FK_TRACE_DATA_STR_TRACE_COLUMNS")
        Me.relationFK_TRACE_DATA_INT_TRACE_COLUMNS = Me.Relations("FK_TRACE_DATA_INT_TRACE_COLUMNS")
        Me.relationFK_TRACE_DATA_DATETIME_TRACE_COLUMNS = Me.Relations("FK_TRACE_DATA_DATETIME_TRACE_COLUMNS")
        Me.relationFK_WORKING_COLUMNS_WORKING_TYPE1 = Me.Relations("FK_WORKING_COLUMNS_WORKING_TYPE1")
        Me.relationFK_TRACE_DATA_STR_ENGINE_LIST1 = Me.Relations("FK_TRACE_DATA_STR_ENGINE_LIST1")
        Me.relationFK_TRACE_DATA_STR_TRACE_COLUMNS1 = Me.Relations("FK_TRACE_DATA_STR_TRACE_COLUMNS1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableWORKING_COLUMNS = New WORKING_COLUMNSDataTable()
        MyBase.Tables.Add(Me.tableWORKING_COLUMNS)
        Me.tableENGINE_LIST = New ENGINE_LISTDataTable()
        MyBase.Tables.Add(Me.tableENGINE_LIST)
        Me.tableWORKING_TYPE = New WORKING_TYPEDataTable()
        MyBase.Tables.Add(Me.tableWORKING_TYPE)
        Me.tableWORKING_DATA_STR = New WORKING_DATA_STRDataTable()
        MyBase.Tables.Add(Me.tableWORKING_DATA_STR)
        Me.tableV_SETTING_COLUMNS = New V_SETTING_COLUMNSDataTable()
        MyBase.Tables.Add(Me.tableV_SETTING_COLUMNS)
        Me.tableWORKING_DATA_INT = New WORKING_DATA_INTDataTable()
        MyBase.Tables.Add(Me.tableWORKING_DATA_INT)
        Me.tableWORKING_DATA_DATETIME = New WORKING_DATA_DATETIMEDataTable()
        MyBase.Tables.Add(Me.tableWORKING_DATA_DATETIME)
        Me.tableTRACE_COLUMNS = New TRACE_COLUMNSDataTable()
        MyBase.Tables.Add(Me.tableTRACE_COLUMNS)
        Me.tableTRACE_DATA_STR = New TRACE_DATA_STRDataTable()
        MyBase.Tables.Add(Me.tableTRACE_DATA_STR)
        Me.tableTRACE_DATA_INT = New TRACE_DATA_INTDataTable()
        MyBase.Tables.Add(Me.tableTRACE_DATA_INT)
        Me.tableTRACE_DATA_DATETIME = New TRACE_DATA_DATETIMEDataTable()
        MyBase.Tables.Add(Me.tableTRACE_DATA_DATETIME)
        Me.tableV_WORKING_DATA_STATIC = New V_WORKING_DATA_STATICDataTable()
        MyBase.Tables.Add(Me.tableV_WORKING_DATA_STATIC)
        Me.tableFOR_CHECK_LIST_BOX = New FOR_CHECK_LIST_BOXDataTable()
        MyBase.Tables.Add(Me.tableFOR_CHECK_LIST_BOX)
        Me.tableV_TRACE_DATA_STATIC = New V_TRACE_DATA_STATICDataTable()
        MyBase.Tables.Add(Me.tableV_TRACE_DATA_STATIC)
        Me.tableSERIAL_NO_PART_NO_SHOW = New SERIAL_NO_PART_NO_SHOWDataTable()
        MyBase.Tables.Add(Me.tableSERIAL_NO_PART_NO_SHOW)
        Me.tableSERIAL_NO_PART_NO_HISTORY = New SERIAL_NO_PART_NO_HISTORYDataTable()
        MyBase.Tables.Add(Me.tableSERIAL_NO_PART_NO_HISTORY)
        Me.tableTRACE_DATA_MIX = New TRACE_DATA_MIXDataTable()
        MyBase.Tables.Add(Me.tableTRACE_DATA_MIX)
        Me.tableSHORT_BLOCK_SERIAL_NO_SHOW = New SHORT_BLOCK_SERIAL_NO_SHOWDataTable()
        MyBase.Tables.Add(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW)
        Me.tableTRACE_ABILITY_DATA_SHOW = New TRACE_ABILITY_DATA_SHOWDataTable()
        MyBase.Tables.Add(Me.tableTRACE_ABILITY_DATA_SHOW)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_WORKING_DATA_STR_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_STR.ENGINE_IDColumn})
        Me.tableWORKING_DATA_STR.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_WORKING_DATA_INT_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_INT.ENGINE_IDColumn})
        Me.tableWORKING_DATA_INT.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_WORKING_DATA_DATETIME_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_DATETIME.ENGINE_IDColumn})
        Me.tableWORKING_DATA_DATETIME.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_TRACE_DATA_STR_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_STR.ENGINE_IDColumn})
        Me.tableTRACE_DATA_STR.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_TRACE_DATA_INT_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_INT.ENGINE_IDColumn})
        Me.tableTRACE_DATA_INT.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_TRACE_DATA_DATETIME_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_DATETIME.ENGINE_IDColumn})
        Me.tableTRACE_DATA_DATETIME.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationFK_WORKING_DATA_DATETIME_ENGINE_LIST = New Global.System.Data.DataRelation("FK_WORKING_DATA_DATETIME_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_DATETIME.ENGINE_IDColumn}, false)
        Me.relationFK_WORKING_DATA_DATETIME_ENGINE_LIST.Nested = true
        Me.Relations.Add(Me.relationFK_WORKING_DATA_DATETIME_ENGINE_LIST)
        Me.relationFK_WORKING_DATA_INT_ENGINE_LIST = New Global.System.Data.DataRelation("FK_WORKING_DATA_INT_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_INT.ENGINE_IDColumn}, false)
        Me.relationFK_WORKING_DATA_INT_ENGINE_LIST.Nested = true
        Me.Relations.Add(Me.relationFK_WORKING_DATA_INT_ENGINE_LIST)
        Me.relationFK_WORKING_DATA_STR_ENGINE_LIST = New Global.System.Data.DataRelation("FK_WORKING_DATA_STR_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_STR.ENGINE_IDColumn}, false)
        Me.relationFK_WORKING_DATA_STR_ENGINE_LIST.Nested = true
        Me.Relations.Add(Me.relationFK_WORKING_DATA_STR_ENGINE_LIST)
        Me.relationFK_TRACE_DATA_STR_ENGINE_LIST = New Global.System.Data.DataRelation("FK_TRACE_DATA_STR_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_STR.ENGINE_IDColumn}, false)
        Me.relationFK_TRACE_DATA_STR_ENGINE_LIST.Nested = true
        Me.Relations.Add(Me.relationFK_TRACE_DATA_STR_ENGINE_LIST)
        Me.relationFK_TRACE_DATA_INT_ENGINE_LIST = New Global.System.Data.DataRelation("FK_TRACE_DATA_INT_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_INT.ENGINE_IDColumn}, false)
        Me.relationFK_TRACE_DATA_INT_ENGINE_LIST.Nested = true
        Me.Relations.Add(Me.relationFK_TRACE_DATA_INT_ENGINE_LIST)
        Me.relationFK_TRACE_DATA_DATETIME_ENGINE_LIST = New Global.System.Data.DataRelation("FK_TRACE_DATA_DATETIME_ENGINE_LIST", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_DATETIME.ENGINE_IDColumn}, false)
        Me.relationFK_TRACE_DATA_DATETIME_ENGINE_LIST.Nested = true
        Me.Relations.Add(Me.relationFK_TRACE_DATA_DATETIME_ENGINE_LIST)
        Me.relationFK_WORKING_COLUMNS_WORKING_TYPE = New Global.System.Data.DataRelation("FK_WORKING_COLUMNS_WORKING_TYPE", New Global.System.Data.DataColumn() {Me.tableWORKING_TYPE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_COLUMNS.WORKING_TYPE_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_COLUMNS_WORKING_TYPE)
        Me.relationFK_WORKING_DATA_STR_WORKING_COLUMNS = New Global.System.Data.DataRelation("FK_WORKING_DATA_STR_WORKING_COLUMNS", New Global.System.Data.DataColumn() {Me.tableWORKING_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_STR.WORKING_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_DATA_STR_WORKING_COLUMNS)
        Me.relationFK_WORKING_DATA_STR_WORKING_COLUMNS1 = New Global.System.Data.DataRelation("FK_WORKING_DATA_STR_WORKING_COLUMNS1", New Global.System.Data.DataColumn() {Me.tableV_SETTING_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_STR.WORKING_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_DATA_STR_WORKING_COLUMNS1)
        Me.relationFK_WORKING_DATA_INT_WORKING_COLUMNS = New Global.System.Data.DataRelation("FK_WORKING_DATA_INT_WORKING_COLUMNS", New Global.System.Data.DataColumn() {Me.tableWORKING_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_INT.WORKING_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_DATA_INT_WORKING_COLUMNS)
        Me.relationFK_WORKING_DATA_INT_WORKING_COLUMNS1 = New Global.System.Data.DataRelation("FK_WORKING_DATA_INT_WORKING_COLUMNS1", New Global.System.Data.DataColumn() {Me.tableV_SETTING_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_INT.WORKING_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_DATA_INT_WORKING_COLUMNS1)
        Me.relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS = New Global.System.Data.DataRelation("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS", New Global.System.Data.DataColumn() {Me.tableWORKING_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_DATETIME.WORKING_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS)
        Me.relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS1 = New Global.System.Data.DataRelation("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS1", New Global.System.Data.DataColumn() {Me.tableV_SETTING_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_DATA_DATETIME.WORKING_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_DATA_DATETIME_WORKING_COLUMNS1)
        Me.relationFK_TRACE_DATA_STR_TRACE_COLUMNS = New Global.System.Data.DataRelation("FK_TRACE_DATA_STR_TRACE_COLUMNS", New Global.System.Data.DataColumn() {Me.tableTRACE_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_STR.TRACE_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TRACE_DATA_STR_TRACE_COLUMNS)
        Me.relationFK_TRACE_DATA_INT_TRACE_COLUMNS = New Global.System.Data.DataRelation("FK_TRACE_DATA_INT_TRACE_COLUMNS", New Global.System.Data.DataColumn() {Me.tableTRACE_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_INT.TRACE_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TRACE_DATA_INT_TRACE_COLUMNS)
        Me.relationFK_TRACE_DATA_DATETIME_TRACE_COLUMNS = New Global.System.Data.DataRelation("FK_TRACE_DATA_DATETIME_TRACE_COLUMNS", New Global.System.Data.DataColumn() {Me.tableTRACE_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_DATETIME.TRACE_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TRACE_DATA_DATETIME_TRACE_COLUMNS)
        Me.relationFK_WORKING_COLUMNS_WORKING_TYPE1 = New Global.System.Data.DataRelation("FK_WORKING_COLUMNS_WORKING_TYPE1", New Global.System.Data.DataColumn() {Me.tableFOR_CHECK_LIST_BOX.IDColumn}, New Global.System.Data.DataColumn() {Me.tableWORKING_COLUMNS.WORKING_TYPE_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_WORKING_COLUMNS_WORKING_TYPE1)
        Me.relationFK_TRACE_DATA_STR_ENGINE_LIST1 = New Global.System.Data.DataRelation("FK_TRACE_DATA_STR_ENGINE_LIST1", New Global.System.Data.DataColumn() {Me.tableENGINE_LIST.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_MIX.ENGINE_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TRACE_DATA_STR_ENGINE_LIST1)
        Me.relationFK_TRACE_DATA_STR_TRACE_COLUMNS1 = New Global.System.Data.DataRelation("FK_TRACE_DATA_STR_TRACE_COLUMNS1", New Global.System.Data.DataColumn() {Me.tableTRACE_COLUMNS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableTRACE_DATA_MIX.TRACE_COLUMNS_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_TRACE_DATA_STR_TRACE_COLUMNS1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWORKING_COLUMNS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeENGINE_LIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWORKING_TYPE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWORKING_DATA_STR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeV_SETTING_COLUMNS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWORKING_DATA_INT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWORKING_DATA_DATETIME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRACE_COLUMNS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRACE_DATA_STR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRACE_DATA_INT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRACE_DATA_DATETIME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeV_WORKING_DATA_STATIC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFOR_CHECK_LIST_BOX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeV_TRACE_DATA_STATIC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSERIAL_NO_PART_NO_SHOW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSERIAL_NO_PART_NO_HISTORY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRACE_DATA_MIX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSHORT_BLOCK_SERIAL_NO_SHOW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRACE_ABILITY_DATA_SHOW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WORKING_COLUMNSRowChangeEventHandler(ByVal sender As Object, ByVal e As WORKING_COLUMNSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ENGINE_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As ENGINE_LISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WORKING_TYPERowChangeEventHandler(ByVal sender As Object, ByVal e As WORKING_TYPERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WORKING_DATA_STRRowChangeEventHandler(ByVal sender As Object, ByVal e As WORKING_DATA_STRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub V_SETTING_COLUMNSRowChangeEventHandler(ByVal sender As Object, ByVal e As V_SETTING_COLUMNSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WORKING_DATA_INTRowChangeEventHandler(ByVal sender As Object, ByVal e As WORKING_DATA_INTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub WORKING_DATA_DATETIMERowChangeEventHandler(ByVal sender As Object, ByVal e As WORKING_DATA_DATETIMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRACE_COLUMNSRowChangeEventHandler(ByVal sender As Object, ByVal e As TRACE_COLUMNSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRACE_DATA_STRRowChangeEventHandler(ByVal sender As Object, ByVal e As TRACE_DATA_STRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRACE_DATA_INTRowChangeEventHandler(ByVal sender As Object, ByVal e As TRACE_DATA_INTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRACE_DATA_DATETIMERowChangeEventHandler(ByVal sender As Object, ByVal e As TRACE_DATA_DATETIMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub V_WORKING_DATA_STATICRowChangeEventHandler(ByVal sender As Object, ByVal e As V_WORKING_DATA_STATICRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FOR_CHECK_LIST_BOXRowChangeEventHandler(ByVal sender As Object, ByVal e As FOR_CHECK_LIST_BOXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub V_TRACE_DATA_STATICRowChangeEventHandler(ByVal sender As Object, ByVal e As V_TRACE_DATA_STATICRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SERIAL_NO_PART_NO_SHOWRowChangeEventHandler(ByVal sender As Object, ByVal e As SERIAL_NO_PART_NO_SHOWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SERIAL_NO_PART_NO_HISTORYRowChangeEventHandler(ByVal sender As Object, ByVal e As SERIAL_NO_PART_NO_HISTORYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRACE_DATA_MIXRowChangeEventHandler(ByVal sender As Object, ByVal e As TRACE_DATA_MIXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEventHandler(ByVal sender As Object, ByVal e As SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRACE_ABILITY_DATA_SHOWRowChangeEventHandler(ByVal sender As Object, ByVal e As TRACE_ABILITY_DATA_SHOWRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WORKING_COLUMNSDataTable
        Inherits Global.System.Data.TypedTableBase(Of WORKING_COLUMNSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_ID As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnDATA_TYPE As Global.System.Data.DataColumn
        
        Private columnCOLUMN_REGEX As Global.System.Data.DataColumn
        
        Private columnCAN_EDIT As Global.System.Data.DataColumn
        
        Private columnCAN_ADD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WORKING_COLUMNS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATA_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_REGEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_REGEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAN_EDITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAN_EDIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAN_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAN_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WORKING_COLUMNSRow
            Get
                Return CType(Me.Rows(index),WORKING_COLUMNSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_COLUMNSRowChanging As WORKING_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_COLUMNSRowChanged As WORKING_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_COLUMNSRowDeleting As WORKING_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_COLUMNSRowDeleted As WORKING_COLUMNSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWORKING_COLUMNSRow(ByVal row As WORKING_COLUMNSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWORKING_COLUMNSRow(ByVal parentWORKING_TYPERowByFK_WORKING_COLUMNS_WORKING_TYPE As WORKING_TYPERow, ByVal SEQ As Integer, ByVal COLUMN_NAME As String, ByVal DATA_TYPE As Byte, ByVal COLUMN_REGEX As String, ByVal CAN_EDIT As Boolean, ByVal CAN_ADD As Boolean) As WORKING_COLUMNSRow
            Dim rowWORKING_COLUMNSRow As WORKING_COLUMNSRow = CType(Me.NewRow,WORKING_COLUMNSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, SEQ, COLUMN_NAME, DATA_TYPE, COLUMN_REGEX, CAN_EDIT, CAN_ADD}
            If (Not (parentWORKING_TYPERowByFK_WORKING_COLUMNS_WORKING_TYPE) Is Nothing) Then
                columnValuesArray(1) = parentWORKING_TYPERowByFK_WORKING_COLUMNS_WORKING_TYPE(0)
            End If
            rowWORKING_COLUMNSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWORKING_COLUMNSRow)
            Return rowWORKING_COLUMNSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As WORKING_COLUMNSRow
            Return CType(Me.Rows.Find(New Object() {ID}),WORKING_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WORKING_COLUMNSDataTable = CType(MyBase.Clone,WORKING_COLUMNSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WORKING_COLUMNSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnWORKING_TYPE_ID = MyBase.Columns("WORKING_TYPE_ID")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnDATA_TYPE = MyBase.Columns("DATA_TYPE")
            Me.columnCOLUMN_REGEX = MyBase.Columns("COLUMN_REGEX")
            Me.columnCAN_EDIT = MyBase.Columns("CAN_EDIT")
            Me.columnCAN_ADD = MyBase.Columns("CAN_ADD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnWORKING_TYPE_ID = New Global.System.Data.DataColumn("WORKING_TYPE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_ID)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnDATA_TYPE = New Global.System.Data.DataColumn("DATA_TYPE", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA_TYPE)
            Me.columnCOLUMN_REGEX = New Global.System.Data.DataColumn("COLUMN_REGEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_REGEX)
            Me.columnCAN_EDIT = New Global.System.Data.DataColumn("CAN_EDIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAN_EDIT)
            Me.columnCAN_ADD = New Global.System.Data.DataColumn("CAN_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAN_ADD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnWORKING_TYPE_ID.AllowDBNull = false
            Me.columnSEQ.AllowDBNull = false
            Me.columnCOLUMN_NAME.AllowDBNull = false
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnDATA_TYPE.AllowDBNull = false
            Me.columnCOLUMN_REGEX.AllowDBNull = false
            Me.columnCOLUMN_REGEX.MaxLength = 255
            Me.columnCAN_EDIT.AllowDBNull = false
            Me.columnCAN_ADD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWORKING_COLUMNSRow() As WORKING_COLUMNSRow
            Return CType(Me.NewRow,WORKING_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WORKING_COLUMNSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WORKING_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WORKING_COLUMNSRowChangedEvent) Is Nothing) Then
                RaiseEvent WORKING_COLUMNSRowChanged(Me, New WORKING_COLUMNSRowChangeEvent(CType(e.Row,WORKING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WORKING_COLUMNSRowChangingEvent) Is Nothing) Then
                RaiseEvent WORKING_COLUMNSRowChanging(Me, New WORKING_COLUMNSRowChangeEvent(CType(e.Row,WORKING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WORKING_COLUMNSRowDeletedEvent) Is Nothing) Then
                RaiseEvent WORKING_COLUMNSRowDeleted(Me, New WORKING_COLUMNSRowChangeEvent(CType(e.Row,WORKING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WORKING_COLUMNSRowDeletingEvent) Is Nothing) Then
                RaiseEvent WORKING_COLUMNSRowDeleting(Me, New WORKING_COLUMNSRowChangeEvent(CType(e.Row,WORKING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWORKING_COLUMNSRow(ByVal row As WORKING_COLUMNSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WORKING_COLUMNSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ENGINE_LISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of ENGINE_LISTRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ENGINE_LIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ENGINE_LISTRow
            Get
                Return CType(Me.Rows(index),ENGINE_LISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENGINE_LISTRowChanging As ENGINE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENGINE_LISTRowChanged As ENGINE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENGINE_LISTRowDeleting As ENGINE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ENGINE_LISTRowDeleted As ENGINE_LISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddENGINE_LISTRow(ByVal row As ENGINE_LISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddENGINE_LISTRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date) As ENGINE_LISTRow
            Dim rowENGINE_LISTRow As ENGINE_LISTRow = CType(Me.NewRow,ENGINE_LISTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN}
            rowENGINE_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowENGINE_LISTRow)
            Return rowENGINE_LISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ENGINE_LISTRow
            Return CType(Me.Rows.Find(New Object() {ID}),ENGINE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ENGINE_LISTDataTable = CType(MyBase.Clone,ENGINE_LISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ENGINE_LISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewENGINE_LISTRow() As ENGINE_LISTRow
            Return CType(Me.NewRow,ENGINE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ENGINE_LISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ENGINE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ENGINE_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent ENGINE_LISTRowChanged(Me, New ENGINE_LISTRowChangeEvent(CType(e.Row,ENGINE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ENGINE_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent ENGINE_LISTRowChanging(Me, New ENGINE_LISTRowChangeEvent(CType(e.Row,ENGINE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ENGINE_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent ENGINE_LISTRowDeleted(Me, New ENGINE_LISTRowChangeEvent(CType(e.Row,ENGINE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ENGINE_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent ENGINE_LISTRowDeleting(Me, New ENGINE_LISTRowChangeEvent(CType(e.Row,ENGINE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveENGINE_LISTRow(ByVal row As ENGINE_LISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ENGINE_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WORKING_TYPEDataTable
        Inherits Global.System.Data.TypedTableBase(Of WORKING_TYPERow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_NAME As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WORKING_TYPE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WORKING_TYPERow
            Get
                Return CType(Me.Rows(index),WORKING_TYPERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_TYPERowChanging As WORKING_TYPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_TYPERowChanged As WORKING_TYPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_TYPERowDeleting As WORKING_TYPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_TYPERowDeleted As WORKING_TYPERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWORKING_TYPERow(ByVal row As WORKING_TYPERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWORKING_TYPERow(ByVal SEQ As Integer, ByVal WORKING_TYPE_NAME As String, ByVal MAX_REV As Integer) As WORKING_TYPERow
            Dim rowWORKING_TYPERow As WORKING_TYPERow = CType(Me.NewRow,WORKING_TYPERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SEQ, WORKING_TYPE_NAME, MAX_REV}
            rowWORKING_TYPERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWORKING_TYPERow)
            Return rowWORKING_TYPERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As WORKING_TYPERow
            Return CType(Me.Rows.Find(New Object() {ID}),WORKING_TYPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WORKING_TYPEDataTable = CType(MyBase.Clone,WORKING_TYPEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WORKING_TYPEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnWORKING_TYPE_NAME = MyBase.Columns("WORKING_TYPE_NAME")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnWORKING_TYPE_NAME = New Global.System.Data.DataColumn("WORKING_TYPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_NAME)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnSEQ.AllowDBNull = false
            Me.columnWORKING_TYPE_NAME.AllowDBNull = false
            Me.columnWORKING_TYPE_NAME.MaxLength = 255
            Me.columnMAX_REV.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWORKING_TYPERow() As WORKING_TYPERow
            Return CType(Me.NewRow,WORKING_TYPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WORKING_TYPERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WORKING_TYPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WORKING_TYPERowChangedEvent) Is Nothing) Then
                RaiseEvent WORKING_TYPERowChanged(Me, New WORKING_TYPERowChangeEvent(CType(e.Row,WORKING_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WORKING_TYPERowChangingEvent) Is Nothing) Then
                RaiseEvent WORKING_TYPERowChanging(Me, New WORKING_TYPERowChangeEvent(CType(e.Row,WORKING_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WORKING_TYPERowDeletedEvent) Is Nothing) Then
                RaiseEvent WORKING_TYPERowDeleted(Me, New WORKING_TYPERowChangeEvent(CType(e.Row,WORKING_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WORKING_TYPERowDeletingEvent) Is Nothing) Then
                RaiseEvent WORKING_TYPERowDeleting(Me, New WORKING_TYPERowChangeEvent(CType(e.Row,WORKING_TYPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWORKING_TYPERow(ByVal row As WORKING_TYPERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WORKING_TYPEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WORKING_DATA_STRDataTable
        Inherits Global.System.Data.TypedTableBase(Of WORKING_DATA_STRRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnWORKING_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WORKING_DATA_STR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WORKING_DATA_STRRow
            Get
                Return CType(Me.Rows(index),WORKING_DATA_STRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_STRRowChanging As WORKING_DATA_STRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_STRRowChanged As WORKING_DATA_STRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_STRRowDeleting As WORKING_DATA_STRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_STRRowDeleted As WORKING_DATA_STRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWORKING_DATA_STRRow(ByVal row As WORKING_DATA_STRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWORKING_DATA_STRRow(ByVal parentENGINE_LISTRowByFK_WORKING_DATA_STR_ENGINE_LIST As ENGINE_LISTRow, ByVal parentWORKING_COLUMNSRowByFK_WORKING_DATA_STR_WORKING_COLUMNS As WORKING_COLUMNSRow, ByVal REV_NO As Integer, ByVal DATA As String, ByVal REVISE_DATE As Date) As WORKING_DATA_STRRow
            Dim rowWORKING_DATA_STRRow As WORKING_DATA_STRRow = CType(Me.NewRow,WORKING_DATA_STRRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, DATA, REVISE_DATE}
            If (Not (parentENGINE_LISTRowByFK_WORKING_DATA_STR_ENGINE_LIST) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_WORKING_DATA_STR_ENGINE_LIST(0)
            End If
            If (Not (parentWORKING_COLUMNSRowByFK_WORKING_DATA_STR_WORKING_COLUMNS) Is Nothing) Then
                columnValuesArray(1) = parentWORKING_COLUMNSRowByFK_WORKING_DATA_STR_WORKING_COLUMNS(0)
            End If
            rowWORKING_DATA_STRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWORKING_DATA_STRRow)
            Return rowWORKING_DATA_STRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDWORKING_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As WORKING_DATA_STRRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, WORKING_COLUMNS_ID, REV_NO}),WORKING_DATA_STRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WORKING_DATA_STRDataTable = CType(MyBase.Clone,WORKING_DATA_STRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WORKING_DATA_STRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnWORKING_COLUMNS_ID = MyBase.Columns("WORKING_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnWORKING_COLUMNS_ID = New Global.System.Data.DataColumn("WORKING_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnWORKING_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnWORKING_COLUMNS_ID.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnDATA.AllowDBNull = false
            Me.columnDATA.MaxLength = 255
            Me.columnREVISE_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWORKING_DATA_STRRow() As WORKING_DATA_STRRow
            Return CType(Me.NewRow,WORKING_DATA_STRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WORKING_DATA_STRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WORKING_DATA_STRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WORKING_DATA_STRRowChangedEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_STRRowChanged(Me, New WORKING_DATA_STRRowChangeEvent(CType(e.Row,WORKING_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WORKING_DATA_STRRowChangingEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_STRRowChanging(Me, New WORKING_DATA_STRRowChangeEvent(CType(e.Row,WORKING_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WORKING_DATA_STRRowDeletedEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_STRRowDeleted(Me, New WORKING_DATA_STRRowChangeEvent(CType(e.Row,WORKING_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WORKING_DATA_STRRowDeletingEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_STRRowDeleting(Me, New WORKING_DATA_STRRowChangeEvent(CType(e.Row,WORKING_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWORKING_DATA_STRRow(ByVal row As WORKING_DATA_STRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WORKING_DATA_STRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_SETTING_COLUMNSDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_SETTING_COLUMNSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnDATA_TYPE As Global.System.Data.DataColumn
        
        Private columnCOLUMN_REGEX As Global.System.Data.DataColumn
        
        Private columnCAN_EDIT As Global.System.Data.DataColumn
        
        Private columnCAN_ADD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_SETTING_COLUMNS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATA_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_REGEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_REGEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAN_EDITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAN_EDIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAN_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAN_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_SETTING_COLUMNSRow
            Get
                Return CType(Me.Rows(index),V_SETTING_COLUMNSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_SETTING_COLUMNSRowChanging As V_SETTING_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_SETTING_COLUMNSRowChanged As V_SETTING_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_SETTING_COLUMNSRowDeleting As V_SETTING_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_SETTING_COLUMNSRowDeleted As V_SETTING_COLUMNSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddV_SETTING_COLUMNSRow(ByVal row As V_SETTING_COLUMNSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddV_SETTING_COLUMNSRow(ByVal SEQ As Integer, ByVal COLUMN_NAME As String, ByVal DATA_TYPE As Byte, ByVal COLUMN_REGEX As String, ByVal CAN_EDIT As Boolean, ByVal CAN_ADD As Boolean) As V_SETTING_COLUMNSRow
            Dim rowV_SETTING_COLUMNSRow As V_SETTING_COLUMNSRow = CType(Me.NewRow,V_SETTING_COLUMNSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SEQ, COLUMN_NAME, DATA_TYPE, COLUMN_REGEX, CAN_EDIT, CAN_ADD}
            rowV_SETTING_COLUMNSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_SETTING_COLUMNSRow)
            Return rowV_SETTING_COLUMNSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As V_SETTING_COLUMNSRow
            Return CType(Me.Rows.Find(New Object() {ID}),V_SETTING_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_SETTING_COLUMNSDataTable = CType(MyBase.Clone,V_SETTING_COLUMNSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_SETTING_COLUMNSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnDATA_TYPE = MyBase.Columns("DATA_TYPE")
            Me.columnCOLUMN_REGEX = MyBase.Columns("COLUMN_REGEX")
            Me.columnCAN_EDIT = MyBase.Columns("CAN_EDIT")
            Me.columnCAN_ADD = MyBase.Columns("CAN_ADD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnDATA_TYPE = New Global.System.Data.DataColumn("DATA_TYPE", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA_TYPE)
            Me.columnCOLUMN_REGEX = New Global.System.Data.DataColumn("COLUMN_REGEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_REGEX)
            Me.columnCAN_EDIT = New Global.System.Data.DataColumn("CAN_EDIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAN_EDIT)
            Me.columnCAN_ADD = New Global.System.Data.DataColumn("CAN_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAN_ADD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnSEQ.AllowDBNull = false
            Me.columnCOLUMN_NAME.AllowDBNull = false
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnDATA_TYPE.AllowDBNull = false
            Me.columnCOLUMN_REGEX.AllowDBNull = false
            Me.columnCOLUMN_REGEX.MaxLength = 255
            Me.columnCAN_EDIT.AllowDBNull = false
            Me.columnCAN_ADD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewV_SETTING_COLUMNSRow() As V_SETTING_COLUMNSRow
            Return CType(Me.NewRow,V_SETTING_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_SETTING_COLUMNSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_SETTING_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_SETTING_COLUMNSRowChangedEvent) Is Nothing) Then
                RaiseEvent V_SETTING_COLUMNSRowChanged(Me, New V_SETTING_COLUMNSRowChangeEvent(CType(e.Row,V_SETTING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_SETTING_COLUMNSRowChangingEvent) Is Nothing) Then
                RaiseEvent V_SETTING_COLUMNSRowChanging(Me, New V_SETTING_COLUMNSRowChangeEvent(CType(e.Row,V_SETTING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_SETTING_COLUMNSRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_SETTING_COLUMNSRowDeleted(Me, New V_SETTING_COLUMNSRowChangeEvent(CType(e.Row,V_SETTING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_SETTING_COLUMNSRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_SETTING_COLUMNSRowDeleting(Me, New V_SETTING_COLUMNSRowChangeEvent(CType(e.Row,V_SETTING_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveV_SETTING_COLUMNSRow(ByVal row As V_SETTING_COLUMNSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_SETTING_COLUMNSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WORKING_DATA_INTDataTable
        Inherits Global.System.Data.TypedTableBase(Of WORKING_DATA_INTRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnWORKING_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WORKING_DATA_INT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WORKING_DATA_INTRow
            Get
                Return CType(Me.Rows(index),WORKING_DATA_INTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_INTRowChanging As WORKING_DATA_INTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_INTRowChanged As WORKING_DATA_INTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_INTRowDeleting As WORKING_DATA_INTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_INTRowDeleted As WORKING_DATA_INTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWORKING_DATA_INTRow(ByVal row As WORKING_DATA_INTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWORKING_DATA_INTRow(ByVal parentENGINE_LISTRowByFK_WORKING_DATA_INT_ENGINE_LIST As ENGINE_LISTRow, ByVal parentWORKING_COLUMNSRowByFK_WORKING_DATA_INT_WORKING_COLUMNS As WORKING_COLUMNSRow, ByVal REV_NO As Integer, ByVal DATA As Integer, ByVal REVISE_DATE As Date) As WORKING_DATA_INTRow
            Dim rowWORKING_DATA_INTRow As WORKING_DATA_INTRow = CType(Me.NewRow,WORKING_DATA_INTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, DATA, REVISE_DATE}
            If (Not (parentENGINE_LISTRowByFK_WORKING_DATA_INT_ENGINE_LIST) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_WORKING_DATA_INT_ENGINE_LIST(0)
            End If
            If (Not (parentWORKING_COLUMNSRowByFK_WORKING_DATA_INT_WORKING_COLUMNS) Is Nothing) Then
                columnValuesArray(1) = parentWORKING_COLUMNSRowByFK_WORKING_DATA_INT_WORKING_COLUMNS(0)
            End If
            rowWORKING_DATA_INTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWORKING_DATA_INTRow)
            Return rowWORKING_DATA_INTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDWORKING_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As WORKING_DATA_INTRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, WORKING_COLUMNS_ID, REV_NO}),WORKING_DATA_INTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WORKING_DATA_INTDataTable = CType(MyBase.Clone,WORKING_DATA_INTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WORKING_DATA_INTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnWORKING_COLUMNS_ID = MyBase.Columns("WORKING_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnWORKING_COLUMNS_ID = New Global.System.Data.DataColumn("WORKING_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnWORKING_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnWORKING_COLUMNS_ID.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnDATA.AllowDBNull = false
            Me.columnREVISE_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWORKING_DATA_INTRow() As WORKING_DATA_INTRow
            Return CType(Me.NewRow,WORKING_DATA_INTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WORKING_DATA_INTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WORKING_DATA_INTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WORKING_DATA_INTRowChangedEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_INTRowChanged(Me, New WORKING_DATA_INTRowChangeEvent(CType(e.Row,WORKING_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WORKING_DATA_INTRowChangingEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_INTRowChanging(Me, New WORKING_DATA_INTRowChangeEvent(CType(e.Row,WORKING_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WORKING_DATA_INTRowDeletedEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_INTRowDeleted(Me, New WORKING_DATA_INTRowChangeEvent(CType(e.Row,WORKING_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WORKING_DATA_INTRowDeletingEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_INTRowDeleting(Me, New WORKING_DATA_INTRowChangeEvent(CType(e.Row,WORKING_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWORKING_DATA_INTRow(ByVal row As WORKING_DATA_INTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WORKING_DATA_INTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WORKING_DATA_DATETIMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of WORKING_DATA_DATETIMERow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnWORKING_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WORKING_DATA_DATETIME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WORKING_DATA_DATETIMERow
            Get
                Return CType(Me.Rows(index),WORKING_DATA_DATETIMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_DATETIMERowChanging As WORKING_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_DATETIMERowChanged As WORKING_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_DATETIMERowDeleting As WORKING_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event WORKING_DATA_DATETIMERowDeleted As WORKING_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWORKING_DATA_DATETIMERow(ByVal row As WORKING_DATA_DATETIMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWORKING_DATA_DATETIMERow(ByVal parentENGINE_LISTRowByFK_WORKING_DATA_DATETIME_ENGINE_LIST As ENGINE_LISTRow, ByVal parentWORKING_COLUMNSRowByFK_WORKING_DATA_DATETIME_WORKING_COLUMNS As WORKING_COLUMNSRow, ByVal REV_NO As Integer, ByVal DATA As Date, ByVal REVISE_DATE As Date) As WORKING_DATA_DATETIMERow
            Dim rowWORKING_DATA_DATETIMERow As WORKING_DATA_DATETIMERow = CType(Me.NewRow,WORKING_DATA_DATETIMERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, DATA, REVISE_DATE}
            If (Not (parentENGINE_LISTRowByFK_WORKING_DATA_DATETIME_ENGINE_LIST) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_WORKING_DATA_DATETIME_ENGINE_LIST(0)
            End If
            If (Not (parentWORKING_COLUMNSRowByFK_WORKING_DATA_DATETIME_WORKING_COLUMNS) Is Nothing) Then
                columnValuesArray(1) = parentWORKING_COLUMNSRowByFK_WORKING_DATA_DATETIME_WORKING_COLUMNS(0)
            End If
            rowWORKING_DATA_DATETIMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWORKING_DATA_DATETIMERow)
            Return rowWORKING_DATA_DATETIMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDWORKING_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As WORKING_DATA_DATETIMERow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, WORKING_COLUMNS_ID, REV_NO}),WORKING_DATA_DATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WORKING_DATA_DATETIMEDataTable = CType(MyBase.Clone,WORKING_DATA_DATETIMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WORKING_DATA_DATETIMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnWORKING_COLUMNS_ID = MyBase.Columns("WORKING_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnWORKING_COLUMNS_ID = New Global.System.Data.DataColumn("WORKING_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnWORKING_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnWORKING_COLUMNS_ID.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnDATA.AllowDBNull = false
            Me.columnREVISE_DATE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWORKING_DATA_DATETIMERow() As WORKING_DATA_DATETIMERow
            Return CType(Me.NewRow,WORKING_DATA_DATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WORKING_DATA_DATETIMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WORKING_DATA_DATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WORKING_DATA_DATETIMERowChangedEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_DATETIMERowChanged(Me, New WORKING_DATA_DATETIMERowChangeEvent(CType(e.Row,WORKING_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WORKING_DATA_DATETIMERowChangingEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_DATETIMERowChanging(Me, New WORKING_DATA_DATETIMERowChangeEvent(CType(e.Row,WORKING_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WORKING_DATA_DATETIMERowDeletedEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_DATETIMERowDeleted(Me, New WORKING_DATA_DATETIMERowChangeEvent(CType(e.Row,WORKING_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WORKING_DATA_DATETIMERowDeletingEvent) Is Nothing) Then
                RaiseEvent WORKING_DATA_DATETIMERowDeleting(Me, New WORKING_DATA_DATETIMERowChangeEvent(CType(e.Row,WORKING_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWORKING_DATA_DATETIMERow(ByVal row As WORKING_DATA_DATETIMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WORKING_DATA_DATETIMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRACE_COLUMNSDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRACE_COLUMNSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnDATA_TYPE As Global.System.Data.DataColumn
        
        Private columnCOLUMN_REGEX As Global.System.Data.DataColumn
        
        Private columnCAN_EDIT As Global.System.Data.DataColumn
        
        Private columnCAN_ADD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRACE_COLUMNS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATA_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_REGEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_REGEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAN_EDITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAN_EDIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAN_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAN_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRACE_COLUMNSRow
            Get
                Return CType(Me.Rows(index),TRACE_COLUMNSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_COLUMNSRowChanging As TRACE_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_COLUMNSRowChanged As TRACE_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_COLUMNSRowDeleting As TRACE_COLUMNSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_COLUMNSRowDeleted As TRACE_COLUMNSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRACE_COLUMNSRow(ByVal row As TRACE_COLUMNSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRACE_COLUMNSRow(ByVal SEQ As Integer, ByVal COLUMN_NAME As String, ByVal DATA_TYPE As Byte, ByVal COLUMN_REGEX As String, ByVal CAN_EDIT As Boolean, ByVal CAN_ADD As Boolean) As TRACE_COLUMNSRow
            Dim rowTRACE_COLUMNSRow As TRACE_COLUMNSRow = CType(Me.NewRow,TRACE_COLUMNSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SEQ, COLUMN_NAME, DATA_TYPE, COLUMN_REGEX, CAN_EDIT, CAN_ADD}
            rowTRACE_COLUMNSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRACE_COLUMNSRow)
            Return rowTRACE_COLUMNSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As TRACE_COLUMNSRow
            Return CType(Me.Rows.Find(New Object() {ID}),TRACE_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRACE_COLUMNSDataTable = CType(MyBase.Clone,TRACE_COLUMNSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRACE_COLUMNSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnDATA_TYPE = MyBase.Columns("DATA_TYPE")
            Me.columnCOLUMN_REGEX = MyBase.Columns("COLUMN_REGEX")
            Me.columnCAN_EDIT = MyBase.Columns("CAN_EDIT")
            Me.columnCAN_ADD = MyBase.Columns("CAN_ADD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnDATA_TYPE = New Global.System.Data.DataColumn("DATA_TYPE", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA_TYPE)
            Me.columnCOLUMN_REGEX = New Global.System.Data.DataColumn("COLUMN_REGEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_REGEX)
            Me.columnCAN_EDIT = New Global.System.Data.DataColumn("CAN_EDIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAN_EDIT)
            Me.columnCAN_ADD = New Global.System.Data.DataColumn("CAN_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAN_ADD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnSEQ.AllowDBNull = false
            Me.columnCOLUMN_NAME.AllowDBNull = false
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnDATA_TYPE.AllowDBNull = false
            Me.columnCOLUMN_REGEX.AllowDBNull = false
            Me.columnCOLUMN_REGEX.MaxLength = 255
            Me.columnCAN_EDIT.AllowDBNull = false
            Me.columnCAN_ADD.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRACE_COLUMNSRow() As TRACE_COLUMNSRow
            Return CType(Me.NewRow,TRACE_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRACE_COLUMNSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRACE_COLUMNSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRACE_COLUMNSRowChangedEvent) Is Nothing) Then
                RaiseEvent TRACE_COLUMNSRowChanged(Me, New TRACE_COLUMNSRowChangeEvent(CType(e.Row,TRACE_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRACE_COLUMNSRowChangingEvent) Is Nothing) Then
                RaiseEvent TRACE_COLUMNSRowChanging(Me, New TRACE_COLUMNSRowChangeEvent(CType(e.Row,TRACE_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRACE_COLUMNSRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRACE_COLUMNSRowDeleted(Me, New TRACE_COLUMNSRowChangeEvent(CType(e.Row,TRACE_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRACE_COLUMNSRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRACE_COLUMNSRowDeleting(Me, New TRACE_COLUMNSRowChangeEvent(CType(e.Row,TRACE_COLUMNSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRACE_COLUMNSRow(ByVal row As TRACE_COLUMNSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRACE_COLUMNSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRACE_DATA_STRDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRACE_DATA_STRRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRACE_DATA_STR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRACE_DATA_STRRow
            Get
                Return CType(Me.Rows(index),TRACE_DATA_STRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_STRRowChanging As TRACE_DATA_STRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_STRRowChanged As TRACE_DATA_STRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_STRRowDeleting As TRACE_DATA_STRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_STRRowDeleted As TRACE_DATA_STRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRACE_DATA_STRRow(ByVal row As TRACE_DATA_STRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRACE_DATA_STRRow(ByVal parentENGINE_LISTRowByFK_TRACE_DATA_STR_ENGINE_LIST As ENGINE_LISTRow, ByVal parentTRACE_COLUMNSRowByFK_TRACE_DATA_STR_TRACE_COLUMNS As TRACE_COLUMNSRow, ByVal REV_NO As Integer, ByVal DATA As String, ByVal REVISE_DATE As Date) As TRACE_DATA_STRRow
            Dim rowTRACE_DATA_STRRow As TRACE_DATA_STRRow = CType(Me.NewRow,TRACE_DATA_STRRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, DATA, REVISE_DATE}
            If (Not (parentENGINE_LISTRowByFK_TRACE_DATA_STR_ENGINE_LIST) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_TRACE_DATA_STR_ENGINE_LIST(0)
            End If
            If (Not (parentTRACE_COLUMNSRowByFK_TRACE_DATA_STR_TRACE_COLUMNS) Is Nothing) Then
                columnValuesArray(1) = parentTRACE_COLUMNSRowByFK_TRACE_DATA_STR_TRACE_COLUMNS(0)
            End If
            rowTRACE_DATA_STRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRACE_DATA_STRRow)
            Return rowTRACE_DATA_STRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDTRACE_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As TRACE_DATA_STRRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, TRACE_COLUMNS_ID, REV_NO}),TRACE_DATA_STRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRACE_DATA_STRDataTable = CType(MyBase.Clone,TRACE_DATA_STRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRACE_DATA_STRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnTRACE_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnDATA.AllowDBNull = false
            Me.columnDATA.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRACE_DATA_STRRow() As TRACE_DATA_STRRow
            Return CType(Me.NewRow,TRACE_DATA_STRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRACE_DATA_STRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRACE_DATA_STRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRACE_DATA_STRRowChangedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_STRRowChanged(Me, New TRACE_DATA_STRRowChangeEvent(CType(e.Row,TRACE_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRACE_DATA_STRRowChangingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_STRRowChanging(Me, New TRACE_DATA_STRRowChangeEvent(CType(e.Row,TRACE_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRACE_DATA_STRRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_STRRowDeleted(Me, New TRACE_DATA_STRRowChangeEvent(CType(e.Row,TRACE_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRACE_DATA_STRRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_STRRowDeleting(Me, New TRACE_DATA_STRRowChangeEvent(CType(e.Row,TRACE_DATA_STRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRACE_DATA_STRRow(ByVal row As TRACE_DATA_STRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRACE_DATA_STRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRACE_DATA_INTDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRACE_DATA_INTRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRACE_DATA_INT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRACE_DATA_INTRow
            Get
                Return CType(Me.Rows(index),TRACE_DATA_INTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_INTRowChanging As TRACE_DATA_INTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_INTRowChanged As TRACE_DATA_INTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_INTRowDeleting As TRACE_DATA_INTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_INTRowDeleted As TRACE_DATA_INTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRACE_DATA_INTRow(ByVal row As TRACE_DATA_INTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRACE_DATA_INTRow(ByVal parentENGINE_LISTRowByFK_TRACE_DATA_INT_ENGINE_LIST As ENGINE_LISTRow, ByVal parentTRACE_COLUMNSRowByFK_TRACE_DATA_INT_TRACE_COLUMNS As TRACE_COLUMNSRow, ByVal REV_NO As Integer, ByVal DATA As Integer, ByVal REVISE_DATE As Date) As TRACE_DATA_INTRow
            Dim rowTRACE_DATA_INTRow As TRACE_DATA_INTRow = CType(Me.NewRow,TRACE_DATA_INTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, DATA, REVISE_DATE}
            If (Not (parentENGINE_LISTRowByFK_TRACE_DATA_INT_ENGINE_LIST) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_TRACE_DATA_INT_ENGINE_LIST(0)
            End If
            If (Not (parentTRACE_COLUMNSRowByFK_TRACE_DATA_INT_TRACE_COLUMNS) Is Nothing) Then
                columnValuesArray(1) = parentTRACE_COLUMNSRowByFK_TRACE_DATA_INT_TRACE_COLUMNS(0)
            End If
            rowTRACE_DATA_INTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRACE_DATA_INTRow)
            Return rowTRACE_DATA_INTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDTRACE_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As TRACE_DATA_INTRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, TRACE_COLUMNS_ID, REV_NO}),TRACE_DATA_INTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRACE_DATA_INTDataTable = CType(MyBase.Clone,TRACE_DATA_INTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRACE_DATA_INTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnTRACE_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnDATA.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRACE_DATA_INTRow() As TRACE_DATA_INTRow
            Return CType(Me.NewRow,TRACE_DATA_INTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRACE_DATA_INTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRACE_DATA_INTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRACE_DATA_INTRowChangedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_INTRowChanged(Me, New TRACE_DATA_INTRowChangeEvent(CType(e.Row,TRACE_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRACE_DATA_INTRowChangingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_INTRowChanging(Me, New TRACE_DATA_INTRowChangeEvent(CType(e.Row,TRACE_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRACE_DATA_INTRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_INTRowDeleted(Me, New TRACE_DATA_INTRowChangeEvent(CType(e.Row,TRACE_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRACE_DATA_INTRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_INTRowDeleting(Me, New TRACE_DATA_INTRowChangeEvent(CType(e.Row,TRACE_DATA_INTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRACE_DATA_INTRow(ByVal row As TRACE_DATA_INTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRACE_DATA_INTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRACE_DATA_DATETIMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRACE_DATA_DATETIMERow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRACE_DATA_DATETIME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRACE_DATA_DATETIMERow
            Get
                Return CType(Me.Rows(index),TRACE_DATA_DATETIMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_DATETIMERowChanging As TRACE_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_DATETIMERowChanged As TRACE_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_DATETIMERowDeleting As TRACE_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_DATETIMERowDeleted As TRACE_DATA_DATETIMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRACE_DATA_DATETIMERow(ByVal row As TRACE_DATA_DATETIMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRACE_DATA_DATETIMERow(ByVal parentENGINE_LISTRowByFK_TRACE_DATA_DATETIME_ENGINE_LIST As ENGINE_LISTRow, ByVal parentTRACE_COLUMNSRowByFK_TRACE_DATA_DATETIME_TRACE_COLUMNS As TRACE_COLUMNSRow, ByVal REV_NO As Integer, ByVal DATA As Date, ByVal REVISE_DATE As Date) As TRACE_DATA_DATETIMERow
            Dim rowTRACE_DATA_DATETIMERow As TRACE_DATA_DATETIMERow = CType(Me.NewRow,TRACE_DATA_DATETIMERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, DATA, REVISE_DATE}
            If (Not (parentENGINE_LISTRowByFK_TRACE_DATA_DATETIME_ENGINE_LIST) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_TRACE_DATA_DATETIME_ENGINE_LIST(0)
            End If
            If (Not (parentTRACE_COLUMNSRowByFK_TRACE_DATA_DATETIME_TRACE_COLUMNS) Is Nothing) Then
                columnValuesArray(1) = parentTRACE_COLUMNSRowByFK_TRACE_DATA_DATETIME_TRACE_COLUMNS(0)
            End If
            rowTRACE_DATA_DATETIMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRACE_DATA_DATETIMERow)
            Return rowTRACE_DATA_DATETIMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDTRACE_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As TRACE_DATA_DATETIMERow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, TRACE_COLUMNS_ID, REV_NO}),TRACE_DATA_DATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRACE_DATA_DATETIMEDataTable = CType(MyBase.Clone,TRACE_DATA_DATETIMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRACE_DATA_DATETIMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnTRACE_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnDATA.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRACE_DATA_DATETIMERow() As TRACE_DATA_DATETIMERow
            Return CType(Me.NewRow,TRACE_DATA_DATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRACE_DATA_DATETIMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRACE_DATA_DATETIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRACE_DATA_DATETIMERowChangedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_DATETIMERowChanged(Me, New TRACE_DATA_DATETIMERowChangeEvent(CType(e.Row,TRACE_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRACE_DATA_DATETIMERowChangingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_DATETIMERowChanging(Me, New TRACE_DATA_DATETIMERowChangeEvent(CType(e.Row,TRACE_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRACE_DATA_DATETIMERowDeletedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_DATETIMERowDeleted(Me, New TRACE_DATA_DATETIMERowChangeEvent(CType(e.Row,TRACE_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRACE_DATA_DATETIMERowDeletingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_DATETIMERowDeleting(Me, New TRACE_DATA_DATETIMERowChangeEvent(CType(e.Row,TRACE_DATA_DATETIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRACE_DATA_DATETIMERow(ByVal row As TRACE_DATA_DATETIMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRACE_DATA_DATETIMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_WORKING_DATA_STATICDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_WORKING_DATA_STATICRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_ID As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_NAME As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_SEQ As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_WORKING_DATA_STATIC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_SEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_WORKING_DATA_STATICRow
            Get
                Return CType(Me.Rows(index),V_WORKING_DATA_STATICRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_WORKING_DATA_STATICRowChanging As V_WORKING_DATA_STATICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_WORKING_DATA_STATICRowChanged As V_WORKING_DATA_STATICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_WORKING_DATA_STATICRowDeleting As V_WORKING_DATA_STATICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_WORKING_DATA_STATICRowDeleted As V_WORKING_DATA_STATICRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddV_WORKING_DATA_STATICRow(ByVal row As V_WORKING_DATA_STATICRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddV_WORKING_DATA_STATICRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date,  _
                    ByVal REV_NO As Integer,  _
                    ByVal WORKING_TYPE_ID As Integer,  _
                    ByVal WORKING_TYPE_NAME As String,  _
                    ByVal WORKING_TYPE_SEQ As Integer,  _
                    ByVal MAX_REV As Integer) As V_WORKING_DATA_STATICRow
            Dim rowV_WORKING_DATA_STATICRow As V_WORKING_DATA_STATICRow = CType(Me.NewRow,V_WORKING_DATA_STATICRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, REV_NO, WORKING_TYPE_ID, WORKING_TYPE_NAME, WORKING_TYPE_SEQ, MAX_REV}
            rowV_WORKING_DATA_STATICRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_WORKING_DATA_STATICRow)
            Return rowV_WORKING_DATA_STATICRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDREV_NOWORKING_TYPE_ID(ByVal ENGINE_ID As Integer, ByVal REV_NO As Integer, ByVal WORKING_TYPE_ID As Integer) As V_WORKING_DATA_STATICRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, REV_NO, WORKING_TYPE_ID}),V_WORKING_DATA_STATICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_WORKING_DATA_STATICDataTable = CType(MyBase.Clone,V_WORKING_DATA_STATICDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_WORKING_DATA_STATICDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnWORKING_TYPE_ID = MyBase.Columns("WORKING_TYPE_ID")
            Me.columnWORKING_TYPE_NAME = MyBase.Columns("WORKING_TYPE_NAME")
            Me.columnWORKING_TYPE_SEQ = MyBase.Columns("WORKING_TYPE_SEQ")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnWORKING_TYPE_ID = New Global.System.Data.DataColumn("WORKING_TYPE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_ID)
            Me.columnWORKING_TYPE_NAME = New Global.System.Data.DataColumn("WORKING_TYPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_NAME)
            Me.columnWORKING_TYPE_SEQ = New Global.System.Data.DataColumn("WORKING_TYPE_SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_SEQ)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnREV_NO, Me.columnWORKING_TYPE_ID}, true))
            Me.columnENGINE_ID.AutoIncrement = true
            Me.columnENGINE_ID.AutoIncrementSeed = -1
            Me.columnENGINE_ID.AutoIncrementStep = -1
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnWORKING_TYPE_ID.AllowDBNull = false
            Me.columnWORKING_TYPE_ID.ReadOnly = true
            Me.columnWORKING_TYPE_NAME.ReadOnly = true
            Me.columnWORKING_TYPE_NAME.MaxLength = 255
            Me.columnWORKING_TYPE_SEQ.ReadOnly = true
            Me.columnMAX_REV.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewV_WORKING_DATA_STATICRow() As V_WORKING_DATA_STATICRow
            Return CType(Me.NewRow,V_WORKING_DATA_STATICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_WORKING_DATA_STATICRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_WORKING_DATA_STATICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_WORKING_DATA_STATICRowChangedEvent) Is Nothing) Then
                RaiseEvent V_WORKING_DATA_STATICRowChanged(Me, New V_WORKING_DATA_STATICRowChangeEvent(CType(e.Row,V_WORKING_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_WORKING_DATA_STATICRowChangingEvent) Is Nothing) Then
                RaiseEvent V_WORKING_DATA_STATICRowChanging(Me, New V_WORKING_DATA_STATICRowChangeEvent(CType(e.Row,V_WORKING_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_WORKING_DATA_STATICRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_WORKING_DATA_STATICRowDeleted(Me, New V_WORKING_DATA_STATICRowChangeEvent(CType(e.Row,V_WORKING_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_WORKING_DATA_STATICRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_WORKING_DATA_STATICRowDeleting(Me, New V_WORKING_DATA_STATICRowChangeEvent(CType(e.Row,V_WORKING_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveV_WORKING_DATA_STATICRow(ByVal row As V_WORKING_DATA_STATICRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_WORKING_DATA_STATICDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FOR_CHECK_LIST_BOXDataTable
        Inherits Global.System.Data.TypedTableBase(Of FOR_CHECK_LIST_BOXRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_NAME As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FOR_CHECK_LIST_BOX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FOR_CHECK_LIST_BOXRow
            Get
                Return CType(Me.Rows(index),FOR_CHECK_LIST_BOXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FOR_CHECK_LIST_BOXRowChanging As FOR_CHECK_LIST_BOXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FOR_CHECK_LIST_BOXRowChanged As FOR_CHECK_LIST_BOXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FOR_CHECK_LIST_BOXRowDeleting As FOR_CHECK_LIST_BOXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FOR_CHECK_LIST_BOXRowDeleted As FOR_CHECK_LIST_BOXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFOR_CHECK_LIST_BOXRow(ByVal row As FOR_CHECK_LIST_BOXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFOR_CHECK_LIST_BOXRow(ByVal ID As Integer, ByVal SEQ As Integer, ByVal WORKING_TYPE_NAME As String, ByVal MAX_REV As Integer) As FOR_CHECK_LIST_BOXRow
            Dim rowFOR_CHECK_LIST_BOXRow As FOR_CHECK_LIST_BOXRow = CType(Me.NewRow,FOR_CHECK_LIST_BOXRow)
            Dim columnValuesArray() As Object = New Object() {ID, SEQ, WORKING_TYPE_NAME, MAX_REV}
            rowFOR_CHECK_LIST_BOXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFOR_CHECK_LIST_BOXRow)
            Return rowFOR_CHECK_LIST_BOXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FOR_CHECK_LIST_BOXDataTable = CType(MyBase.Clone,FOR_CHECK_LIST_BOXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FOR_CHECK_LIST_BOXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnWORKING_TYPE_NAME = MyBase.Columns("WORKING_TYPE_NAME")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnWORKING_TYPE_NAME = New Global.System.Data.DataColumn("WORKING_TYPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_NAME)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.columnID.ReadOnly = true
            Me.columnSEQ.ReadOnly = true
            Me.columnWORKING_TYPE_NAME.ReadOnly = true
            Me.columnWORKING_TYPE_NAME.MaxLength = 255
            Me.columnMAX_REV.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFOR_CHECK_LIST_BOXRow() As FOR_CHECK_LIST_BOXRow
            Return CType(Me.NewRow,FOR_CHECK_LIST_BOXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FOR_CHECK_LIST_BOXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FOR_CHECK_LIST_BOXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FOR_CHECK_LIST_BOXRowChangedEvent) Is Nothing) Then
                RaiseEvent FOR_CHECK_LIST_BOXRowChanged(Me, New FOR_CHECK_LIST_BOXRowChangeEvent(CType(e.Row,FOR_CHECK_LIST_BOXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FOR_CHECK_LIST_BOXRowChangingEvent) Is Nothing) Then
                RaiseEvent FOR_CHECK_LIST_BOXRowChanging(Me, New FOR_CHECK_LIST_BOXRowChangeEvent(CType(e.Row,FOR_CHECK_LIST_BOXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FOR_CHECK_LIST_BOXRowDeletedEvent) Is Nothing) Then
                RaiseEvent FOR_CHECK_LIST_BOXRowDeleted(Me, New FOR_CHECK_LIST_BOXRowChangeEvent(CType(e.Row,FOR_CHECK_LIST_BOXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FOR_CHECK_LIST_BOXRowDeletingEvent) Is Nothing) Then
                RaiseEvent FOR_CHECK_LIST_BOXRowDeleting(Me, New FOR_CHECK_LIST_BOXRowChangeEvent(CType(e.Row,FOR_CHECK_LIST_BOXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFOR_CHECK_LIST_BOXRow(ByVal row As FOR_CHECK_LIST_BOXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FOR_CHECK_LIST_BOXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_TRACE_DATA_STATICDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_TRACE_DATA_STATICRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnWORKING_TYPE_SEQ As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_TRACE_DATA_STATIC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WORKING_TYPE_SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWORKING_TYPE_SEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_TRACE_DATA_STATICRow
            Get
                Return CType(Me.Rows(index),V_TRACE_DATA_STATICRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_TRACE_DATA_STATICRowChanging As V_TRACE_DATA_STATICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_TRACE_DATA_STATICRowChanged As V_TRACE_DATA_STATICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_TRACE_DATA_STATICRowDeleting As V_TRACE_DATA_STATICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event V_TRACE_DATA_STATICRowDeleted As V_TRACE_DATA_STATICRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddV_TRACE_DATA_STATICRow(ByVal row As V_TRACE_DATA_STATICRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddV_TRACE_DATA_STATICRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date,  _
                    ByVal REV_NO As Integer,  _
                    ByVal TRACE_COLUMNS_ID As Integer,  _
                    ByVal COLUMN_NAME As String,  _
                    ByVal WORKING_TYPE_SEQ As Integer,  _
                    ByVal MAX_REV As Integer,  _
                    ByVal REVISE_DATE As Date) As V_TRACE_DATA_STATICRow
            Dim rowV_TRACE_DATA_STATICRow As V_TRACE_DATA_STATICRow = CType(Me.NewRow,V_TRACE_DATA_STATICRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, REV_NO, TRACE_COLUMNS_ID, COLUMN_NAME, WORKING_TYPE_SEQ, MAX_REV, REVISE_DATE}
            rowV_TRACE_DATA_STATICRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_TRACE_DATA_STATICRow)
            Return rowV_TRACE_DATA_STATICRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_ID(ByVal ENGINE_ID As Integer) As V_TRACE_DATA_STATICRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID}),V_TRACE_DATA_STATICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_TRACE_DATA_STATICDataTable = CType(MyBase.Clone,V_TRACE_DATA_STATICDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_TRACE_DATA_STATICDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnWORKING_TYPE_SEQ = MyBase.Columns("WORKING_TYPE_SEQ")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnWORKING_TYPE_SEQ = New Global.System.Data.DataColumn("WORKING_TYPE_SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWORKING_TYPE_SEQ)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID}, true))
            Me.columnENGINE_ID.AutoIncrement = true
            Me.columnENGINE_ID.AutoIncrementSeed = -1
            Me.columnENGINE_ID.AutoIncrementStep = -1
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnENGINE_ID.Unique = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnTRACE_COLUMNS_ID.ReadOnly = true
            Me.columnCOLUMN_NAME.ReadOnly = true
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnWORKING_TYPE_SEQ.ReadOnly = true
            Me.columnMAX_REV.ReadOnly = true
            Me.columnREVISE_DATE.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewV_TRACE_DATA_STATICRow() As V_TRACE_DATA_STATICRow
            Return CType(Me.NewRow,V_TRACE_DATA_STATICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_TRACE_DATA_STATICRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_TRACE_DATA_STATICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_TRACE_DATA_STATICRowChangedEvent) Is Nothing) Then
                RaiseEvent V_TRACE_DATA_STATICRowChanged(Me, New V_TRACE_DATA_STATICRowChangeEvent(CType(e.Row,V_TRACE_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_TRACE_DATA_STATICRowChangingEvent) Is Nothing) Then
                RaiseEvent V_TRACE_DATA_STATICRowChanging(Me, New V_TRACE_DATA_STATICRowChangeEvent(CType(e.Row,V_TRACE_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_TRACE_DATA_STATICRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_TRACE_DATA_STATICRowDeleted(Me, New V_TRACE_DATA_STATICRowChangeEvent(CType(e.Row,V_TRACE_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_TRACE_DATA_STATICRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_TRACE_DATA_STATICRowDeleting(Me, New V_TRACE_DATA_STATICRowChangeEvent(CType(e.Row,V_TRACE_DATA_STATICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveV_TRACE_DATA_STATICRow(ByVal row As V_TRACE_DATA_STATICRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_TRACE_DATA_STATICDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SERIAL_NO_PART_NO_SHOWDataTable
        Inherits Global.System.Data.TypedTableBase(Of SERIAL_NO_PART_NO_SHOWRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        Private columnPART_NAME As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnMODEL_LOT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SERIAL_NO_PART_NO_SHOW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PART_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_LOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_LOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SERIAL_NO_PART_NO_SHOWRow
            Get
                Return CType(Me.Rows(index),SERIAL_NO_PART_NO_SHOWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_SHOWRowChanging As SERIAL_NO_PART_NO_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_SHOWRowChanged As SERIAL_NO_PART_NO_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_SHOWRowDeleting As SERIAL_NO_PART_NO_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_SHOWRowDeleted As SERIAL_NO_PART_NO_SHOWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSERIAL_NO_PART_NO_SHOWRow(ByVal row As SERIAL_NO_PART_NO_SHOWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSERIAL_NO_PART_NO_SHOWRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date,  _
                    ByVal REV_NO As Integer,  _
                    ByVal TRACE_COLUMNS_ID As Integer,  _
                    ByVal COLUMN_NAME As String,  _
                    ByVal MAX_REV As Integer,  _
                    ByVal REVISE_DATE As Date,  _
                    ByVal PART_NAME As String,  _
                    ByVal DATA As String,  _
                    ByVal SEQ As Integer,  _
                    ByVal MODEL_LOT As String) As SERIAL_NO_PART_NO_SHOWRow
            Dim rowSERIAL_NO_PART_NO_SHOWRow As SERIAL_NO_PART_NO_SHOWRow = CType(Me.NewRow,SERIAL_NO_PART_NO_SHOWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, REV_NO, TRACE_COLUMNS_ID, COLUMN_NAME, MAX_REV, REVISE_DATE, PART_NAME, DATA, SEQ, MODEL_LOT}
            rowSERIAL_NO_PART_NO_SHOWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSERIAL_NO_PART_NO_SHOWRow)
            Return rowSERIAL_NO_PART_NO_SHOWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDTRACE_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As SERIAL_NO_PART_NO_SHOWRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, TRACE_COLUMNS_ID, REV_NO}),SERIAL_NO_PART_NO_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SERIAL_NO_PART_NO_SHOWDataTable = CType(MyBase.Clone,SERIAL_NO_PART_NO_SHOWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SERIAL_NO_PART_NO_SHOWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
            Me.columnPART_NAME = MyBase.Columns("PART_NAME")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnMODEL_LOT = MyBase.Columns("MODEL_LOT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.columnPART_NAME = New Global.System.Data.DataColumn("PART_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_NAME)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnMODEL_LOT = New Global.System.Data.DataColumn("MODEL_LOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_LOT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnTRACE_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AutoIncrement = true
            Me.columnENGINE_ID.AutoIncrementSeed = -1
            Me.columnENGINE_ID.AutoIncrementStep = -1
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.ReadOnly = true
            Me.columnCOLUMN_NAME.ReadOnly = true
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnMAX_REV.ReadOnly = true
            Me.columnREVISE_DATE.ReadOnly = true
            Me.columnPART_NAME.ReadOnly = true
            Me.columnPART_NAME.MaxLength = 255
            Me.columnDATA.ReadOnly = true
            Me.columnDATA.MaxLength = 255
            Me.columnSEQ.ReadOnly = true
            Me.columnMODEL_LOT.ReadOnly = true
            Me.columnMODEL_LOT.MaxLength = 13
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSERIAL_NO_PART_NO_SHOWRow() As SERIAL_NO_PART_NO_SHOWRow
            Return CType(Me.NewRow,SERIAL_NO_PART_NO_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SERIAL_NO_PART_NO_SHOWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SERIAL_NO_PART_NO_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SERIAL_NO_PART_NO_SHOWRowChangedEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_SHOWRowChanged(Me, New SERIAL_NO_PART_NO_SHOWRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SERIAL_NO_PART_NO_SHOWRowChangingEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_SHOWRowChanging(Me, New SERIAL_NO_PART_NO_SHOWRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SERIAL_NO_PART_NO_SHOWRowDeletedEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_SHOWRowDeleted(Me, New SERIAL_NO_PART_NO_SHOWRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SERIAL_NO_PART_NO_SHOWRowDeletingEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_SHOWRowDeleting(Me, New SERIAL_NO_PART_NO_SHOWRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSERIAL_NO_PART_NO_SHOWRow(ByVal row As SERIAL_NO_PART_NO_SHOWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SERIAL_NO_PART_NO_SHOWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SERIAL_NO_PART_NO_HISTORYDataTable
        Inherits Global.System.Data.TypedTableBase(Of SERIAL_NO_PART_NO_HISTORYRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SERIAL_NO_PART_NO_HISTORY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SERIAL_NO_PART_NO_HISTORYRow
            Get
                Return CType(Me.Rows(index),SERIAL_NO_PART_NO_HISTORYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_HISTORYRowChanging As SERIAL_NO_PART_NO_HISTORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_HISTORYRowChanged As SERIAL_NO_PART_NO_HISTORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_HISTORYRowDeleting As SERIAL_NO_PART_NO_HISTORYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SERIAL_NO_PART_NO_HISTORYRowDeleted As SERIAL_NO_PART_NO_HISTORYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSERIAL_NO_PART_NO_HISTORYRow(ByVal row As SERIAL_NO_PART_NO_HISTORYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSERIAL_NO_PART_NO_HISTORYRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date,  _
                    ByVal REV_NO As Integer,  _
                    ByVal MAX_REV As Integer,  _
                    ByVal REVISE_DATE As Date) As SERIAL_NO_PART_NO_HISTORYRow
            Dim rowSERIAL_NO_PART_NO_HISTORYRow As SERIAL_NO_PART_NO_HISTORYRow = CType(Me.NewRow,SERIAL_NO_PART_NO_HISTORYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, REV_NO, MAX_REV, REVISE_DATE}
            rowSERIAL_NO_PART_NO_HISTORYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSERIAL_NO_PART_NO_HISTORYRow)
            Return rowSERIAL_NO_PART_NO_HISTORYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal REV_NO As Integer) As SERIAL_NO_PART_NO_HISTORYRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, REV_NO}),SERIAL_NO_PART_NO_HISTORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SERIAL_NO_PART_NO_HISTORYDataTable = CType(MyBase.Clone,SERIAL_NO_PART_NO_HISTORYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SERIAL_NO_PART_NO_HISTORYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AutoIncrement = true
            Me.columnENGINE_ID.AutoIncrementSeed = -1
            Me.columnENGINE_ID.AutoIncrementStep = -1
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnMAX_REV.ReadOnly = true
            Me.columnREVISE_DATE.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSERIAL_NO_PART_NO_HISTORYRow() As SERIAL_NO_PART_NO_HISTORYRow
            Return CType(Me.NewRow,SERIAL_NO_PART_NO_HISTORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SERIAL_NO_PART_NO_HISTORYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SERIAL_NO_PART_NO_HISTORYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SERIAL_NO_PART_NO_HISTORYRowChangedEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_HISTORYRowChanged(Me, New SERIAL_NO_PART_NO_HISTORYRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SERIAL_NO_PART_NO_HISTORYRowChangingEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_HISTORYRowChanging(Me, New SERIAL_NO_PART_NO_HISTORYRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SERIAL_NO_PART_NO_HISTORYRowDeletedEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_HISTORYRowDeleted(Me, New SERIAL_NO_PART_NO_HISTORYRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SERIAL_NO_PART_NO_HISTORYRowDeletingEvent) Is Nothing) Then
                RaiseEvent SERIAL_NO_PART_NO_HISTORYRowDeleting(Me, New SERIAL_NO_PART_NO_HISTORYRowChangeEvent(CType(e.Row,SERIAL_NO_PART_NO_HISTORYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSERIAL_NO_PART_NO_HISTORYRow(ByVal row As SERIAL_NO_PART_NO_HISTORYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SERIAL_NO_PART_NO_HISTORYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRACE_DATA_MIXDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRACE_DATA_MIXRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        Private columnSRC As Global.System.Data.DataColumn
        
        Private columnPART_NAME As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRACE_DATA_MIX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SRCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PART_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRACE_DATA_MIXRow
            Get
                Return CType(Me.Rows(index),TRACE_DATA_MIXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_MIXRowChanging As TRACE_DATA_MIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_MIXRowChanged As TRACE_DATA_MIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_MIXRowDeleting As TRACE_DATA_MIXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_DATA_MIXRowDeleted As TRACE_DATA_MIXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRACE_DATA_MIXRow(ByVal row As TRACE_DATA_MIXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRACE_DATA_MIXRow(ByVal parentENGINE_LISTRowByFK_TRACE_DATA_STR_ENGINE_LIST1 As ENGINE_LISTRow, ByVal parentTRACE_COLUMNSRowByFK_TRACE_DATA_STR_TRACE_COLUMNS1 As TRACE_COLUMNSRow, ByVal REV_NO As Integer, ByVal REVISE_DATE As Date, ByVal SRC As String, ByVal PART_NAME As String, ByVal DATA As Object) As TRACE_DATA_MIXRow
            Dim rowTRACE_DATA_MIXRow As TRACE_DATA_MIXRow = CType(Me.NewRow,TRACE_DATA_MIXRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, REV_NO, REVISE_DATE, SRC, PART_NAME, DATA}
            If (Not (parentENGINE_LISTRowByFK_TRACE_DATA_STR_ENGINE_LIST1) Is Nothing) Then
                columnValuesArray(0) = parentENGINE_LISTRowByFK_TRACE_DATA_STR_ENGINE_LIST1(0)
            End If
            If (Not (parentTRACE_COLUMNSRowByFK_TRACE_DATA_STR_TRACE_COLUMNS1) Is Nothing) Then
                columnValuesArray(1) = parentTRACE_COLUMNSRowByFK_TRACE_DATA_STR_TRACE_COLUMNS1(0)
            End If
            rowTRACE_DATA_MIXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRACE_DATA_MIXRow)
            Return rowTRACE_DATA_MIXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDTRACE_COLUMNS_IDREV_NO(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer) As TRACE_DATA_MIXRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, TRACE_COLUMNS_ID, REV_NO}),TRACE_DATA_MIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRACE_DATA_MIXDataTable = CType(MyBase.Clone,TRACE_DATA_MIXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRACE_DATA_MIXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
            Me.columnSRC = MyBase.Columns("SRC")
            Me.columnPART_NAME = MyBase.Columns("PART_NAME")
            Me.columnDATA = MyBase.Columns("DATA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.columnSRC = New Global.System.Data.DataColumn("SRC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRC)
            Me.columnPART_NAME = New Global.System.Data.DataColumn("PART_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_NAME)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnTRACE_COLUMNS_ID, Me.columnREV_NO}, true))
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.ReadOnly = true
            Me.columnREV_NO.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnREVISE_DATE.ReadOnly = true
            Me.columnSRC.ReadOnly = true
            Me.columnSRC.MaxLength = 3
            Me.columnPART_NAME.ReadOnly = true
            Me.columnPART_NAME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRACE_DATA_MIXRow() As TRACE_DATA_MIXRow
            Return CType(Me.NewRow,TRACE_DATA_MIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRACE_DATA_MIXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRACE_DATA_MIXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRACE_DATA_MIXRowChangedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_MIXRowChanged(Me, New TRACE_DATA_MIXRowChangeEvent(CType(e.Row,TRACE_DATA_MIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRACE_DATA_MIXRowChangingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_MIXRowChanging(Me, New TRACE_DATA_MIXRowChangeEvent(CType(e.Row,TRACE_DATA_MIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRACE_DATA_MIXRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_MIXRowDeleted(Me, New TRACE_DATA_MIXRowChangeEvent(CType(e.Row,TRACE_DATA_MIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRACE_DATA_MIXRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRACE_DATA_MIXRowDeleting(Me, New TRACE_DATA_MIXRowChangeEvent(CType(e.Row,TRACE_DATA_MIXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRACE_DATA_MIXRow(ByVal row As TRACE_DATA_MIXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRACE_DATA_MIXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SHORT_BLOCK_SERIAL_NO_SHOWDataTable
        Inherits Global.System.Data.TypedTableBase(Of SHORT_BLOCK_SERIAL_NO_SHOWRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        Private columnPART_NAME As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnMODEL_LOT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SHORT_BLOCK_SERIAL_NO_SHOW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PART_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_LOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_LOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SHORT_BLOCK_SERIAL_NO_SHOWRow
            Get
                Return CType(Me.Rows(index),SHORT_BLOCK_SERIAL_NO_SHOWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SHORT_BLOCK_SERIAL_NO_SHOWRowChanging As SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SHORT_BLOCK_SERIAL_NO_SHOWRowChanged As SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SHORT_BLOCK_SERIAL_NO_SHOWRowDeleting As SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SHORT_BLOCK_SERIAL_NO_SHOWRowDeleted As SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSHORT_BLOCK_SERIAL_NO_SHOWRow(ByVal row As SHORT_BLOCK_SERIAL_NO_SHOWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSHORT_BLOCK_SERIAL_NO_SHOWRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date,  _
                    ByVal REV_NO As Integer,  _
                    ByVal TRACE_COLUMNS_ID As Integer,  _
                    ByVal COLUMN_NAME As String,  _
                    ByVal SEQ As Integer,  _
                    ByVal MAX_REV As Integer,  _
                    ByVal REVISE_DATE As Date,  _
                    ByVal PART_NAME As String,  _
                    ByVal DATA As String,  _
                    ByVal MODEL_LOT As String) As SHORT_BLOCK_SERIAL_NO_SHOWRow
            Dim rowSHORT_BLOCK_SERIAL_NO_SHOWRow As SHORT_BLOCK_SERIAL_NO_SHOWRow = CType(Me.NewRow,SHORT_BLOCK_SERIAL_NO_SHOWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, REV_NO, TRACE_COLUMNS_ID, COLUMN_NAME, SEQ, MAX_REV, REVISE_DATE, PART_NAME, DATA, MODEL_LOT}
            rowSHORT_BLOCK_SERIAL_NO_SHOWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSHORT_BLOCK_SERIAL_NO_SHOWRow)
            Return rowSHORT_BLOCK_SERIAL_NO_SHOWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDREV_NOTRACE_COLUMNS_ID(ByVal ENGINE_ID As Integer, ByVal REV_NO As Integer, ByVal TRACE_COLUMNS_ID As Integer) As SHORT_BLOCK_SERIAL_NO_SHOWRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, REV_NO, TRACE_COLUMNS_ID}),SHORT_BLOCK_SERIAL_NO_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SHORT_BLOCK_SERIAL_NO_SHOWDataTable = CType(MyBase.Clone,SHORT_BLOCK_SERIAL_NO_SHOWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SHORT_BLOCK_SERIAL_NO_SHOWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
            Me.columnPART_NAME = MyBase.Columns("PART_NAME")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnMODEL_LOT = MyBase.Columns("MODEL_LOT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.columnPART_NAME = New Global.System.Data.DataColumn("PART_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART_NAME)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnMODEL_LOT = New Global.System.Data.DataColumn("MODEL_LOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_LOT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnREV_NO, Me.columnTRACE_COLUMNS_ID}, true))
            Me.columnENGINE_ID.AutoIncrement = true
            Me.columnENGINE_ID.AutoIncrementSeed = -1
            Me.columnENGINE_ID.AutoIncrementStep = -1
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.ReadOnly = true
            Me.columnCOLUMN_NAME.ReadOnly = true
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnSEQ.ReadOnly = true
            Me.columnMAX_REV.ReadOnly = true
            Me.columnREVISE_DATE.ReadOnly = true
            Me.columnPART_NAME.ReadOnly = true
            Me.columnPART_NAME.MaxLength = 255
            Me.columnDATA.ReadOnly = true
            Me.columnDATA.MaxLength = 255
            Me.columnMODEL_LOT.ReadOnly = true
            Me.columnMODEL_LOT.MaxLength = 13
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSHORT_BLOCK_SERIAL_NO_SHOWRow() As SHORT_BLOCK_SERIAL_NO_SHOWRow
            Return CType(Me.NewRow,SHORT_BLOCK_SERIAL_NO_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SHORT_BLOCK_SERIAL_NO_SHOWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SHORT_BLOCK_SERIAL_NO_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SHORT_BLOCK_SERIAL_NO_SHOWRowChangedEvent) Is Nothing) Then
                RaiseEvent SHORT_BLOCK_SERIAL_NO_SHOWRowChanged(Me, New SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEvent(CType(e.Row,SHORT_BLOCK_SERIAL_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SHORT_BLOCK_SERIAL_NO_SHOWRowChangingEvent) Is Nothing) Then
                RaiseEvent SHORT_BLOCK_SERIAL_NO_SHOWRowChanging(Me, New SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEvent(CType(e.Row,SHORT_BLOCK_SERIAL_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SHORT_BLOCK_SERIAL_NO_SHOWRowDeletedEvent) Is Nothing) Then
                RaiseEvent SHORT_BLOCK_SERIAL_NO_SHOWRowDeleted(Me, New SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEvent(CType(e.Row,SHORT_BLOCK_SERIAL_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SHORT_BLOCK_SERIAL_NO_SHOWRowDeletingEvent) Is Nothing) Then
                RaiseEvent SHORT_BLOCK_SERIAL_NO_SHOWRowDeleting(Me, New SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEvent(CType(e.Row,SHORT_BLOCK_SERIAL_NO_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSHORT_BLOCK_SERIAL_NO_SHOWRow(ByVal row As SHORT_BLOCK_SERIAL_NO_SHOWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SHORT_BLOCK_SERIAL_NO_SHOWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRACE_ABILITY_DATA_SHOWDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRACE_ABILITY_DATA_SHOWRow)
        
        Private columnENGINE_ID As Global.System.Data.DataColumn
        
        Private columnENGINE_TYPE As Global.System.Data.DataColumn
        
        Private columnENGINE_NO As Global.System.Data.DataColumn
        
        Private columnENGINE_ASM_NO As Global.System.Data.DataColumn
        
        Private columnBOOK As Global.System.Data.DataColumn
        
        Private columnYEAR As Global.System.Data.DataColumn
        
        Private columnMODEL_CODE As Global.System.Data.DataColumn
        
        Private columnLOT_NO As Global.System.Data.DataColumn
        
        Private columnUNIT_NO As Global.System.Data.DataColumn
        
        Private columnAT_MT As Global.System.Data.DataColumn
        
        Private columnEMISSION As Global.System.Data.DataColumn
        
        Private columnINJ_MODEL_CODE As Global.System.Data.DataColumn
        
        Private columnSPARE_001 As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_PARTS_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_SB_SERIAL_NO As Global.System.Data.DataColumn
        
        Private columnSB_DATA_GASKET_GRADE As Global.System.Data.DataColumn
        
        Private columnLINE_ON_TIME As Global.System.Data.DataColumn
        
        Private columnLINE_OFF_TIME As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_BCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CRT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_CTM As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_SBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_DPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_FWT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MALO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HDT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_CCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_HCT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_PPT As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE01 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE02 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE03 As Global.System.Data.DataColumn
        
        Private columnRPCOCF_MBLO_SPARE04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION02 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION03 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION04 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION05 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION06 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME01 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION11 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION12 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION13 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION14 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION15 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION16 As Global.System.Data.DataColumn
        
        Private columnINSPSJ_INSPECTION_TIME02 As Global.System.Data.DataColumn
        
        Private columnUPDATED_BY As Global.System.Data.DataColumn
        
        Private columnCREATED_WHEN As Global.System.Data.DataColumn
        
        Private columnUPDATED_WHEN As Global.System.Data.DataColumn
        
        Private columnREV_NO As Global.System.Data.DataColumn
        
        Private columnTRACE_COLUMNS_ID As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnSEQ As Global.System.Data.DataColumn
        
        Private columnMAX_REV As Global.System.Data.DataColumn
        
        Private columnREVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRACE_ABILITY_DATA_SHOW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENGINE_ASM_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENGINE_ASM_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BOOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AT_MTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAT_MT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INJ_MODEL_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJ_MODEL_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPARE_001Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPARE_001
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_PARTS_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_PARTS_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_SB_SERIAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_SB_SERIAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SB_DATA_GASKET_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSB_DATA_GASKET_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_ON_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_ON_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_OFF_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_OFF_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_BCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_BCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CRTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CRT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_CTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_CTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_SBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_SBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_DPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_DPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_FWTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_FWT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MALO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MALO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_CCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_CCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_HCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_HCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_PPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_PPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RPCOCF_MBLO_SPARE04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPCOCF_MBLO_SPARE04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSPSJ_INSPECTION_TIME02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSPSJ_INSPECTION_TIME02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDATED_WHENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATED_WHEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REV_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREV_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACE_COLUMNS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACE_COLUMNS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAX_REVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_REV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRACE_ABILITY_DATA_SHOWRow
            Get
                Return CType(Me.Rows(index),TRACE_ABILITY_DATA_SHOWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_ABILITY_DATA_SHOWRowChanging As TRACE_ABILITY_DATA_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_ABILITY_DATA_SHOWRowChanged As TRACE_ABILITY_DATA_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_ABILITY_DATA_SHOWRowDeleting As TRACE_ABILITY_DATA_SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRACE_ABILITY_DATA_SHOWRowDeleted As TRACE_ABILITY_DATA_SHOWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRACE_ABILITY_DATA_SHOWRow(ByVal row As TRACE_ABILITY_DATA_SHOWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRACE_ABILITY_DATA_SHOWRow( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Date,  _
                    ByVal REV_NO As Integer,  _
                    ByVal TRACE_COLUMNS_ID As Integer,  _
                    ByVal COLUMN_NAME As String,  _
                    ByVal SEQ As Integer,  _
                    ByVal MAX_REV As Integer,  _
                    ByVal REVISE_DATE As Date) As TRACE_ABILITY_DATA_SHOWRow
            Dim rowTRACE_ABILITY_DATA_SHOWRow As TRACE_ABILITY_DATA_SHOWRow = CType(Me.NewRow,TRACE_ABILITY_DATA_SHOWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, REV_NO, TRACE_COLUMNS_ID, COLUMN_NAME, SEQ, MAX_REV, REVISE_DATE}
            rowTRACE_ABILITY_DATA_SHOWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRACE_ABILITY_DATA_SHOWRow)
            Return rowTRACE_ABILITY_DATA_SHOWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByENGINE_IDREV_NOTRACE_COLUMNS_ID(ByVal ENGINE_ID As Integer, ByVal REV_NO As Integer, ByVal TRACE_COLUMNS_ID As Integer) As TRACE_ABILITY_DATA_SHOWRow
            Return CType(Me.Rows.Find(New Object() {ENGINE_ID, REV_NO, TRACE_COLUMNS_ID}),TRACE_ABILITY_DATA_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRACE_ABILITY_DATA_SHOWDataTable = CType(MyBase.Clone,TRACE_ABILITY_DATA_SHOWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRACE_ABILITY_DATA_SHOWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnENGINE_ID = MyBase.Columns("ENGINE_ID")
            Me.columnENGINE_TYPE = MyBase.Columns("ENGINE_TYPE")
            Me.columnENGINE_NO = MyBase.Columns("ENGINE_NO")
            Me.columnENGINE_ASM_NO = MyBase.Columns("ENGINE_ASM_NO")
            Me.columnBOOK = MyBase.Columns("BOOK")
            Me.columnYEAR = MyBase.Columns("YEAR")
            Me.columnMODEL_CODE = MyBase.Columns("MODEL_CODE")
            Me.columnLOT_NO = MyBase.Columns("LOT_NO")
            Me.columnUNIT_NO = MyBase.Columns("UNIT_NO")
            Me.columnAT_MT = MyBase.Columns("AT_MT")
            Me.columnEMISSION = MyBase.Columns("EMISSION")
            Me.columnINJ_MODEL_CODE = MyBase.Columns("INJ_MODEL_CODE")
            Me.columnSPARE_001 = MyBase.Columns("SPARE_001")
            Me.columnSB_DATA_SB_PARTS_NO = MyBase.Columns("SB_DATA_SB_PARTS_NO")
            Me.columnSB_DATA_SB_SERIAL_NO = MyBase.Columns("SB_DATA_SB_SERIAL_NO")
            Me.columnSB_DATA_GASKET_GRADE = MyBase.Columns("SB_DATA_GASKET_GRADE")
            Me.columnLINE_ON_TIME = MyBase.Columns("LINE_ON_TIME")
            Me.columnLINE_OFF_TIME = MyBase.Columns("LINE_OFF_TIME")
            Me.columnRPCOCF_SBLO_BCT = MyBase.Columns("RPCOCF_SBLO_BCT")
            Me.columnRPCOCF_SBLO_CRT = MyBase.Columns("RPCOCF_SBLO_CRT")
            Me.columnRPCOCF_SBLO_CTM = MyBase.Columns("RPCOCF_SBLO_CTM")
            Me.columnRPCOCF_SBLO_SPARE01 = MyBase.Columns("RPCOCF_SBLO_SPARE01")
            Me.columnRPCOCF_SBLO_SPARE02 = MyBase.Columns("RPCOCF_SBLO_SPARE02")
            Me.columnRPCOCF_SBLO_SPARE03 = MyBase.Columns("RPCOCF_SBLO_SPARE03")
            Me.columnRPCOCF_MALO_CCT = MyBase.Columns("RPCOCF_MALO_CCT")
            Me.columnRPCOCF_MALO_DPT = MyBase.Columns("RPCOCF_MALO_DPT")
            Me.columnRPCOCF_MALO_FWT = MyBase.Columns("RPCOCF_MALO_FWT")
            Me.columnRPCOCF_MALO_SPARE01 = MyBase.Columns("RPCOCF_MALO_SPARE01")
            Me.columnRPCOCF_MALO_SPARE02 = MyBase.Columns("RPCOCF_MALO_SPARE02")
            Me.columnRPCOCF_MALO_SPARE03 = MyBase.Columns("RPCOCF_MALO_SPARE03")
            Me.columnRPCOCF_MBLO_HDT = MyBase.Columns("RPCOCF_MBLO_HDT")
            Me.columnRPCOCF_MBLO_CCT = MyBase.Columns("RPCOCF_MBLO_CCT")
            Me.columnRPCOCF_MBLO_HCT = MyBase.Columns("RPCOCF_MBLO_HCT")
            Me.columnRPCOCF_MBLO_PPT = MyBase.Columns("RPCOCF_MBLO_PPT")
            Me.columnRPCOCF_MBLO_SPARE01 = MyBase.Columns("RPCOCF_MBLO_SPARE01")
            Me.columnRPCOCF_MBLO_SPARE02 = MyBase.Columns("RPCOCF_MBLO_SPARE02")
            Me.columnRPCOCF_MBLO_SPARE03 = MyBase.Columns("RPCOCF_MBLO_SPARE03")
            Me.columnRPCOCF_MBLO_SPARE04 = MyBase.Columns("RPCOCF_MBLO_SPARE04")
            Me.columnINSPSJ_INSPECTION01 = MyBase.Columns("INSPSJ_INSPECTION01")
            Me.columnINSPSJ_INSPECTION02 = MyBase.Columns("INSPSJ_INSPECTION02")
            Me.columnINSPSJ_INSPECTION03 = MyBase.Columns("INSPSJ_INSPECTION03")
            Me.columnINSPSJ_INSPECTION04 = MyBase.Columns("INSPSJ_INSPECTION04")
            Me.columnINSPSJ_INSPECTION05 = MyBase.Columns("INSPSJ_INSPECTION05")
            Me.columnINSPSJ_INSPECTION06 = MyBase.Columns("INSPSJ_INSPECTION06")
            Me.columnINSPSJ_INSPECTION_TIME01 = MyBase.Columns("INSPSJ_INSPECTION_TIME01")
            Me.columnINSPSJ_INSPECTION11 = MyBase.Columns("INSPSJ_INSPECTION11")
            Me.columnINSPSJ_INSPECTION12 = MyBase.Columns("INSPSJ_INSPECTION12")
            Me.columnINSPSJ_INSPECTION13 = MyBase.Columns("INSPSJ_INSPECTION13")
            Me.columnINSPSJ_INSPECTION14 = MyBase.Columns("INSPSJ_INSPECTION14")
            Me.columnINSPSJ_INSPECTION15 = MyBase.Columns("INSPSJ_INSPECTION15")
            Me.columnINSPSJ_INSPECTION16 = MyBase.Columns("INSPSJ_INSPECTION16")
            Me.columnINSPSJ_INSPECTION_TIME02 = MyBase.Columns("INSPSJ_INSPECTION_TIME02")
            Me.columnUPDATED_BY = MyBase.Columns("UPDATED_BY")
            Me.columnCREATED_WHEN = MyBase.Columns("CREATED_WHEN")
            Me.columnUPDATED_WHEN = MyBase.Columns("UPDATED_WHEN")
            Me.columnREV_NO = MyBase.Columns("REV_NO")
            Me.columnTRACE_COLUMNS_ID = MyBase.Columns("TRACE_COLUMNS_ID")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnSEQ = MyBase.Columns("SEQ")
            Me.columnMAX_REV = MyBase.Columns("MAX_REV")
            Me.columnREVISE_DATE = MyBase.Columns("REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnENGINE_ID = New Global.System.Data.DataColumn("ENGINE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ID)
            Me.columnENGINE_TYPE = New Global.System.Data.DataColumn("ENGINE_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_TYPE)
            Me.columnENGINE_NO = New Global.System.Data.DataColumn("ENGINE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_NO)
            Me.columnENGINE_ASM_NO = New Global.System.Data.DataColumn("ENGINE_ASM_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENGINE_ASM_NO)
            Me.columnBOOK = New Global.System.Data.DataColumn("BOOK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOK)
            Me.columnYEAR = New Global.System.Data.DataColumn("YEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEAR)
            Me.columnMODEL_CODE = New Global.System.Data.DataColumn("MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODEL_CODE)
            Me.columnLOT_NO = New Global.System.Data.DataColumn("LOT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT_NO)
            Me.columnUNIT_NO = New Global.System.Data.DataColumn("UNIT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIT_NO)
            Me.columnAT_MT = New Global.System.Data.DataColumn("AT_MT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAT_MT)
            Me.columnEMISSION = New Global.System.Data.DataColumn("EMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMISSION)
            Me.columnINJ_MODEL_CODE = New Global.System.Data.DataColumn("INJ_MODEL_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJ_MODEL_CODE)
            Me.columnSPARE_001 = New Global.System.Data.DataColumn("SPARE_001", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPARE_001)
            Me.columnSB_DATA_SB_PARTS_NO = New Global.System.Data.DataColumn("SB_DATA_SB_PARTS_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_PARTS_NO)
            Me.columnSB_DATA_SB_SERIAL_NO = New Global.System.Data.DataColumn("SB_DATA_SB_SERIAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_SB_SERIAL_NO)
            Me.columnSB_DATA_GASKET_GRADE = New Global.System.Data.DataColumn("SB_DATA_GASKET_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSB_DATA_GASKET_GRADE)
            Me.columnLINE_ON_TIME = New Global.System.Data.DataColumn("LINE_ON_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_ON_TIME)
            Me.columnLINE_OFF_TIME = New Global.System.Data.DataColumn("LINE_OFF_TIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_OFF_TIME)
            Me.columnRPCOCF_SBLO_BCT = New Global.System.Data.DataColumn("RPCOCF_SBLO_BCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_BCT)
            Me.columnRPCOCF_SBLO_CRT = New Global.System.Data.DataColumn("RPCOCF_SBLO_CRT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CRT)
            Me.columnRPCOCF_SBLO_CTM = New Global.System.Data.DataColumn("RPCOCF_SBLO_CTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_CTM)
            Me.columnRPCOCF_SBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE01)
            Me.columnRPCOCF_SBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE02)
            Me.columnRPCOCF_SBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_SBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_SBLO_SPARE03)
            Me.columnRPCOCF_MALO_CCT = New Global.System.Data.DataColumn("RPCOCF_MALO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_CCT)
            Me.columnRPCOCF_MALO_DPT = New Global.System.Data.DataColumn("RPCOCF_MALO_DPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_DPT)
            Me.columnRPCOCF_MALO_FWT = New Global.System.Data.DataColumn("RPCOCF_MALO_FWT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_FWT)
            Me.columnRPCOCF_MALO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE01)
            Me.columnRPCOCF_MALO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE02)
            Me.columnRPCOCF_MALO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MALO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MALO_SPARE03)
            Me.columnRPCOCF_MBLO_HDT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HDT)
            Me.columnRPCOCF_MBLO_CCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_CCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_CCT)
            Me.columnRPCOCF_MBLO_HCT = New Global.System.Data.DataColumn("RPCOCF_MBLO_HCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_HCT)
            Me.columnRPCOCF_MBLO_PPT = New Global.System.Data.DataColumn("RPCOCF_MBLO_PPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_PPT)
            Me.columnRPCOCF_MBLO_SPARE01 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE01)
            Me.columnRPCOCF_MBLO_SPARE02 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE02)
            Me.columnRPCOCF_MBLO_SPARE03 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE03)
            Me.columnRPCOCF_MBLO_SPARE04 = New Global.System.Data.DataColumn("RPCOCF_MBLO_SPARE04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPCOCF_MBLO_SPARE04)
            Me.columnINSPSJ_INSPECTION01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION01)
            Me.columnINSPSJ_INSPECTION02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION02)
            Me.columnINSPSJ_INSPECTION03 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION03)
            Me.columnINSPSJ_INSPECTION04 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION04", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION04)
            Me.columnINSPSJ_INSPECTION05 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION05", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION05)
            Me.columnINSPSJ_INSPECTION06 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION06", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION06)
            Me.columnINSPSJ_INSPECTION_TIME01 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME01", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME01)
            Me.columnINSPSJ_INSPECTION11 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION11)
            Me.columnINSPSJ_INSPECTION12 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION12)
            Me.columnINSPSJ_INSPECTION13 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION13)
            Me.columnINSPSJ_INSPECTION14 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION14)
            Me.columnINSPSJ_INSPECTION15 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION15)
            Me.columnINSPSJ_INSPECTION16 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION16)
            Me.columnINSPSJ_INSPECTION_TIME02 = New Global.System.Data.DataColumn("INSPSJ_INSPECTION_TIME02", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSPSJ_INSPECTION_TIME02)
            Me.columnUPDATED_BY = New Global.System.Data.DataColumn("UPDATED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_BY)
            Me.columnCREATED_WHEN = New Global.System.Data.DataColumn("CREATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED_WHEN)
            Me.columnUPDATED_WHEN = New Global.System.Data.DataColumn("UPDATED_WHEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATED_WHEN)
            Me.columnREV_NO = New Global.System.Data.DataColumn("REV_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREV_NO)
            Me.columnTRACE_COLUMNS_ID = New Global.System.Data.DataColumn("TRACE_COLUMNS_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACE_COLUMNS_ID)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnSEQ = New Global.System.Data.DataColumn("SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEQ)
            Me.columnMAX_REV = New Global.System.Data.DataColumn("MAX_REV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_REV)
            Me.columnREVISE_DATE = New Global.System.Data.DataColumn("REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnENGINE_ID, Me.columnREV_NO, Me.columnTRACE_COLUMNS_ID}, true))
            Me.columnENGINE_ID.AutoIncrement = true
            Me.columnENGINE_ID.AutoIncrementSeed = -1
            Me.columnENGINE_ID.AutoIncrementStep = -1
            Me.columnENGINE_ID.AllowDBNull = false
            Me.columnENGINE_ID.ReadOnly = true
            Me.columnENGINE_TYPE.AllowDBNull = false
            Me.columnENGINE_TYPE.MaxLength = 4
            Me.columnENGINE_NO.AllowDBNull = false
            Me.columnENGINE_NO.MaxLength = 6
            Me.columnENGINE_ASM_NO.AllowDBNull = false
            Me.columnENGINE_ASM_NO.MaxLength = 10
            Me.columnBOOK.AllowDBNull = false
            Me.columnBOOK.MaxLength = 2
            Me.columnYEAR.AllowDBNull = false
            Me.columnYEAR.MaxLength = 4
            Me.columnMODEL_CODE.AllowDBNull = false
            Me.columnMODEL_CODE.MaxLength = 8
            Me.columnLOT_NO.AllowDBNull = false
            Me.columnLOT_NO.MaxLength = 4
            Me.columnUNIT_NO.AllowDBNull = false
            Me.columnUNIT_NO.MaxLength = 2
            Me.columnAT_MT.AllowDBNull = false
            Me.columnAT_MT.MaxLength = 2
            Me.columnEMISSION.AllowDBNull = false
            Me.columnEMISSION.MaxLength = 2
            Me.columnINJ_MODEL_CODE.AllowDBNull = false
            Me.columnINJ_MODEL_CODE.MaxLength = 2
            Me.columnSPARE_001.MaxLength = 34
            Me.columnSB_DATA_SB_PARTS_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_PARTS_NO.MaxLength = 10
            Me.columnSB_DATA_SB_SERIAL_NO.AllowDBNull = false
            Me.columnSB_DATA_SB_SERIAL_NO.MaxLength = 6
            Me.columnSB_DATA_GASKET_GRADE.AllowDBNull = false
            Me.columnSB_DATA_GASKET_GRADE.MaxLength = 2
            Me.columnLINE_ON_TIME.AllowDBNull = false
            Me.columnLINE_OFF_TIME.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_BCT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CRT.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CRT.MaxLength = 2
            Me.columnRPCOCF_SBLO_CTM.AllowDBNull = false
            Me.columnRPCOCF_SBLO_CTM.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_SBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_SBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MALO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MALO_CCT.MaxLength = 2
            Me.columnRPCOCF_MALO_DPT.AllowDBNull = false
            Me.columnRPCOCF_MALO_DPT.MaxLength = 2
            Me.columnRPCOCF_MALO_FWT.AllowDBNull = false
            Me.columnRPCOCF_MALO_FWT.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MALO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MALO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_HDT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HDT.MaxLength = 2
            Me.columnRPCOCF_MBLO_CCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_CCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_HCT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_HCT.MaxLength = 2
            Me.columnRPCOCF_MBLO_PPT.AllowDBNull = false
            Me.columnRPCOCF_MBLO_PPT.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE01.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE01.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE02.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE02.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE03.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE03.MaxLength = 2
            Me.columnRPCOCF_MBLO_SPARE04.AllowDBNull = false
            Me.columnRPCOCF_MBLO_SPARE04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION01.MaxLength = 2
            Me.columnINSPSJ_INSPECTION02.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION02.MaxLength = 2
            Me.columnINSPSJ_INSPECTION03.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION03.MaxLength = 2
            Me.columnINSPSJ_INSPECTION04.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION04.MaxLength = 2
            Me.columnINSPSJ_INSPECTION05.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION05.MaxLength = 2
            Me.columnINSPSJ_INSPECTION06.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION06.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME01.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION11.MaxLength = 2
            Me.columnINSPSJ_INSPECTION12.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION12.MaxLength = 2
            Me.columnINSPSJ_INSPECTION13.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION13.MaxLength = 2
            Me.columnINSPSJ_INSPECTION14.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION14.MaxLength = 2
            Me.columnINSPSJ_INSPECTION15.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION15.MaxLength = 2
            Me.columnINSPSJ_INSPECTION16.AllowDBNull = false
            Me.columnINSPSJ_INSPECTION16.MaxLength = 2
            Me.columnINSPSJ_INSPECTION_TIME02.AllowDBNull = false
            Me.columnUPDATED_BY.MaxLength = 255
            Me.columnCREATED_WHEN.AllowDBNull = false
            Me.columnREV_NO.AllowDBNull = false
            Me.columnREV_NO.ReadOnly = true
            Me.columnTRACE_COLUMNS_ID.AllowDBNull = false
            Me.columnTRACE_COLUMNS_ID.ReadOnly = true
            Me.columnCOLUMN_NAME.ReadOnly = true
            Me.columnCOLUMN_NAME.MaxLength = 255
            Me.columnSEQ.ReadOnly = true
            Me.columnMAX_REV.ReadOnly = true
            Me.columnREVISE_DATE.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRACE_ABILITY_DATA_SHOWRow() As TRACE_ABILITY_DATA_SHOWRow
            Return CType(Me.NewRow,TRACE_ABILITY_DATA_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRACE_ABILITY_DATA_SHOWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRACE_ABILITY_DATA_SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRACE_ABILITY_DATA_SHOWRowChangedEvent) Is Nothing) Then
                RaiseEvent TRACE_ABILITY_DATA_SHOWRowChanged(Me, New TRACE_ABILITY_DATA_SHOWRowChangeEvent(CType(e.Row,TRACE_ABILITY_DATA_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRACE_ABILITY_DATA_SHOWRowChangingEvent) Is Nothing) Then
                RaiseEvent TRACE_ABILITY_DATA_SHOWRowChanging(Me, New TRACE_ABILITY_DATA_SHOWRowChangeEvent(CType(e.Row,TRACE_ABILITY_DATA_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRACE_ABILITY_DATA_SHOWRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRACE_ABILITY_DATA_SHOWRowDeleted(Me, New TRACE_ABILITY_DATA_SHOWRowChangeEvent(CType(e.Row,TRACE_ABILITY_DATA_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRACE_ABILITY_DATA_SHOWRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRACE_ABILITY_DATA_SHOWRowDeleting(Me, New TRACE_ABILITY_DATA_SHOWRowChangeEvent(CType(e.Row,TRACE_ABILITY_DATA_SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRACE_ABILITY_DATA_SHOWRow(ByVal row As TRACE_ABILITY_DATA_SHOWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRACE_ABILITY_DATA_SHOWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WORKING_COLUMNSRow
        Inherits Global.System.Data.DataRow
        
        Private tableWORKING_COLUMNS As WORKING_COLUMNSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWORKING_COLUMNS = CType(Me.Table,WORKING_COLUMNSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.WORKING_TYPE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.WORKING_TYPE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.SEQColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.COLUMN_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA_TYPE() As Byte
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.DATA_TYPEColumn),Byte)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.DATA_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_REGEX() As String
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.COLUMN_REGEXColumn),String)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.COLUMN_REGEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAN_EDIT() As Boolean
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.CAN_EDITColumn),Boolean)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.CAN_EDITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAN_ADD() As Boolean
            Get
                Return CType(Me(Me.tableWORKING_COLUMNS.CAN_ADDColumn),Boolean)
            End Get
            Set
                Me(Me.tableWORKING_COLUMNS.CAN_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPERow() As WORKING_TYPERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_COLUMNS_WORKING_TYPE")),WORKING_TYPERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_COLUMNS_WORKING_TYPE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FOR_CHECK_LIST_BOXRow() As FOR_CHECK_LIST_BOXRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_COLUMNS_WORKING_TYPE1")),FOR_CHECK_LIST_BOXRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_COLUMNS_WORKING_TYPE1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_STRRows() As WORKING_DATA_STRRow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS") Is Nothing) Then
                Return New WORKING_DATA_STRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS")),WORKING_DATA_STRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_INTRows() As WORKING_DATA_INTRow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS") Is Nothing) Then
                Return New WORKING_DATA_INTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS")),WORKING_DATA_INTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_DATETIMERows() As WORKING_DATA_DATETIMERow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS") Is Nothing) Then
                Return New WORKING_DATA_DATETIMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS")),WORKING_DATA_DATETIMERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ENGINE_LISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableENGINE_LIST As ENGINE_LISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableENGINE_LIST = CType(Me.Table,ENGINE_LISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableENGINE_LIST.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableENGINE_LIST.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.YEARColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableENGINE_LIST.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'ENGINE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENGINE_LIST.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableENGINE_LIST.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableENGINE_LIST.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableENGINE_LIST.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableENGINE_LIST.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableENGINE_LIST.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableENGINE_LIST.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'ENGINE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENGINE_LIST.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableENGINE_LIST.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableENGINE_LIST.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableENGINE_LIST.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'ENGINE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableENGINE_LIST.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableENGINE_LIST.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableENGINE_LIST.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableENGINE_LIST.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableENGINE_LIST.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableENGINE_LIST.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableENGINE_LIST.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_DATETIMERows() As WORKING_DATA_DATETIMERow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_DATETIME_ENGINE_LIST") Is Nothing) Then
                Return New WORKING_DATA_DATETIMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_DATETIME_ENGINE_LIST")),WORKING_DATA_DATETIMERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_INTRows() As WORKING_DATA_INTRow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_INT_ENGINE_LIST") Is Nothing) Then
                Return New WORKING_DATA_INTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_INT_ENGINE_LIST")),WORKING_DATA_INTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_STRRows() As WORKING_DATA_STRRow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_STR_ENGINE_LIST") Is Nothing) Then
                Return New WORKING_DATA_STRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_STR_ENGINE_LIST")),WORKING_DATA_STRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_STRRows() As TRACE_DATA_STRRow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_STR_ENGINE_LIST") Is Nothing) Then
                Return New TRACE_DATA_STRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_STR_ENGINE_LIST")),TRACE_DATA_STRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_INTRows() As TRACE_DATA_INTRow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_INT_ENGINE_LIST") Is Nothing) Then
                Return New TRACE_DATA_INTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_INT_ENGINE_LIST")),TRACE_DATA_INTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_DATETIMERows() As TRACE_DATA_DATETIMERow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_DATETIME_ENGINE_LIST") Is Nothing) Then
                Return New TRACE_DATA_DATETIMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_DATETIME_ENGINE_LIST")),TRACE_DATA_DATETIMERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_MIXRows() As TRACE_DATA_MIXRow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_STR_ENGINE_LIST1") Is Nothing) Then
                Return New TRACE_DATA_MIXRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_STR_ENGINE_LIST1")),TRACE_DATA_MIXRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WORKING_TYPERow
        Inherits Global.System.Data.DataRow
        
        Private tableWORKING_TYPE As WORKING_TYPEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWORKING_TYPE = CType(Me.Table,WORKING_TYPEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_TYPE.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_TYPE.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Return CType(Me(Me.tableWORKING_TYPE.SEQColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_TYPE.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_NAME() As String
            Get
                Return CType(Me(Me.tableWORKING_TYPE.WORKING_TYPE_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableWORKING_TYPE.WORKING_TYPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Return CType(Me(Me.tableWORKING_TYPE.MAX_REVColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_TYPE.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetSETTING_COLUMNSRows() As WORKING_COLUMNSRow()
            If (Me.Table.ChildRelations("FK_WORKING_COLUMNS_WORKING_TYPE") Is Nothing) Then
                Return New WORKING_COLUMNSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_COLUMNS_WORKING_TYPE")),WORKING_COLUMNSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WORKING_DATA_STRRow
        Inherits Global.System.Data.DataRow
        
        Private tableWORKING_DATA_STR As WORKING_DATA_STRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWORKING_DATA_STR = CType(Me.Table,WORKING_DATA_STRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_STR.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_STR.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_STR.WORKING_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_STR.WORKING_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_STR.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_STR.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As String
            Get
                Return CType(Me(Me.tableWORKING_DATA_STR.DATAColumn),String)
            End Get
            Set
                Me(Me.tableWORKING_DATA_STR.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Return CType(Me(Me.tableWORKING_DATA_STR.REVISE_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableWORKING_DATA_STR.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_STR_ENGINE_LIST")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_STR_ENGINE_LIST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETTING_COLUMNSRow() As WORKING_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS")),WORKING_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property V_SETTING_COLUMNSRow() As V_SETTING_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS1")),V_SETTING_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS1"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class V_SETTING_COLUMNSRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_SETTING_COLUMNS As V_SETTING_COLUMNSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_SETTING_COLUMNS = CType(Me.Table,V_SETTING_COLUMNSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.SEQColumn),Integer)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.COLUMN_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA_TYPE() As Byte
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.DATA_TYPEColumn),Byte)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.DATA_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_REGEX() As String
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.COLUMN_REGEXColumn),String)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.COLUMN_REGEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAN_EDIT() As Boolean
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.CAN_EDITColumn),Boolean)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.CAN_EDITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAN_ADD() As Boolean
            Get
                Return CType(Me(Me.tableV_SETTING_COLUMNS.CAN_ADDColumn),Boolean)
            End Get
            Set
                Me(Me.tableV_SETTING_COLUMNS.CAN_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_STRRows() As WORKING_DATA_STRRow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS1") Is Nothing) Then
                Return New WORKING_DATA_STRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_STR_WORKING_COLUMNS1")),WORKING_DATA_STRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_INTRows() As WORKING_DATA_INTRow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS1") Is Nothing) Then
                Return New WORKING_DATA_INTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS1")),WORKING_DATA_INTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_DATA_DATETIMERows() As WORKING_DATA_DATETIMERow()
            If (Me.Table.ChildRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS1") Is Nothing) Then
                Return New WORKING_DATA_DATETIMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS1")),WORKING_DATA_DATETIMERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WORKING_DATA_INTRow
        Inherits Global.System.Data.DataRow
        
        Private tableWORKING_DATA_INT As WORKING_DATA_INTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWORKING_DATA_INT = CType(Me.Table,WORKING_DATA_INTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_INT.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_INT.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_INT.WORKING_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_INT.WORKING_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_INT.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_INT.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_INT.DATAColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_INT.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Return CType(Me(Me.tableWORKING_DATA_INT.REVISE_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableWORKING_DATA_INT.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_INT_ENGINE_LIST")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_INT_ENGINE_LIST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_COLUMNSRow() As WORKING_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS")),WORKING_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETTING_COLUMNSRow() As V_SETTING_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS1")),V_SETTING_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_INT_WORKING_COLUMNS1"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WORKING_DATA_DATETIMERow
        Inherits Global.System.Data.DataRow
        
        Private tableWORKING_DATA_DATETIME As WORKING_DATA_DATETIMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWORKING_DATA_DATETIME = CType(Me.Table,WORKING_DATA_DATETIMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_DATETIME.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_DATETIME.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_DATETIME.WORKING_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_DATETIME.WORKING_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableWORKING_DATA_DATETIME.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableWORKING_DATA_DATETIME.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As Date
            Get
                Return CType(Me(Me.tableWORKING_DATA_DATETIME.DATAColumn),Date)
            End Get
            Set
                Me(Me.tableWORKING_DATA_DATETIME.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Return CType(Me(Me.tableWORKING_DATA_DATETIME.REVISE_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableWORKING_DATA_DATETIME.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_DATETIME_ENGINE_LIST")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_DATETIME_ENGINE_LIST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_COLUMNSRow() As WORKING_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS")),WORKING_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETTING_COLUMNSRow() As V_SETTING_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS1")),V_SETTING_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_WORKING_DATA_DATETIME_WORKING_COLUMNS1"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRACE_COLUMNSRow
        Inherits Global.System.Data.DataRow
        
        Private tableTRACE_COLUMNS As TRACE_COLUMNSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRACE_COLUMNS = CType(Me.Table,TRACE_COLUMNSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.SEQColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.COLUMN_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA_TYPE() As Byte
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.DATA_TYPEColumn),Byte)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.DATA_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_REGEX() As String
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.COLUMN_REGEXColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.COLUMN_REGEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAN_EDIT() As Boolean
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.CAN_EDITColumn),Boolean)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.CAN_EDITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAN_ADD() As Boolean
            Get
                Return CType(Me(Me.tableTRACE_COLUMNS.CAN_ADDColumn),Boolean)
            End Get
            Set
                Me(Me.tableTRACE_COLUMNS.CAN_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_STRRows() As TRACE_DATA_STRRow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS") Is Nothing) Then
                Return New TRACE_DATA_STRRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS")),TRACE_DATA_STRRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_INTRows() As TRACE_DATA_INTRow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_INT_TRACE_COLUMNS") Is Nothing) Then
                Return New TRACE_DATA_INTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_INT_TRACE_COLUMNS")),TRACE_DATA_INTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_DATETIMERows() As TRACE_DATA_DATETIMERow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_DATETIME_TRACE_COLUMNS") Is Nothing) Then
                Return New TRACE_DATA_DATETIMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_DATETIME_TRACE_COLUMNS")),TRACE_DATA_DATETIMERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTRACE_DATA_MIXRows() As TRACE_DATA_MIXRow()
            If (Me.Table.ChildRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS1") Is Nothing) Then
                Return New TRACE_DATA_MIXRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS1")),TRACE_DATA_MIXRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRACE_DATA_STRRow
        Inherits Global.System.Data.DataRow
        
        Private tableTRACE_DATA_STR As TRACE_DATA_STRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRACE_DATA_STR = CType(Me.Table,TRACE_DATA_STRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_STR.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_STR.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_STR.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_STR.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_STR.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_STR.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As String
            Get
                Return CType(Me(Me.tableTRACE_DATA_STR.DATAColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_DATA_STR.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_STR.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'TRACE_DATA_STR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_STR.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_STR_ENGINE_LIST")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_STR_ENGINE_LIST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNSRow() As TRACE_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS")),TRACE_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_STR.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableTRACE_DATA_STR.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRACE_DATA_INTRow
        Inherits Global.System.Data.DataRow
        
        Private tableTRACE_DATA_INT As TRACE_DATA_INTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRACE_DATA_INT = CType(Me.Table,TRACE_DATA_INTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_INT.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_INT.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_INT.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_INT.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_INT.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_INT.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_INT.DATAColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_INT.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_INT.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'TRACE_DATA_INT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_INT.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_INT_ENGINE_LIST")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_INT_ENGINE_LIST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNSRow() As TRACE_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_INT_TRACE_COLUMNS")),TRACE_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_INT_TRACE_COLUMNS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_INT.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableTRACE_DATA_INT.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRACE_DATA_DATETIMERow
        Inherits Global.System.Data.DataRow
        
        Private tableTRACE_DATA_DATETIME As TRACE_DATA_DATETIMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRACE_DATA_DATETIME = CType(Me.Table,TRACE_DATA_DATETIMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_DATETIME.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_DATETIME.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_DATETIME.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_DATETIME.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_DATETIME.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_DATETIME.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As Date
            Get
                Return CType(Me(Me.tableTRACE_DATA_DATETIME.DATAColumn),Date)
            End Get
            Set
                Me(Me.tableTRACE_DATA_DATETIME.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_DATETIME.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'TRACE_DATA_DATETIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_DATETIME.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_DATETIME_ENGINE_LIST")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_DATETIME_ENGINE_LIST"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNSRow() As TRACE_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_DATETIME_TRACE_COLUMNS")),TRACE_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_DATETIME_TRACE_COLUMNS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_DATETIME.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableTRACE_DATA_DATETIME.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class V_WORKING_DATA_STATICRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_WORKING_DATA_STATIC As V_WORKING_DATA_STATICDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_WORKING_DATA_STATIC = CType(Me.Table,V_WORKING_DATA_STATICDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.YEARColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_WORKING_DATA_STATIC.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'V_WORKING_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_WORKING_DATA_STATIC.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'V_WORKING_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_WORKING_DATA_STATIC.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'V_WORKING_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_ID() As Integer
            Get
                Return CType(Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WORKING_TYPE_NAME' in table 'V_WORKING_DATA_STATIC' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_SEQ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_SEQColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WORKING_TYPE_SEQ' in table 'V_WORKING_DATA_STATIC' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_WORKING_DATA_STATIC.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'V_WORKING_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_WORKING_DATA_STATIC.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableV_WORKING_DATA_STATIC.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableV_WORKING_DATA_STATIC.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableV_WORKING_DATA_STATIC.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableV_WORKING_DATA_STATIC.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableV_WORKING_DATA_STATIC.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableV_WORKING_DATA_STATIC.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWORKING_TYPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWORKING_TYPE_NAMENull()
            Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWORKING_TYPE_SEQNull() As Boolean
            Return Me.IsNull(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWORKING_TYPE_SEQNull()
            Me(Me.tableV_WORKING_DATA_STATIC.WORKING_TYPE_SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableV_WORKING_DATA_STATIC.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableV_WORKING_DATA_STATIC.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FOR_CHECK_LIST_BOXRow
        Inherits Global.System.Data.DataRow
        
        Private tableFOR_CHECK_LIST_BOX As FOR_CHECK_LIST_BOXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFOR_CHECK_LIST_BOX = CType(Me.Table,FOR_CHECK_LIST_BOXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFOR_CHECK_LIST_BOX.IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'FOR_CHECK_LIST_BOX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFOR_CHECK_LIST_BOX.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFOR_CHECK_LIST_BOX.SEQColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEQ' in table 'FOR_CHECK_LIST_BOX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFOR_CHECK_LIST_BOX.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableFOR_CHECK_LIST_BOX.WORKING_TYPE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WORKING_TYPE_NAME' in table 'FOR_CHECK_LIST_BOX' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFOR_CHECK_LIST_BOX.WORKING_TYPE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFOR_CHECK_LIST_BOX.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'FOR_CHECK_LIST_BOX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFOR_CHECK_LIST_BOX.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableFOR_CHECK_LIST_BOX.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableFOR_CHECK_LIST_BOX.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNull() As Boolean
            Return Me.IsNull(Me.tableFOR_CHECK_LIST_BOX.SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNull()
            Me(Me.tableFOR_CHECK_LIST_BOX.SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWORKING_TYPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFOR_CHECK_LIST_BOX.WORKING_TYPE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWORKING_TYPE_NAMENull()
            Me(Me.tableFOR_CHECK_LIST_BOX.WORKING_TYPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableFOR_CHECK_LIST_BOX.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableFOR_CHECK_LIST_BOX.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetWORKING_COLUMNSRows() As WORKING_COLUMNSRow()
            If (Me.Table.ChildRelations("FK_WORKING_COLUMNS_WORKING_TYPE1") Is Nothing) Then
                Return New WORKING_COLUMNSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_WORKING_COLUMNS_WORKING_TYPE1")),WORKING_COLUMNSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class V_TRACE_DATA_STATICRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_TRACE_DATA_STATIC As V_TRACE_DATA_STATICDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_TRACE_DATA_STATIC = CType(Me.Table,V_TRACE_DATA_STATICDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.YEARColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableV_TRACE_DATA_STATIC.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.REV_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REV_NO' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.TRACE_COLUMNS_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRACE_COLUMNS_ID' in table 'V_TRACE_DATA_STATIC' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.COLUMN_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLUMN_NAME' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WORKING_TYPE_SEQ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.WORKING_TYPE_SEQColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WORKING_TYPE_SEQ' in table 'V_TRACE_DATA_STATIC' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.WORKING_TYPE_SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_TRACE_DATA_STATIC.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'V_TRACE_DATA_STATIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_TRACE_DATA_STATIC.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableV_TRACE_DATA_STATIC.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableV_TRACE_DATA_STATIC.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableV_TRACE_DATA_STATIC.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREV_NONull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.REV_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREV_NONull()
            Me(Me.tableV_TRACE_DATA_STATIC.REV_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRACE_COLUMNS_IDNull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.TRACE_COLUMNS_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRACE_COLUMNS_IDNull()
            Me(Me.tableV_TRACE_DATA_STATIC.TRACE_COLUMNS_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLUMN_NAMENull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.COLUMN_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLUMN_NAMENull()
            Me(Me.tableV_TRACE_DATA_STATIC.COLUMN_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWORKING_TYPE_SEQNull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.WORKING_TYPE_SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWORKING_TYPE_SEQNull()
            Me(Me.tableV_TRACE_DATA_STATIC.WORKING_TYPE_SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableV_TRACE_DATA_STATIC.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableV_TRACE_DATA_STATIC.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableV_TRACE_DATA_STATIC.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SERIAL_NO_PART_NO_SHOWRow
        Inherits Global.System.Data.DataRow
        
        Private tableSERIAL_NO_PART_NO_SHOW As SERIAL_NO_PART_NO_SHOWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSERIAL_NO_PART_NO_SHOW = CType(Me.Table,SERIAL_NO_PART_NO_SHOWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.YEARColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.COLUMN_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLUMN_NAME' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PART_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.PART_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART_NAME' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.PART_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.DATAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATA' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.SEQColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEQ' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_LOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_SHOW.MODEL_LOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL_LOT' in table 'SERIAL_NO_PART_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_SHOW.MODEL_LOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLUMN_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.COLUMN_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLUMN_NAMENull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.COLUMN_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPART_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.PART_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPART_NAMENull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.PART_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATANull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.DATAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATANull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.DATAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODEL_LOTNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_SHOW.MODEL_LOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODEL_LOTNull()
            Me(Me.tableSERIAL_NO_PART_NO_SHOW.MODEL_LOTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SERIAL_NO_PART_NO_HISTORYRow
        Inherits Global.System.Data.DataRow
        
        Private tableSERIAL_NO_PART_NO_HISTORY As SERIAL_NO_PART_NO_HISTORYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSERIAL_NO_PART_NO_HISTORY = CType(Me.Table,SERIAL_NO_PART_NO_HISTORYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.YEARColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'SERIAL_NO_PART_NO_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'SERIAL_NO_PART_NO_HISTORY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'SERIAL_NO_PART_NO_HISTORY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'SERIAL_NO_PART_NO_HISTORY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSERIAL_NO_PART_NO_HISTORY.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'SERIAL_NO_PART_NO_HISTORY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSERIAL_NO_PART_NO_HISTORY.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_HISTORY.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableSERIAL_NO_PART_NO_HISTORY.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableSERIAL_NO_PART_NO_HISTORY.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_HISTORY.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableSERIAL_NO_PART_NO_HISTORY.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableSERIAL_NO_PART_NO_HISTORY.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableSERIAL_NO_PART_NO_HISTORY.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRACE_DATA_MIXRow
        Inherits Global.System.Data.DataRow
        
        Private tableTRACE_DATA_MIX As TRACE_DATA_MIXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRACE_DATA_MIX = CType(Me.Table,TRACE_DATA_MIXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_MIX.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_MIX.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableTRACE_DATA_MIX.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_MIX.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'TRACE_DATA_MIX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SRC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_MIX.SRCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRC' in table 'TRACE_DATA_MIX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.SRCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PART_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_MIX.PART_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART_NAME' in table 'TRACE_DATA_MIX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.PART_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As Object
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_DATA_MIX.DATAColumn),Object)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATA' in table 'TRACE_DATA_MIX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_DATA_MIX.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_LISTRow() As ENGINE_LISTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_STR_ENGINE_LIST1")),ENGINE_LISTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_STR_ENGINE_LIST1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNSRow() As TRACE_COLUMNSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS1")),TRACE_COLUMNSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TRACE_DATA_STR_TRACE_COLUMNS1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_MIX.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableTRACE_DATA_MIX.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSRCNull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_MIX.SRCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSRCNull()
            Me(Me.tableTRACE_DATA_MIX.SRCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPART_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_MIX.PART_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPART_NAMENull()
            Me(Me.tableTRACE_DATA_MIX.PART_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATANull() As Boolean
            Return Me.IsNull(Me.tableTRACE_DATA_MIX.DATAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATANull()
            Me(Me.tableTRACE_DATA_MIX.DATAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SHORT_BLOCK_SERIAL_NO_SHOWRow
        Inherits Global.System.Data.DataRow
        
        Private tableSHORT_BLOCK_SERIAL_NO_SHOW As SHORT_BLOCK_SERIAL_NO_SHOWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSHORT_BLOCK_SERIAL_NO_SHOW = CType(Me.Table,SHORT_BLOCK_SERIAL_NO_SHOWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.YEARColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.COLUMN_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLUMN_NAME' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SEQColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEQ' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PART_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.PART_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART_NAME' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.PART_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.DATAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATA' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_LOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MODEL_LOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODEL_LOT' in table 'SHORT_BLOCK_SERIAL_NO_SHOW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MODEL_LOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLUMN_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.COLUMN_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLUMN_NAMENull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.COLUMN_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPART_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.PART_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPART_NAMENull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.PART_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATANull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.DATAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATANull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.DATAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODEL_LOTNull() As Boolean
            Return Me.IsNull(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MODEL_LOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODEL_LOTNull()
            Me(Me.tableSHORT_BLOCK_SERIAL_NO_SHOW.MODEL_LOTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRACE_ABILITY_DATA_SHOWRow
        Inherits Global.System.Data.DataRow
        
        Private tableTRACE_ABILITY_DATA_SHOW As TRACE_ABILITY_DATA_SHOWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRACE_ABILITY_DATA_SHOW = CType(Me.Table,TRACE_ABILITY_DATA_SHOWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_TYPE() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_TYPEColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_NO() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_NOColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENGINE_ASM_NO() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_ASM_NOColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.ENGINE_ASM_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BOOK() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.BOOKColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.BOOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YEAR() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.YEARColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.YEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOT_NO() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.LOT_NOColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.LOT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIT_NO() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.UNIT_NOColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.UNIT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AT_MT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.AT_MTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.AT_MTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMISSION() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.EMISSIONColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.EMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INJ_MODEL_CODE() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INJ_MODEL_CODEColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INJ_MODEL_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPARE_001() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.SPARE_001Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPARE_001' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.SPARE_001Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_PARTS_NO() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.SB_DATA_SB_PARTS_NOColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.SB_DATA_SB_PARTS_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_SB_SERIAL_NO() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.SB_DATA_SB_SERIAL_NOColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.SB_DATA_SB_SERIAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SB_DATA_GASKET_GRADE() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.SB_DATA_GASKET_GRADEColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.SB_DATA_GASKET_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_ON_TIME() As Date
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.LINE_ON_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.LINE_ON_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_OFF_TIME() As Date
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.LINE_OFF_TIMEColumn),Date)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.LINE_OFF_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_BCT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_BCTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_BCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CRT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_CRTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_CRTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_CTM() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_CTMColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_CTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_SBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_SBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_CCT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_DPT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_DPTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_DPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_FWT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_FWTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_FWTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE01() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE02() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MALO_SPARE03() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MALO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HDT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_HDTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_HDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_CCT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_CCTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_CCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_HCT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_HCTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_HCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_PPT() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_PPTColumn),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_PPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE01() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE01Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE02() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE02Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE03() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE03Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RPCOCF_MBLO_SPARE04() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE04Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.RPCOCF_MBLO_SPARE04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION01() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION01Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION02() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION02Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION03() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION03Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION04() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION04Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION05() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION05Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION06() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION06Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME01() As Date
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION_TIME01Column),Date)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION_TIME01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION11() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION11Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION12() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION12Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION13() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION13Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION14() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION14Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION15() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION15Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION16() As String
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION16Column),String)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSPSJ_INSPECTION_TIME02() As Date
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION_TIME02Column),Date)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.INSPSJ_INSPECTION_TIME02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_BY' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED_WHEN() As Date
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.CREATED_WHENColumn),Date)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.CREATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDATED_WHEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_WHENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATED_WHEN' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_WHENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REV_NO() As Integer
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.REV_NOColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.REV_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACE_COLUMNS_ID() As Integer
            Get
                Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.TRACE_COLUMNS_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.TRACE_COLUMNS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.COLUMN_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLUMN_NAME' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEQ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.SEQColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEQ' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.SEQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAX_REV() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.MAX_REVColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_REV' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.MAX_REVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTRACE_ABILITY_DATA_SHOW.REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVISE_DATE' in table 'TRACE_ABILITY_DATA_SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRACE_ABILITY_DATA_SHOW.REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPARE_001Null() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.SPARE_001Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPARE_001Null()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.SPARE_001Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_BYNull() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_BYNull()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDATED_WHENNull() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_WHENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDATED_WHENNull()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.UPDATED_WHENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLUMN_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.COLUMN_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLUMN_NAMENull()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.COLUMN_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEQNull() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.SEQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEQNull()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.SEQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAX_REVNull() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.MAX_REVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAX_REVNull()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.MAX_REVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableTRACE_ABILITY_DATA_SHOW.REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREVISE_DATENull()
            Me(Me.tableTRACE_ABILITY_DATA_SHOW.REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WORKING_COLUMNSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WORKING_COLUMNSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WORKING_COLUMNSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WORKING_COLUMNSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ENGINE_LISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ENGINE_LISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ENGINE_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ENGINE_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WORKING_TYPERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WORKING_TYPERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WORKING_TYPERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WORKING_TYPERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WORKING_DATA_STRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WORKING_DATA_STRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WORKING_DATA_STRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WORKING_DATA_STRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class V_SETTING_COLUMNSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_SETTING_COLUMNSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As V_SETTING_COLUMNSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As V_SETTING_COLUMNSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WORKING_DATA_INTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WORKING_DATA_INTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WORKING_DATA_INTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WORKING_DATA_INTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class WORKING_DATA_DATETIMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WORKING_DATA_DATETIMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As WORKING_DATA_DATETIMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As WORKING_DATA_DATETIMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRACE_COLUMNSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRACE_COLUMNSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRACE_COLUMNSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRACE_COLUMNSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRACE_DATA_STRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRACE_DATA_STRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRACE_DATA_STRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRACE_DATA_STRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRACE_DATA_INTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRACE_DATA_INTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRACE_DATA_INTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRACE_DATA_INTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRACE_DATA_DATETIMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRACE_DATA_DATETIMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRACE_DATA_DATETIMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRACE_DATA_DATETIMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class V_WORKING_DATA_STATICRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_WORKING_DATA_STATICRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As V_WORKING_DATA_STATICRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As V_WORKING_DATA_STATICRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FOR_CHECK_LIST_BOXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FOR_CHECK_LIST_BOXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FOR_CHECK_LIST_BOXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FOR_CHECK_LIST_BOXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class V_TRACE_DATA_STATICRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_TRACE_DATA_STATICRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As V_TRACE_DATA_STATICRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As V_TRACE_DATA_STATICRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SERIAL_NO_PART_NO_SHOWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SERIAL_NO_PART_NO_SHOWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SERIAL_NO_PART_NO_SHOWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SERIAL_NO_PART_NO_SHOWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SERIAL_NO_PART_NO_HISTORYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SERIAL_NO_PART_NO_HISTORYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SERIAL_NO_PART_NO_HISTORYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SERIAL_NO_PART_NO_HISTORYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRACE_DATA_MIXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRACE_DATA_MIXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRACE_DATA_MIXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRACE_DATA_MIXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SHORT_BLOCK_SERIAL_NO_SHOWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SHORT_BLOCK_SERIAL_NO_SHOWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SHORT_BLOCK_SERIAL_NO_SHOWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SHORT_BLOCK_SERIAL_NO_SHOWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRACE_ABILITY_DATA_SHOWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRACE_ABILITY_DATA_SHOWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRACE_ABILITY_DATA_SHOWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRACE_ABILITY_DATA_SHOWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WORKING_COLUMNSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WORKING_COLUMNS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_ID", "WORKING_TYPE_ID")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("DATA_TYPE", "DATA_TYPE")
            tableMapping.ColumnMappings.Add("COLUMN_REGEX", "COLUMN_REGEX")
            tableMapping.ColumnMappings.Add("CAN_EDIT", "CAN_EDIT")
            tableMapping.ColumnMappings.Add("CAN_ADD", "CAN_ADD")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from WORKING_COLUMNS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.WORKING_COLUMNSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.WORKING_COLUMNSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.WORKING_COLUMNSDataTable = New DataSet1.WORKING_COLUMNSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ENGINE_LISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ENGINE_LIST"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ENGINE_LIST] WHERE (([ID] = @Original_ID) AND ([ENGINE_TYPE] = @Orig"& _ 
                "inal_ENGINE_TYPE) AND ([ENGINE_NO] = @Original_ENGINE_NO) AND ([ENGINE_ASM_NO] ="& _ 
                " @Original_ENGINE_ASM_NO) AND ([BOOK] = @Original_BOOK) AND ([YEAR] = @Original_"& _ 
                "YEAR) AND ([MODEL_CODE] = @Original_MODEL_CODE) AND ([LOT_NO] = @Original_LOT_NO"& _ 
                ") AND ([UNIT_NO] = @Original_UNIT_NO) AND ([AT_MT] = @Original_AT_MT) AND ([EMIS"& _ 
                "SION] = @Original_EMISSION) AND ([INJ_MODEL_CODE] = @Original_INJ_MODEL_CODE) AN"& _ 
                "D ((@IsNull_SPARE_001 = 1 AND [SPARE_001] IS NULL) OR ([SPARE_001] = @Original_S"& _ 
                "PARE_001)) AND ([SB_DATA_SB_PARTS_NO] = @Original_SB_DATA_SB_PARTS_NO) AND ([SB_"& _ 
                "DATA_SB_SERIAL_NO] = @Original_SB_DATA_SB_SERIAL_NO) AND ([SB_DATA_GASKET_GRADE]"& _ 
                " = @Original_SB_DATA_GASKET_GRADE) AND ([LINE_ON_TIME] = @Original_LINE_ON_TIME)"& _ 
                " AND ([LINE_OFF_TIME] = @Original_LINE_OFF_TIME) AND ([RPCOCF_SBLO_BCT] = @Origi"& _ 
                "nal_RPCOCF_SBLO_BCT) AND ([RPCOCF_SBLO_CRT] = @Original_RPCOCF_SBLO_CRT) AND ([R"& _ 
                "PCOCF_SBLO_CTM] = @Original_RPCOCF_SBLO_CTM) AND ([RPCOCF_SBLO_SPARE01] = @Origi"& _ 
                "nal_RPCOCF_SBLO_SPARE01) AND ([RPCOCF_SBLO_SPARE02] = @Original_RPCOCF_SBLO_SPAR"& _ 
                "E02) AND ([RPCOCF_SBLO_SPARE03] = @Original_RPCOCF_SBLO_SPARE03) AND ([RPCOCF_MA"& _ 
                "LO_CCT] = @Original_RPCOCF_MALO_CCT) AND ([RPCOCF_MALO_DPT] = @Original_RPCOCF_M"& _ 
                "ALO_DPT) AND ([RPCOCF_MALO_FWT] = @Original_RPCOCF_MALO_FWT) AND ([RPCOCF_MALO_S"& _ 
                "PARE01] = @Original_RPCOCF_MALO_SPARE01) AND ([RPCOCF_MALO_SPARE02] = @Original_"& _ 
                "RPCOCF_MALO_SPARE02) AND ([RPCOCF_MALO_SPARE03] = @Original_RPCOCF_MALO_SPARE03)"& _ 
                " AND ([RPCOCF_MBLO_HDT] = @Original_RPCOCF_MBLO_HDT) AND ([RPCOCF_MBLO_CCT] = @O"& _ 
                "riginal_RPCOCF_MBLO_CCT) AND ([RPCOCF_MBLO_HCT] = @Original_RPCOCF_MBLO_HCT) AND"& _ 
                " ([RPCOCF_MBLO_PPT] = @Original_RPCOCF_MBLO_PPT) AND ([RPCOCF_MBLO_SPARE01] = @O"& _ 
                "riginal_RPCOCF_MBLO_SPARE01) AND ([RPCOCF_MBLO_SPARE02] = @Original_RPCOCF_MBLO_"& _ 
                "SPARE02) AND ([RPCOCF_MBLO_SPARE03] = @Original_RPCOCF_MBLO_SPARE03) AND ([RPCOC"& _ 
                "F_MBLO_SPARE04] = @Original_RPCOCF_MBLO_SPARE04) AND ([INSPSJ_INSPECTION01] = @O"& _ 
                "riginal_INSPSJ_INSPECTION01) AND ([INSPSJ_INSPECTION02] = @Original_INSPSJ_INSPE"& _ 
                "CTION02) AND ([INSPSJ_INSPECTION03] = @Original_INSPSJ_INSPECTION03) AND ([INSPS"& _ 
                "J_INSPECTION04] = @Original_INSPSJ_INSPECTION04) AND ([INSPSJ_INSPECTION05] = @O"& _ 
                "riginal_INSPSJ_INSPECTION05) AND ([INSPSJ_INSPECTION06] = @Original_INSPSJ_INSPE"& _ 
                "CTION06) AND ([INSPSJ_INSPECTION_TIME01] = @Original_INSPSJ_INSPECTION_TIME01) A"& _ 
                "ND ([INSPSJ_INSPECTION11] = @Original_INSPSJ_INSPECTION11) AND ([INSPSJ_INSPECTI"& _ 
                "ON12] = @Original_INSPSJ_INSPECTION12) AND ([INSPSJ_INSPECTION13] = @Original_IN"& _ 
                "SPSJ_INSPECTION13) AND ([INSPSJ_INSPECTION14] = @Original_INSPSJ_INSPECTION14) A"& _ 
                "ND ([INSPSJ_INSPECTION15] = @Original_INSPSJ_INSPECTION15) AND ([INSPSJ_INSPECTI"& _ 
                "ON16] = @Original_INSPSJ_INSPECTION16) AND ([INSPSJ_INSPECTION_TIME02] = @Origin"& _ 
                "al_INSPSJ_INSPECTION_TIME02) AND ((@IsNull_UPDATED_BY = 1 AND [UPDATED_BY] IS NU"& _ 
                "LL) OR ([UPDATED_BY] = @Original_UPDATED_BY)) AND ([CREATED_WHEN] = @Original_CR"& _ 
                "EATED_WHEN) AND ((@IsNull_UPDATED_WHEN = 1 AND [UPDATED_WHEN] IS NULL) OR ([UPDA"& _ 
                "TED_WHEN] = @Original_UPDATED_WHEN)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_TYPE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ASM_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ASM_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BOOK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BOOK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YEAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UNIT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNIT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AT_MT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AT_MT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMISSION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMISSION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INJ_MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INJ_MODEL_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SPARE_001", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPARE_001", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPARE_001", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPARE_001", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SB_DATA_SB_PARTS_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_PARTS_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SB_DATA_SB_SERIAL_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SB_DATA_GASKET_GRADE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_GASKET_GRADE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINE_ON_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINE_OFF_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_OFF_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_BCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_BCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_CRT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CRT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_CTM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CTM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_CCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_DPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_DPT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_FWT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_FWT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_HDT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HDT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_CCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_HCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_PPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_PPT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION05", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION06", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION06", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION_TIME01", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION11", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION12", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION13", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION14", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION14", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION15", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION16", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION16", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION_TIME02", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UPDATED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UPDATED_BY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_WHEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UPDATED_WHEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_WHEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UPDATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_WHEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ENGINE_LIST] ([ENGINE_TYPE], [ENGINE_NO], [ENGINE_ASM_NO], [BOOK], ["& _ 
                "YEAR], [MODEL_CODE], [LOT_NO], [UNIT_NO], [AT_MT], [EMISSION], [INJ_MODEL_CODE],"& _ 
                " [SPARE_001], [SB_DATA_SB_PARTS_NO], [SB_DATA_SB_SERIAL_NO], [SB_DATA_GASKET_GRA"& _ 
                "DE], [LINE_ON_TIME], [LINE_OFF_TIME], [RPCOCF_SBLO_BCT], [RPCOCF_SBLO_CRT], [RPC"& _ 
                "OCF_SBLO_CTM], [RPCOCF_SBLO_SPARE01], [RPCOCF_SBLO_SPARE02], [RPCOCF_SBLO_SPARE0"& _ 
                "3], [RPCOCF_MALO_CCT], [RPCOCF_MALO_DPT], [RPCOCF_MALO_FWT], [RPCOCF_MALO_SPARE0"& _ 
                "1], [RPCOCF_MALO_SPARE02], [RPCOCF_MALO_SPARE03], [RPCOCF_MBLO_HDT], [RPCOCF_MBL"& _ 
                "O_CCT], [RPCOCF_MBLO_HCT], [RPCOCF_MBLO_PPT], [RPCOCF_MBLO_SPARE01], [RPCOCF_MBL"& _ 
                "O_SPARE02], [RPCOCF_MBLO_SPARE03], [RPCOCF_MBLO_SPARE04], [INSPSJ_INSPECTION01],"& _ 
                " [INSPSJ_INSPECTION02], [INSPSJ_INSPECTION03], [INSPSJ_INSPECTION04], [INSPSJ_IN"& _ 
                "SPECTION05], [INSPSJ_INSPECTION06], [INSPSJ_INSPECTION_TIME01], [INSPSJ_INSPECTI"& _ 
                "ON11], [INSPSJ_INSPECTION12], [INSPSJ_INSPECTION13], [INSPSJ_INSPECTION14], [INS"& _ 
                "PSJ_INSPECTION15], [INSPSJ_INSPECTION16], [INSPSJ_INSPECTION_TIME02], [UPDATED_B"& _ 
                "Y], [CREATED_WHEN], [UPDATED_WHEN]) VALUES (@ENGINE_TYPE, @ENGINE_NO, @ENGINE_AS"& _ 
                "M_NO, @BOOK, @YEAR, @MODEL_CODE, @LOT_NO, @UNIT_NO, @AT_MT, @EMISSION, @INJ_MODE"& _ 
                "L_CODE, @SPARE_001, @SB_DATA_SB_PARTS_NO, @SB_DATA_SB_SERIAL_NO, @SB_DATA_GASKET"& _ 
                "_GRADE, @LINE_ON_TIME, @LINE_OFF_TIME, @RPCOCF_SBLO_BCT, @RPCOCF_SBLO_CRT, @RPCO"& _ 
                "CF_SBLO_CTM, @RPCOCF_SBLO_SPARE01, @RPCOCF_SBLO_SPARE02, @RPCOCF_SBLO_SPARE03, @"& _ 
                "RPCOCF_MALO_CCT, @RPCOCF_MALO_DPT, @RPCOCF_MALO_FWT, @RPCOCF_MALO_SPARE01, @RPCO"& _ 
                "CF_MALO_SPARE02, @RPCOCF_MALO_SPARE03, @RPCOCF_MBLO_HDT, @RPCOCF_MBLO_CCT, @RPCO"& _ 
                "CF_MBLO_HCT, @RPCOCF_MBLO_PPT, @RPCOCF_MBLO_SPARE01, @RPCOCF_MBLO_SPARE02, @RPCO"& _ 
                "CF_MBLO_SPARE03, @RPCOCF_MBLO_SPARE04, @INSPSJ_INSPECTION01, @INSPSJ_INSPECTION0"& _ 
                "2, @INSPSJ_INSPECTION03, @INSPSJ_INSPECTION04, @INSPSJ_INSPECTION05, @INSPSJ_INS"& _ 
                "PECTION06, @INSPSJ_INSPECTION_TIME01, @INSPSJ_INSPECTION11, @INSPSJ_INSPECTION12"& _ 
                ", @INSPSJ_INSPECTION13, @INSPSJ_INSPECTION14, @INSPSJ_INSPECTION15, @INSPSJ_INSP"& _ 
                "ECTION16, @INSPSJ_INSPECTION_TIME02, @UPDATED_BY, @CREATED_WHEN, @UPDATED_WHEN);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_"& _ 
                "NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB"& _ 
                "_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SB"& _ 
                "LO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE"& _ 
                "02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCO"& _ 
                "CF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCO"& _ 
                "CF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_"& _ 
                "SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_I"& _ 
                "NSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSP"& _ 
                "SJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTIO"& _ 
                "N12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPE"& _ 
                "CTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN FROM E"& _ 
                "NGINE_LIST WHERE (ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_TYPE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ASM_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ASM_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BOOK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BOOK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNIT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNIT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AT_MT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AT_MT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMISSION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMISSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INJ_MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INJ_MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPARE_001", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPARE_001", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB_DATA_SB_PARTS_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_PARTS_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB_DATA_SB_SERIAL_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB_DATA_GASKET_GRADE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_GASKET_GRADE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINE_ON_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINE_OFF_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_OFF_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_BCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_BCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_CRT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CRT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_CTM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CTM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_CCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_DPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_DPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_FWT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_FWT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_HDT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HDT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_CCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_HCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_PPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_PPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION05", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION06", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION_TIME01", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION11", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION12", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION13", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION14", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION15", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION16", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION16", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION_TIME02", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDATED_BY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_WHEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_WHEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ENGINE_LIST] SET [ENGINE_TYPE] = @ENGINE_TYPE, [ENGINE_NO] = @ENGINE_NO, "& _ 
                "[ENGINE_ASM_NO] = @ENGINE_ASM_NO, [BOOK] = @BOOK, [YEAR] = @YEAR, [MODEL_CODE] ="& _ 
                " @MODEL_CODE, [LOT_NO] = @LOT_NO, [UNIT_NO] = @UNIT_NO, [AT_MT] = @AT_MT, [EMISS"& _ 
                "ION] = @EMISSION, [INJ_MODEL_CODE] = @INJ_MODEL_CODE, [SPARE_001] = @SPARE_001, "& _ 
                "[SB_DATA_SB_PARTS_NO] = @SB_DATA_SB_PARTS_NO, [SB_DATA_SB_SERIAL_NO] = @SB_DATA_"& _ 
                "SB_SERIAL_NO, [SB_DATA_GASKET_GRADE] = @SB_DATA_GASKET_GRADE, [LINE_ON_TIME] = @"& _ 
                "LINE_ON_TIME, [LINE_OFF_TIME] = @LINE_OFF_TIME, [RPCOCF_SBLO_BCT] = @RPCOCF_SBLO"& _ 
                "_BCT, [RPCOCF_SBLO_CRT] = @RPCOCF_SBLO_CRT, [RPCOCF_SBLO_CTM] = @RPCOCF_SBLO_CTM"& _ 
                ", [RPCOCF_SBLO_SPARE01] = @RPCOCF_SBLO_SPARE01, [RPCOCF_SBLO_SPARE02] = @RPCOCF_"& _ 
                "SBLO_SPARE02, [RPCOCF_SBLO_SPARE03] = @RPCOCF_SBLO_SPARE03, [RPCOCF_MALO_CCT] = "& _ 
                "@RPCOCF_MALO_CCT, [RPCOCF_MALO_DPT] = @RPCOCF_MALO_DPT, [RPCOCF_MALO_FWT] = @RPC"& _ 
                "OCF_MALO_FWT, [RPCOCF_MALO_SPARE01] = @RPCOCF_MALO_SPARE01, [RPCOCF_MALO_SPARE02"& _ 
                "] = @RPCOCF_MALO_SPARE02, [RPCOCF_MALO_SPARE03] = @RPCOCF_MALO_SPARE03, [RPCOCF_"& _ 
                "MBLO_HDT] = @RPCOCF_MBLO_HDT, [RPCOCF_MBLO_CCT] = @RPCOCF_MBLO_CCT, [RPCOCF_MBLO"& _ 
                "_HCT] = @RPCOCF_MBLO_HCT, [RPCOCF_MBLO_PPT] = @RPCOCF_MBLO_PPT, [RPCOCF_MBLO_SPA"& _ 
                "RE01] = @RPCOCF_MBLO_SPARE01, [RPCOCF_MBLO_SPARE02] = @RPCOCF_MBLO_SPARE02, [RPC"& _ 
                "OCF_MBLO_SPARE03] = @RPCOCF_MBLO_SPARE03, [RPCOCF_MBLO_SPARE04] = @RPCOCF_MBLO_S"& _ 
                "PARE04, [INSPSJ_INSPECTION01] = @INSPSJ_INSPECTION01, [INSPSJ_INSPECTION02] = @I"& _ 
                "NSPSJ_INSPECTION02, [INSPSJ_INSPECTION03] = @INSPSJ_INSPECTION03, [INSPSJ_INSPEC"& _ 
                "TION04] = @INSPSJ_INSPECTION04, [INSPSJ_INSPECTION05] = @INSPSJ_INSPECTION05, [I"& _ 
                "NSPSJ_INSPECTION06] = @INSPSJ_INSPECTION06, [INSPSJ_INSPECTION_TIME01] = @INSPSJ"& _ 
                "_INSPECTION_TIME01, [INSPSJ_INSPECTION11] = @INSPSJ_INSPECTION11, [INSPSJ_INSPEC"& _ 
                "TION12] = @INSPSJ_INSPECTION12, [INSPSJ_INSPECTION13] = @INSPSJ_INSPECTION13, [I"& _ 
                "NSPSJ_INSPECTION14] = @INSPSJ_INSPECTION14, [INSPSJ_INSPECTION15] = @INSPSJ_INSP"& _ 
                "ECTION15, [INSPSJ_INSPECTION16] = @INSPSJ_INSPECTION16, [INSPSJ_INSPECTION_TIME0"& _ 
                "2] = @INSPSJ_INSPECTION_TIME02, [UPDATED_BY] = @UPDATED_BY, [CREATED_WHEN] = @CR"& _ 
                "EATED_WHEN, [UPDATED_WHEN] = @UPDATED_WHEN WHERE (([ID] = @Original_ID) AND ([EN"& _ 
                "GINE_TYPE] = @Original_ENGINE_TYPE) AND ([ENGINE_NO] = @Original_ENGINE_NO) AND "& _ 
                "([ENGINE_ASM_NO] = @Original_ENGINE_ASM_NO) AND ([BOOK] = @Original_BOOK) AND (["& _ 
                "YEAR] = @Original_YEAR) AND ([MODEL_CODE] = @Original_MODEL_CODE) AND ([LOT_NO] "& _ 
                "= @Original_LOT_NO) AND ([UNIT_NO] = @Original_UNIT_NO) AND ([AT_MT] = @Original"& _ 
                "_AT_MT) AND ([EMISSION] = @Original_EMISSION) AND ([INJ_MODEL_CODE] = @Original_"& _ 
                "INJ_MODEL_CODE) AND ((@IsNull_SPARE_001 = 1 AND [SPARE_001] IS NULL) OR ([SPARE_"& _ 
                "001] = @Original_SPARE_001)) AND ([SB_DATA_SB_PARTS_NO] = @Original_SB_DATA_SB_P"& _ 
                "ARTS_NO) AND ([SB_DATA_SB_SERIAL_NO] = @Original_SB_DATA_SB_SERIAL_NO) AND ([SB_"& _ 
                "DATA_GASKET_GRADE] = @Original_SB_DATA_GASKET_GRADE) AND ([LINE_ON_TIME] = @Orig"& _ 
                "inal_LINE_ON_TIME) AND ([LINE_OFF_TIME] = @Original_LINE_OFF_TIME) AND ([RPCOCF_"& _ 
                "SBLO_BCT] = @Original_RPCOCF_SBLO_BCT) AND ([RPCOCF_SBLO_CRT] = @Original_RPCOCF"& _ 
                "_SBLO_CRT) AND ([RPCOCF_SBLO_CTM] = @Original_RPCOCF_SBLO_CTM) AND ([RPCOCF_SBLO"& _ 
                "_SPARE01] = @Original_RPCOCF_SBLO_SPARE01) AND ([RPCOCF_SBLO_SPARE02] = @Origina"& _ 
                "l_RPCOCF_SBLO_SPARE02) AND ([RPCOCF_SBLO_SPARE03] = @Original_RPCOCF_SBLO_SPARE0"& _ 
                "3) AND ([RPCOCF_MALO_CCT] = @Original_RPCOCF_MALO_CCT) AND ([RPCOCF_MALO_DPT] = "& _ 
                "@Original_RPCOCF_MALO_DPT) AND ([RPCOCF_MALO_FWT] = @Original_RPCOCF_MALO_FWT) A"& _ 
                "ND ([RPCOCF_MALO_SPARE01] = @Original_RPCOCF_MALO_SPARE01) AND ([RPCOCF_MALO_SPA"& _ 
                "RE02] = @Original_RPCOCF_MALO_SPARE02) AND ([RPCOCF_MALO_SPARE03] = @Original_RP"& _ 
                "COCF_MALO_SPARE03) AND ([RPCOCF_MBLO_HDT] = @Original_RPCOCF_MBLO_HDT) AND ([RPC"& _ 
                "OCF_MBLO_CCT] = @Original_RPCOCF_MBLO_CCT) AND ([RPCOCF_MBLO_HCT] = @Original_RP"& _ 
                "COCF_MBLO_HCT) AND ([RPCOCF_MBLO_PPT] = @Original_RPCOCF_MBLO_PPT) AND ([RPCOCF_"& _ 
                "MBLO_SPARE01] = @Original_RPCOCF_MBLO_SPARE01) AND ([RPCOCF_MBLO_SPARE02] = @Ori"& _ 
                "ginal_RPCOCF_MBLO_SPARE02) AND ([RPCOCF_MBLO_SPARE03] = @Original_RPCOCF_MBLO_SP"& _ 
                "ARE03) AND ([RPCOCF_MBLO_SPARE04] = @Original_RPCOCF_MBLO_SPARE04) AND ([INSPSJ_"& _ 
                "INSPECTION01] = @Original_INSPSJ_INSPECTION01) AND ([INSPSJ_INSPECTION02] = @Ori"& _ 
                "ginal_INSPSJ_INSPECTION02) AND ([INSPSJ_INSPECTION03] = @Original_INSPSJ_INSPECT"& _ 
                "ION03) AND ([INSPSJ_INSPECTION04] = @Original_INSPSJ_INSPECTION04) AND ([INSPSJ_"& _ 
                "INSPECTION05] = @Original_INSPSJ_INSPECTION05) AND ([INSPSJ_INSPECTION06] = @Ori"& _ 
                "ginal_INSPSJ_INSPECTION06) AND ([INSPSJ_INSPECTION_TIME01] = @Original_INSPSJ_IN"& _ 
                "SPECTION_TIME01) AND ([INSPSJ_INSPECTION11] = @Original_INSPSJ_INSPECTION11) AND"& _ 
                " ([INSPSJ_INSPECTION12] = @Original_INSPSJ_INSPECTION12) AND ([INSPSJ_INSPECTION"& _ 
                "13] = @Original_INSPSJ_INSPECTION13) AND ([INSPSJ_INSPECTION14] = @Original_INSP"& _ 
                "SJ_INSPECTION14) AND ([INSPSJ_INSPECTION15] = @Original_INSPSJ_INSPECTION15) AND"& _ 
                " ([INSPSJ_INSPECTION16] = @Original_INSPSJ_INSPECTION16) AND ([INSPSJ_INSPECTION"& _ 
                "_TIME02] = @Original_INSPSJ_INSPECTION_TIME02) AND ((@IsNull_UPDATED_BY = 1 AND "& _ 
                "[UPDATED_BY] IS NULL) OR ([UPDATED_BY] = @Original_UPDATED_BY)) AND ([CREATED_WH"& _ 
                "EN] = @Original_CREATED_WHEN) AND ((@IsNull_UPDATED_WHEN = 1 AND [UPDATED_WHEN] "& _ 
                "IS NULL) OR ([UPDATED_WHEN] = @Original_UPDATED_WHEN)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, ENGINE_TYPE"& _ 
                ", ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMIS"& _ 
                "SION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_D"& _ 
                "ATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT,"& _ 
                " RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03,"& _ 
                " RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_"& _ 
                "MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO"& _ 
                "_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPA"& _ 
                "RE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSP"& _ 
                "ECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_"& _ 
                "INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13"& _ 
                ", INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTI"& _ 
                "ON_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN FROM ENGINE_LIST WHERE (ID = @"& _ 
                "ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_TYPE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ASM_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ASM_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BOOK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BOOK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNIT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNIT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AT_MT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AT_MT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMISSION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMISSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INJ_MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INJ_MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPARE_001", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPARE_001", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB_DATA_SB_PARTS_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_PARTS_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB_DATA_SB_SERIAL_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SB_DATA_GASKET_GRADE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_GASKET_GRADE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINE_ON_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINE_OFF_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_OFF_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_BCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_BCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_CRT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CRT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_CTM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CTM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_SBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_CCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_DPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_DPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_FWT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_FWT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MALO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_HDT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HDT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_CCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_HCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_PPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_PPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RPCOCF_MBLO_SPARE04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION03", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION04", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION05", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION05", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION06", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION06", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION_TIME01", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION11", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION12", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION13", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION14", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION15", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION16", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION16", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INSPSJ_INSPECTION_TIME02", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME02", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDATED_BY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_WHEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_WHEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_TYPE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ASM_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ASM_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BOOK", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BOOK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YEAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UNIT_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNIT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AT_MT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AT_MT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMISSION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMISSION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INJ_MODEL_CODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INJ_MODEL_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SPARE_001", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPARE_001", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SPARE_001", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPARE_001", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SB_DATA_SB_PARTS_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_PARTS_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SB_DATA_SB_SERIAL_NO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SB_DATA_GASKET_GRADE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_GASKET_GRADE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINE_ON_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINE_OFF_TIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_OFF_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_BCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_BCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_CRT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CRT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_CTM", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_CTM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_SBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_SBLO_SPARE03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_CCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_DPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_DPT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_FWT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_FWT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MALO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MALO_SPARE03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_HDT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HDT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_CCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_CCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_HCT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_HCT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_PPT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_PPT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RPCOCF_MBLO_SPARE04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RPCOCF_MBLO_SPARE04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION01", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION02", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION03", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION03", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION04", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION04", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION05", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION05", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION06", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION06", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION_TIME01", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION11", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION12", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION13", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION14", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION14", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION15", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION16", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION16", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INSPSJ_INSPECTION_TIME02", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INSPSJ_INSPECTION_TIME02", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UPDATED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UPDATED_BY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATED_WHEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UPDATED_WHEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_WHEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UPDATED_WHEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDATED_WHEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO,"& _ 
                " UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DA"& _ 
                "TA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_"& _ 
                "BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02,"& _ 
                " RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_"& _ 
                "MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_"& _ 
                "MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPA"& _ 
                "RE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSP"& _ 
                "ECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_"& _ 
                "INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12"& _ 
                ", INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTI"& _ 
                "ON16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN FROM ENGI"& _ 
                "NE_LIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT  es.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      ENGINE_LIST es"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE es.LINE_ON_TIME >= @pFrom and es.LI"& _ 
                "NE_ON_TIME >= @pTo"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO,"& _ 
                " UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DA"& _ 
                "TA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_"& _ 
                "BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02,"& _ 
                " RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_"& _ 
                "MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_"& _ 
                "MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPA"& _ 
                "RE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSP"& _ 
                "ECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_"& _ 
                "INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12"& _ 
                ", INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTI"& _ 
                "ON16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN FROM ENGI"& _ 
                "NE_LIST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ID = @pENGINE_ID"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO,"& _ 
                " UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DA"& _ 
                "TA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_"& _ 
                "BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02,"& _ 
                " RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_"& _ 
                "MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_"& _ 
                "MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPA"& _ 
                "RE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSP"& _ 
                "ECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_"& _ 
                "INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12"& _ 
                ", INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTI"& _ 
                "ON16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN FROM ENGI"& _ 
                "NE_LIST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ENGINE_NO=@engineNo"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@engineNo", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, "& _ 
                "LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO"& _ 
                ", SB_DATA_SB_SERIAL_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SB_DATA_GASKET_GRADE, LINE_ON"& _ 
                "_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_"& _ 
                "SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOC"& _ 
                "F_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_"& _ 
                "MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INS"& _ 
                "PSJ_INSPECTION02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         INSPSJ_INSPECTION03, INSPSJ_INSPECT"& _ 
                "ION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPS"& _ 
                "J_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPE"& _ 
                "CTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ENGINE_LIS"& _ 
                "T AS es"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (LINE_ON_TIME >= @pFrom) AND (LINE_ON_TIME <= @pTo)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, "& _ 
                "LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO"& _ 
                ", SB_DATA_SB_SERIAL_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SB_DATA_GASKET_GRADE, LINE_ON"& _ 
                "_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_"& _ 
                "SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOC"& _ 
                "F_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_"& _ 
                "MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INS"& _ 
                "PSJ_INSPECTION02, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         INSPSJ_INSPECTION03, INSPSJ_INSPECT"& _ 
                "ION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPS"& _ 
                "J_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPE"& _ 
                "CTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ENGINE_LIS"& _ 
                "T"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (MODEL_CODE = @modelCode) AND (LOT_NO = @lotNo)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@modelCode", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lotNo", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT ID, ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO,"& _ 
                " UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DA"& _ 
                "TA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_"& _ 
                "BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02,"& _ 
                " RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_"& _ 
                "MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_"& _ 
                "MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPA"& _ 
                "RE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSP"& _ 
                "ECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_"& _ 
                "INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12"& _ 
                ", INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTI"& _ 
                "ON16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN FROM ENGI"& _ 
                "NE_LIST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE SB_DATA_SB_SERIAL_NO = @SERIAL_NO"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIAL_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.ENGINE_LISTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByASM_DATE(ByVal dataTable As DataSet1.ENGINE_LISTDataTable, ByVal pFrom As Date, ByVal pTo As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTo,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByASM_DATE(ByVal pFrom As Date, ByVal pTo As Date) As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTo,Date)
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByENGINE_ID(ByVal dataTable As DataSet1.ENGINE_LISTDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByENGINE_ID(ByVal pENGINE_ID As Integer) As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID,Integer)
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByEngineNo(ByVal dataTable As DataSet1.ENGINE_LISTDataTable, ByVal engineNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (engineNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engineNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(engineNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByEngineNo(ByVal engineNo As String) As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (engineNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engineNo")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(engineNo,String)
            End If
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLINE_ON_TIME(ByVal dataTable As DataSet1.ENGINE_LISTDataTable, ByVal pFrom As Date, ByVal pTo As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTo,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLINE_ON_TIME(ByVal pFrom As Date, ByVal pTo As Date) As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTo,Date)
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByModelCodeLotNo(ByVal dataTable As DataSet1.ENGINE_LISTDataTable, ByVal modelCode As String, ByVal lotNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (modelCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("modelCode")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(modelCode,String)
            End If
            If (lotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(lotNo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByModelCodeLotNo(ByVal modelCode As String, ByVal lotNo As String) As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (modelCode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("modelCode")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(modelCode,String)
            End If
            If (lotNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lotNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(lotNo,String)
            End If
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySerialNo(ByVal dataTable As DataSet1.ENGINE_LISTDataTable, ByVal SERIAL_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySerialNo(ByVal SERIAL_NO As String) As DataSet1.ENGINE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO,String)
            End If
            Dim dataTable As DataSet1.ENGINE_LISTDataTable = New DataSet1.ENGINE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.ENGINE_LISTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "ENGINE_LIST")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ENGINE_TYPE As String,  _
                    ByVal Original_ENGINE_NO As String,  _
                    ByVal Original_ENGINE_ASM_NO As String,  _
                    ByVal Original_BOOK As String,  _
                    ByVal Original_YEAR As String,  _
                    ByVal Original_MODEL_CODE As String,  _
                    ByVal Original_LOT_NO As String,  _
                    ByVal Original_UNIT_NO As String,  _
                    ByVal Original_AT_MT As String,  _
                    ByVal Original_EMISSION As String,  _
                    ByVal Original_INJ_MODEL_CODE As String,  _
                    ByVal Original_SPARE_001 As String,  _
                    ByVal Original_SB_DATA_SB_PARTS_NO As String,  _
                    ByVal Original_SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal Original_SB_DATA_GASKET_GRADE As String,  _
                    ByVal Original_LINE_ON_TIME As Date,  _
                    ByVal Original_LINE_OFF_TIME As Date,  _
                    ByVal Original_RPCOCF_SBLO_BCT As String,  _
                    ByVal Original_RPCOCF_SBLO_CRT As String,  _
                    ByVal Original_RPCOCF_SBLO_CTM As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MALO_CCT As String,  _
                    ByVal Original_RPCOCF_MALO_DPT As String,  _
                    ByVal Original_RPCOCF_MALO_FWT As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MBLO_HDT As String,  _
                    ByVal Original_RPCOCF_MBLO_CCT As String,  _
                    ByVal Original_RPCOCF_MBLO_HCT As String,  _
                    ByVal Original_RPCOCF_MBLO_PPT As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal Original_INSPSJ_INSPECTION01 As String,  _
                    ByVal Original_INSPSJ_INSPECTION02 As String,  _
                    ByVal Original_INSPSJ_INSPECTION03 As String,  _
                    ByVal Original_INSPSJ_INSPECTION04 As String,  _
                    ByVal Original_INSPSJ_INSPECTION05 As String,  _
                    ByVal Original_INSPSJ_INSPECTION06 As String,  _
                    ByVal Original_INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal Original_INSPSJ_INSPECTION11 As String,  _
                    ByVal Original_INSPSJ_INSPECTION12 As String,  _
                    ByVal Original_INSPSJ_INSPECTION13 As String,  _
                    ByVal Original_INSPSJ_INSPECTION14 As String,  _
                    ByVal Original_INSPSJ_INSPECTION15 As String,  _
                    ByVal Original_INSPSJ_INSPECTION16 As String,  _
                    ByVal Original_INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal Original_UPDATED_BY As String,  _
                    ByVal Original_CREATED_WHEN As Date,  _
                    ByVal Original_UPDATED_WHEN As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ENGINE_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ENGINE_TYPE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ENGINE_TYPE,String)
            End If
            If (Original_ENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ENGINE_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ENGINE_NO,String)
            End If
            If (Original_ENGINE_ASM_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ENGINE_ASM_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ENGINE_ASM_NO,String)
            End If
            If (Original_BOOK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BOOK")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_BOOK,String)
            End If
            If (Original_YEAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_YEAR")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_YEAR,String)
            End If
            If (Original_MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MODEL_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_MODEL_CODE,String)
            End If
            If (Original_LOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LOT_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_LOT_NO,String)
            End If
            If (Original_UNIT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UNIT_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_UNIT_NO,String)
            End If
            If (Original_AT_MT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AT_MT")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_AT_MT,String)
            End If
            If (Original_EMISSION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMISSION")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_EMISSION,String)
            End If
            If (Original_INJ_MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INJ_MODEL_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_INJ_MODEL_CODE,String)
            End If
            If (Original_SPARE_001 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_SPARE_001,String)
            End If
            If (Original_SB_DATA_SB_PARTS_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SB_DATA_SB_PARTS_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_SB_DATA_SB_PARTS_NO,String)
            End If
            If (Original_SB_DATA_SB_SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SB_DATA_SB_SERIAL_NO")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_SB_DATA_SB_SERIAL_NO,String)
            End If
            If (Original_SB_DATA_GASKET_GRADE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SB_DATA_GASKET_GRADE")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SB_DATA_GASKET_GRADE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_LINE_ON_TIME,Date)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_LINE_OFF_TIME,Date)
            If (Original_RPCOCF_SBLO_BCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_BCT")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_RPCOCF_SBLO_BCT,String)
            End If
            If (Original_RPCOCF_SBLO_CRT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_CRT")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_RPCOCF_SBLO_CRT,String)
            End If
            If (Original_RPCOCF_SBLO_CTM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_CTM")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_RPCOCF_SBLO_CTM,String)
            End If
            If (Original_RPCOCF_SBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_SPARE01")
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_RPCOCF_SBLO_SPARE01,String)
            End If
            If (Original_RPCOCF_SBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_SPARE02")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_RPCOCF_SBLO_SPARE02,String)
            End If
            If (Original_RPCOCF_SBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_SPARE03")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_RPCOCF_SBLO_SPARE03,String)
            End If
            If (Original_RPCOCF_MALO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_CCT")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_RPCOCF_MALO_CCT,String)
            End If
            If (Original_RPCOCF_MALO_DPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_DPT")
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_RPCOCF_MALO_DPT,String)
            End If
            If (Original_RPCOCF_MALO_FWT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_FWT")
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_RPCOCF_MALO_FWT,String)
            End If
            If (Original_RPCOCF_MALO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_SPARE01")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_RPCOCF_MALO_SPARE01,String)
            End If
            If (Original_RPCOCF_MALO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_SPARE02")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_RPCOCF_MALO_SPARE02,String)
            End If
            If (Original_RPCOCF_MALO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_SPARE03")
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_RPCOCF_MALO_SPARE03,String)
            End If
            If (Original_RPCOCF_MBLO_HDT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_HDT")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_RPCOCF_MBLO_HDT,String)
            End If
            If (Original_RPCOCF_MBLO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_CCT")
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_RPCOCF_MBLO_CCT,String)
            End If
            If (Original_RPCOCF_MBLO_HCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_HCT")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_RPCOCF_MBLO_HCT,String)
            End If
            If (Original_RPCOCF_MBLO_PPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_PPT")
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_RPCOCF_MBLO_PPT,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE01")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_RPCOCF_MBLO_SPARE01,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE02")
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_RPCOCF_MBLO_SPARE02,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE03")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_RPCOCF_MBLO_SPARE03,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE04")
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_RPCOCF_MBLO_SPARE04,String)
            End If
            If (Original_INSPSJ_INSPECTION01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION01")
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_INSPSJ_INSPECTION01,String)
            End If
            If (Original_INSPSJ_INSPECTION02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION02")
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_INSPSJ_INSPECTION02,String)
            End If
            If (Original_INSPSJ_INSPECTION03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION03")
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_INSPSJ_INSPECTION03,String)
            End If
            If (Original_INSPSJ_INSPECTION04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION04")
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_INSPSJ_INSPECTION04,String)
            End If
            If (Original_INSPSJ_INSPECTION05 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION05")
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_INSPSJ_INSPECTION05,String)
            End If
            If (Original_INSPSJ_INSPECTION06 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION06")
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_INSPSJ_INSPECTION06,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_INSPSJ_INSPECTION_TIME01,Date)
            If (Original_INSPSJ_INSPECTION11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION11")
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_INSPSJ_INSPECTION11,String)
            End If
            If (Original_INSPSJ_INSPECTION12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION12")
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_INSPSJ_INSPECTION12,String)
            End If
            If (Original_INSPSJ_INSPECTION13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION13")
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_INSPSJ_INSPECTION13,String)
            End If
            If (Original_INSPSJ_INSPECTION14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION14")
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_INSPSJ_INSPECTION14,String)
            End If
            If (Original_INSPSJ_INSPECTION15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION15")
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_INSPSJ_INSPECTION15,String)
            End If
            If (Original_INSPSJ_INSPECTION16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION16")
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_INSPSJ_INSPECTION16,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_INSPSJ_INSPECTION_TIME02,Date)
            If (Original_UPDATED_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_UPDATED_BY,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_CREATED_WHEN,Date)
            If (Original_UPDATED_WHEN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_UPDATED_WHEN.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Global.System.Nullable(Of Date)) As Integer
            If (ENGINE_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ENGINE_TYPE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_TYPE,String)
            End If
            If (ENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ENGINE_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ENGINE_NO,String)
            End If
            If (ENGINE_ASM_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ENGINE_ASM_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ENGINE_ASM_NO,String)
            End If
            If (BOOK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BOOK")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BOOK,String)
            End If
            If (YEAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("YEAR")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(YEAR,String)
            End If
            If (MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODEL_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MODEL_CODE,String)
            End If
            If (LOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LOT_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LOT_NO,String)
            End If
            If (UNIT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UNIT_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(UNIT_NO,String)
            End If
            If (AT_MT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AT_MT")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(AT_MT,String)
            End If
            If (EMISSION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMISSION")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(EMISSION,String)
            End If
            If (INJ_MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INJ_MODEL_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(INJ_MODEL_CODE,String)
            End If
            If (SPARE_001 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SPARE_001,String)
            End If
            If (SB_DATA_SB_PARTS_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SB_DATA_SB_PARTS_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SB_DATA_SB_PARTS_NO,String)
            End If
            If (SB_DATA_SB_SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SB_DATA_SB_SERIAL_NO")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SB_DATA_SB_SERIAL_NO,String)
            End If
            If (SB_DATA_GASKET_GRADE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SB_DATA_GASKET_GRADE")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SB_DATA_GASKET_GRADE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(LINE_ON_TIME,Date)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(LINE_OFF_TIME,Date)
            If (RPCOCF_SBLO_BCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_BCT")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RPCOCF_SBLO_BCT,String)
            End If
            If (RPCOCF_SBLO_CRT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_CRT")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RPCOCF_SBLO_CRT,String)
            End If
            If (RPCOCF_SBLO_CTM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_CTM")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RPCOCF_SBLO_CTM,String)
            End If
            If (RPCOCF_SBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_SPARE01")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(RPCOCF_SBLO_SPARE01,String)
            End If
            If (RPCOCF_SBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_SPARE02")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(RPCOCF_SBLO_SPARE02,String)
            End If
            If (RPCOCF_SBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_SPARE03")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(RPCOCF_SBLO_SPARE03,String)
            End If
            If (RPCOCF_MALO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_CCT")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(RPCOCF_MALO_CCT,String)
            End If
            If (RPCOCF_MALO_DPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_DPT")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(RPCOCF_MALO_DPT,String)
            End If
            If (RPCOCF_MALO_FWT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_FWT")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(RPCOCF_MALO_FWT,String)
            End If
            If (RPCOCF_MALO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_SPARE01")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RPCOCF_MALO_SPARE01,String)
            End If
            If (RPCOCF_MALO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_SPARE02")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(RPCOCF_MALO_SPARE02,String)
            End If
            If (RPCOCF_MALO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_SPARE03")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RPCOCF_MALO_SPARE03,String)
            End If
            If (RPCOCF_MBLO_HDT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_HDT")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(RPCOCF_MBLO_HDT,String)
            End If
            If (RPCOCF_MBLO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_CCT")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(RPCOCF_MBLO_CCT,String)
            End If
            If (RPCOCF_MBLO_HCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_HCT")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(RPCOCF_MBLO_HCT,String)
            End If
            If (RPCOCF_MBLO_PPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_PPT")
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(RPCOCF_MBLO_PPT,String)
            End If
            If (RPCOCF_MBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE01")
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(RPCOCF_MBLO_SPARE01,String)
            End If
            If (RPCOCF_MBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE02")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(RPCOCF_MBLO_SPARE02,String)
            End If
            If (RPCOCF_MBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE03")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(RPCOCF_MBLO_SPARE03,String)
            End If
            If (RPCOCF_MBLO_SPARE04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE04")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(RPCOCF_MBLO_SPARE04,String)
            End If
            If (INSPSJ_INSPECTION01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION01")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(INSPSJ_INSPECTION01,String)
            End If
            If (INSPSJ_INSPECTION02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION02")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(INSPSJ_INSPECTION02,String)
            End If
            If (INSPSJ_INSPECTION03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION03")
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(INSPSJ_INSPECTION03,String)
            End If
            If (INSPSJ_INSPECTION04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION04")
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(INSPSJ_INSPECTION04,String)
            End If
            If (INSPSJ_INSPECTION05 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION05")
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(INSPSJ_INSPECTION05,String)
            End If
            If (INSPSJ_INSPECTION06 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION06")
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(INSPSJ_INSPECTION06,String)
            End If
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(INSPSJ_INSPECTION_TIME01,Date)
            If (INSPSJ_INSPECTION11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION11")
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(INSPSJ_INSPECTION11,String)
            End If
            If (INSPSJ_INSPECTION12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION12")
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(INSPSJ_INSPECTION12,String)
            End If
            If (INSPSJ_INSPECTION13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION13")
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(INSPSJ_INSPECTION13,String)
            End If
            If (INSPSJ_INSPECTION14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION14")
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(INSPSJ_INSPECTION14,String)
            End If
            If (INSPSJ_INSPECTION15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION15")
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(INSPSJ_INSPECTION15,String)
            End If
            If (INSPSJ_INSPECTION16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION16")
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(INSPSJ_INSPECTION16,String)
            End If
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(INSPSJ_INSPECTION_TIME02,Date)
            If (UPDATED_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(UPDATED_BY,String)
            End If
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(CREATED_WHEN,Date)
            If (UPDATED_WHEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(UPDATED_WHEN.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ENGINE_TYPE As String,  _
                    ByVal Original_ENGINE_NO As String,  _
                    ByVal Original_ENGINE_ASM_NO As String,  _
                    ByVal Original_BOOK As String,  _
                    ByVal Original_YEAR As String,  _
                    ByVal Original_MODEL_CODE As String,  _
                    ByVal Original_LOT_NO As String,  _
                    ByVal Original_UNIT_NO As String,  _
                    ByVal Original_AT_MT As String,  _
                    ByVal Original_EMISSION As String,  _
                    ByVal Original_INJ_MODEL_CODE As String,  _
                    ByVal Original_SPARE_001 As String,  _
                    ByVal Original_SB_DATA_SB_PARTS_NO As String,  _
                    ByVal Original_SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal Original_SB_DATA_GASKET_GRADE As String,  _
                    ByVal Original_LINE_ON_TIME As Date,  _
                    ByVal Original_LINE_OFF_TIME As Date,  _
                    ByVal Original_RPCOCF_SBLO_BCT As String,  _
                    ByVal Original_RPCOCF_SBLO_CRT As String,  _
                    ByVal Original_RPCOCF_SBLO_CTM As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MALO_CCT As String,  _
                    ByVal Original_RPCOCF_MALO_DPT As String,  _
                    ByVal Original_RPCOCF_MALO_FWT As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MBLO_HDT As String,  _
                    ByVal Original_RPCOCF_MBLO_CCT As String,  _
                    ByVal Original_RPCOCF_MBLO_HCT As String,  _
                    ByVal Original_RPCOCF_MBLO_PPT As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal Original_INSPSJ_INSPECTION01 As String,  _
                    ByVal Original_INSPSJ_INSPECTION02 As String,  _
                    ByVal Original_INSPSJ_INSPECTION03 As String,  _
                    ByVal Original_INSPSJ_INSPECTION04 As String,  _
                    ByVal Original_INSPSJ_INSPECTION05 As String,  _
                    ByVal Original_INSPSJ_INSPECTION06 As String,  _
                    ByVal Original_INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal Original_INSPSJ_INSPECTION11 As String,  _
                    ByVal Original_INSPSJ_INSPECTION12 As String,  _
                    ByVal Original_INSPSJ_INSPECTION13 As String,  _
                    ByVal Original_INSPSJ_INSPECTION14 As String,  _
                    ByVal Original_INSPSJ_INSPECTION15 As String,  _
                    ByVal Original_INSPSJ_INSPECTION16 As String,  _
                    ByVal Original_INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal Original_UPDATED_BY As String,  _
                    ByVal Original_CREATED_WHEN As Date,  _
                    ByVal Original_UPDATED_WHEN As Global.System.Nullable(Of Date),  _
                    ByVal ID As Integer) As Integer
            If (ENGINE_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ENGINE_TYPE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_TYPE,String)
            End If
            If (ENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ENGINE_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ENGINE_NO,String)
            End If
            If (ENGINE_ASM_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ENGINE_ASM_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ENGINE_ASM_NO,String)
            End If
            If (BOOK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("BOOK")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BOOK,String)
            End If
            If (YEAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("YEAR")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(YEAR,String)
            End If
            If (MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODEL_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(MODEL_CODE,String)
            End If
            If (LOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LOT_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(LOT_NO,String)
            End If
            If (UNIT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UNIT_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(UNIT_NO,String)
            End If
            If (AT_MT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("AT_MT")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(AT_MT,String)
            End If
            If (EMISSION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMISSION")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(EMISSION,String)
            End If
            If (INJ_MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INJ_MODEL_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(INJ_MODEL_CODE,String)
            End If
            If (SPARE_001 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SPARE_001,String)
            End If
            If (SB_DATA_SB_PARTS_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SB_DATA_SB_PARTS_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SB_DATA_SB_PARTS_NO,String)
            End If
            If (SB_DATA_SB_SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SB_DATA_SB_SERIAL_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SB_DATA_SB_SERIAL_NO,String)
            End If
            If (SB_DATA_GASKET_GRADE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SB_DATA_GASKET_GRADE")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SB_DATA_GASKET_GRADE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(LINE_ON_TIME,Date)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(LINE_OFF_TIME,Date)
            If (RPCOCF_SBLO_BCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_BCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(RPCOCF_SBLO_BCT,String)
            End If
            If (RPCOCF_SBLO_CRT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_CRT")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(RPCOCF_SBLO_CRT,String)
            End If
            If (RPCOCF_SBLO_CTM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_CTM")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(RPCOCF_SBLO_CTM,String)
            End If
            If (RPCOCF_SBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_SPARE01")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(RPCOCF_SBLO_SPARE01,String)
            End If
            If (RPCOCF_SBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_SPARE02")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(RPCOCF_SBLO_SPARE02,String)
            End If
            If (RPCOCF_SBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_SBLO_SPARE03")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(RPCOCF_SBLO_SPARE03,String)
            End If
            If (RPCOCF_MALO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_CCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(RPCOCF_MALO_CCT,String)
            End If
            If (RPCOCF_MALO_DPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_DPT")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(RPCOCF_MALO_DPT,String)
            End If
            If (RPCOCF_MALO_FWT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_FWT")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(RPCOCF_MALO_FWT,String)
            End If
            If (RPCOCF_MALO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_SPARE01")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(RPCOCF_MALO_SPARE01,String)
            End If
            If (RPCOCF_MALO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_SPARE02")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(RPCOCF_MALO_SPARE02,String)
            End If
            If (RPCOCF_MALO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MALO_SPARE03")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RPCOCF_MALO_SPARE03,String)
            End If
            If (RPCOCF_MBLO_HDT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_HDT")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(RPCOCF_MBLO_HDT,String)
            End If
            If (RPCOCF_MBLO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_CCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(RPCOCF_MBLO_CCT,String)
            End If
            If (RPCOCF_MBLO_HCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_HCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(RPCOCF_MBLO_HCT,String)
            End If
            If (RPCOCF_MBLO_PPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_PPT")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(RPCOCF_MBLO_PPT,String)
            End If
            If (RPCOCF_MBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE01")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(RPCOCF_MBLO_SPARE01,String)
            End If
            If (RPCOCF_MBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE02")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(RPCOCF_MBLO_SPARE02,String)
            End If
            If (RPCOCF_MBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE03")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(RPCOCF_MBLO_SPARE03,String)
            End If
            If (RPCOCF_MBLO_SPARE04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPCOCF_MBLO_SPARE04")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(RPCOCF_MBLO_SPARE04,String)
            End If
            If (INSPSJ_INSPECTION01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION01")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(INSPSJ_INSPECTION01,String)
            End If
            If (INSPSJ_INSPECTION02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION02")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(INSPSJ_INSPECTION02,String)
            End If
            If (INSPSJ_INSPECTION03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION03")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(INSPSJ_INSPECTION03,String)
            End If
            If (INSPSJ_INSPECTION04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION04")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(INSPSJ_INSPECTION04,String)
            End If
            If (INSPSJ_INSPECTION05 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION05")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(INSPSJ_INSPECTION05,String)
            End If
            If (INSPSJ_INSPECTION06 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION06")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(INSPSJ_INSPECTION06,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(INSPSJ_INSPECTION_TIME01,Date)
            If (INSPSJ_INSPECTION11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION11")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(INSPSJ_INSPECTION11,String)
            End If
            If (INSPSJ_INSPECTION12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION12")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(INSPSJ_INSPECTION12,String)
            End If
            If (INSPSJ_INSPECTION13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION13")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(INSPSJ_INSPECTION13,String)
            End If
            If (INSPSJ_INSPECTION14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION14")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(INSPSJ_INSPECTION14,String)
            End If
            If (INSPSJ_INSPECTION15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION15")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(INSPSJ_INSPECTION15,String)
            End If
            If (INSPSJ_INSPECTION16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("INSPSJ_INSPECTION16")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(INSPSJ_INSPECTION16,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(INSPSJ_INSPECTION_TIME02,Date)
            If (UPDATED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(UPDATED_BY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(CREATED_WHEN,Date)
            If (UPDATED_WHEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(UPDATED_WHEN.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ID,Integer)
            If (Original_ENGINE_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ENGINE_TYPE")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ENGINE_TYPE,String)
            End If
            If (Original_ENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ENGINE_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_ENGINE_NO,String)
            End If
            If (Original_ENGINE_ASM_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ENGINE_ASM_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_ENGINE_ASM_NO,String)
            End If
            If (Original_BOOK Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_BOOK")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_BOOK,String)
            End If
            If (Original_YEAR Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_YEAR")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_YEAR,String)
            End If
            If (Original_MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MODEL_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_MODEL_CODE,String)
            End If
            If (Original_LOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LOT_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_LOT_NO,String)
            End If
            If (Original_UNIT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UNIT_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_UNIT_NO,String)
            End If
            If (Original_AT_MT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_AT_MT")
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_AT_MT,String)
            End If
            If (Original_EMISSION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMISSION")
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_EMISSION,String)
            End If
            If (Original_INJ_MODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INJ_MODEL_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_INJ_MODEL_CODE,String)
            End If
            If (Original_SPARE_001 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_SPARE_001,String)
            End If
            If (Original_SB_DATA_SB_PARTS_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SB_DATA_SB_PARTS_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_SB_DATA_SB_PARTS_NO,String)
            End If
            If (Original_SB_DATA_SB_SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SB_DATA_SB_SERIAL_NO")
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_SB_DATA_SB_SERIAL_NO,String)
            End If
            If (Original_SB_DATA_GASKET_GRADE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SB_DATA_GASKET_GRADE")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_SB_DATA_GASKET_GRADE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_LINE_ON_TIME,Date)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_LINE_OFF_TIME,Date)
            If (Original_RPCOCF_SBLO_BCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_BCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_RPCOCF_SBLO_BCT,String)
            End If
            If (Original_RPCOCF_SBLO_CRT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_CRT")
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_RPCOCF_SBLO_CRT,String)
            End If
            If (Original_RPCOCF_SBLO_CTM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_CTM")
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_RPCOCF_SBLO_CTM,String)
            End If
            If (Original_RPCOCF_SBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_SPARE01")
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_RPCOCF_SBLO_SPARE01,String)
            End If
            If (Original_RPCOCF_SBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_SPARE02")
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_RPCOCF_SBLO_SPARE02,String)
            End If
            If (Original_RPCOCF_SBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_SBLO_SPARE03")
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_RPCOCF_SBLO_SPARE03,String)
            End If
            If (Original_RPCOCF_MALO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_CCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_RPCOCF_MALO_CCT,String)
            End If
            If (Original_RPCOCF_MALO_DPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_DPT")
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_RPCOCF_MALO_DPT,String)
            End If
            If (Original_RPCOCF_MALO_FWT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_FWT")
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_RPCOCF_MALO_FWT,String)
            End If
            If (Original_RPCOCF_MALO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_SPARE01")
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_RPCOCF_MALO_SPARE01,String)
            End If
            If (Original_RPCOCF_MALO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_SPARE02")
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_RPCOCF_MALO_SPARE02,String)
            End If
            If (Original_RPCOCF_MALO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MALO_SPARE03")
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_RPCOCF_MALO_SPARE03,String)
            End If
            If (Original_RPCOCF_MBLO_HDT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_HDT")
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_RPCOCF_MBLO_HDT,String)
            End If
            If (Original_RPCOCF_MBLO_CCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_CCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_RPCOCF_MBLO_CCT,String)
            End If
            If (Original_RPCOCF_MBLO_HCT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_HCT")
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_RPCOCF_MBLO_HCT,String)
            End If
            If (Original_RPCOCF_MBLO_PPT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_PPT")
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RPCOCF_MBLO_PPT,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE01")
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_RPCOCF_MBLO_SPARE01,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE02")
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_RPCOCF_MBLO_SPARE02,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE03")
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_RPCOCF_MBLO_SPARE03,String)
            End If
            If (Original_RPCOCF_MBLO_SPARE04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPCOCF_MBLO_SPARE04")
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_RPCOCF_MBLO_SPARE04,String)
            End If
            If (Original_INSPSJ_INSPECTION01 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION01")
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_INSPSJ_INSPECTION01,String)
            End If
            If (Original_INSPSJ_INSPECTION02 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION02")
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_INSPSJ_INSPECTION02,String)
            End If
            If (Original_INSPSJ_INSPECTION03 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION03")
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_INSPSJ_INSPECTION03,String)
            End If
            If (Original_INSPSJ_INSPECTION04 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION04")
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_INSPSJ_INSPECTION04,String)
            End If
            If (Original_INSPSJ_INSPECTION05 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION05")
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_INSPSJ_INSPECTION05,String)
            End If
            If (Original_INSPSJ_INSPECTION06 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION06")
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_INSPSJ_INSPECTION06,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_INSPSJ_INSPECTION_TIME01,Date)
            If (Original_INSPSJ_INSPECTION11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION11")
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_INSPSJ_INSPECTION11,String)
            End If
            If (Original_INSPSJ_INSPECTION12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION12")
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_INSPSJ_INSPECTION12,String)
            End If
            If (Original_INSPSJ_INSPECTION13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION13")
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_INSPSJ_INSPECTION13,String)
            End If
            If (Original_INSPSJ_INSPECTION14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION14")
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_INSPSJ_INSPECTION14,String)
            End If
            If (Original_INSPSJ_INSPECTION15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION15")
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_INSPSJ_INSPECTION15,String)
            End If
            If (Original_INSPSJ_INSPECTION16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_INSPSJ_INSPECTION16")
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_INSPSJ_INSPECTION16,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_INSPSJ_INSPECTION_TIME02,Date)
            If (Original_UPDATED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_UPDATED_BY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_CREATED_WHEN,Date)
            If (Original_UPDATED_WHEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_UPDATED_WHEN.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(112).Value = CType(ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ENGINE_TYPE As String,  _
                    ByVal ENGINE_NO As String,  _
                    ByVal ENGINE_ASM_NO As String,  _
                    ByVal BOOK As String,  _
                    ByVal YEAR As String,  _
                    ByVal MODEL_CODE As String,  _
                    ByVal LOT_NO As String,  _
                    ByVal UNIT_NO As String,  _
                    ByVal AT_MT As String,  _
                    ByVal EMISSION As String,  _
                    ByVal INJ_MODEL_CODE As String,  _
                    ByVal SPARE_001 As String,  _
                    ByVal SB_DATA_SB_PARTS_NO As String,  _
                    ByVal SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal SB_DATA_GASKET_GRADE As String,  _
                    ByVal LINE_ON_TIME As Date,  _
                    ByVal LINE_OFF_TIME As Date,  _
                    ByVal RPCOCF_SBLO_BCT As String,  _
                    ByVal RPCOCF_SBLO_CRT As String,  _
                    ByVal RPCOCF_SBLO_CTM As String,  _
                    ByVal RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MALO_CCT As String,  _
                    ByVal RPCOCF_MALO_DPT As String,  _
                    ByVal RPCOCF_MALO_FWT As String,  _
                    ByVal RPCOCF_MALO_SPARE01 As String,  _
                    ByVal RPCOCF_MALO_SPARE02 As String,  _
                    ByVal RPCOCF_MALO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_HDT As String,  _
                    ByVal RPCOCF_MBLO_CCT As String,  _
                    ByVal RPCOCF_MBLO_HCT As String,  _
                    ByVal RPCOCF_MBLO_PPT As String,  _
                    ByVal RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal INSPSJ_INSPECTION01 As String,  _
                    ByVal INSPSJ_INSPECTION02 As String,  _
                    ByVal INSPSJ_INSPECTION03 As String,  _
                    ByVal INSPSJ_INSPECTION04 As String,  _
                    ByVal INSPSJ_INSPECTION05 As String,  _
                    ByVal INSPSJ_INSPECTION06 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal INSPSJ_INSPECTION11 As String,  _
                    ByVal INSPSJ_INSPECTION12 As String,  _
                    ByVal INSPSJ_INSPECTION13 As String,  _
                    ByVal INSPSJ_INSPECTION14 As String,  _
                    ByVal INSPSJ_INSPECTION15 As String,  _
                    ByVal INSPSJ_INSPECTION16 As String,  _
                    ByVal INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal UPDATED_BY As String,  _
                    ByVal CREATED_WHEN As Date,  _
                    ByVal UPDATED_WHEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ENGINE_TYPE As String,  _
                    ByVal Original_ENGINE_NO As String,  _
                    ByVal Original_ENGINE_ASM_NO As String,  _
                    ByVal Original_BOOK As String,  _
                    ByVal Original_YEAR As String,  _
                    ByVal Original_MODEL_CODE As String,  _
                    ByVal Original_LOT_NO As String,  _
                    ByVal Original_UNIT_NO As String,  _
                    ByVal Original_AT_MT As String,  _
                    ByVal Original_EMISSION As String,  _
                    ByVal Original_INJ_MODEL_CODE As String,  _
                    ByVal Original_SPARE_001 As String,  _
                    ByVal Original_SB_DATA_SB_PARTS_NO As String,  _
                    ByVal Original_SB_DATA_SB_SERIAL_NO As String,  _
                    ByVal Original_SB_DATA_GASKET_GRADE As String,  _
                    ByVal Original_LINE_ON_TIME As Date,  _
                    ByVal Original_LINE_OFF_TIME As Date,  _
                    ByVal Original_RPCOCF_SBLO_BCT As String,  _
                    ByVal Original_RPCOCF_SBLO_CRT As String,  _
                    ByVal Original_RPCOCF_SBLO_CTM As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_SBLO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MALO_CCT As String,  _
                    ByVal Original_RPCOCF_MALO_DPT As String,  _
                    ByVal Original_RPCOCF_MALO_FWT As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_MALO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MBLO_HDT As String,  _
                    ByVal Original_RPCOCF_MBLO_CCT As String,  _
                    ByVal Original_RPCOCF_MBLO_HCT As String,  _
                    ByVal Original_RPCOCF_MBLO_PPT As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE01 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE02 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE03 As String,  _
                    ByVal Original_RPCOCF_MBLO_SPARE04 As String,  _
                    ByVal Original_INSPSJ_INSPECTION01 As String,  _
                    ByVal Original_INSPSJ_INSPECTION02 As String,  _
                    ByVal Original_INSPSJ_INSPECTION03 As String,  _
                    ByVal Original_INSPSJ_INSPECTION04 As String,  _
                    ByVal Original_INSPSJ_INSPECTION05 As String,  _
                    ByVal Original_INSPSJ_INSPECTION06 As String,  _
                    ByVal Original_INSPSJ_INSPECTION_TIME01 As Date,  _
                    ByVal Original_INSPSJ_INSPECTION11 As String,  _
                    ByVal Original_INSPSJ_INSPECTION12 As String,  _
                    ByVal Original_INSPSJ_INSPECTION13 As String,  _
                    ByVal Original_INSPSJ_INSPECTION14 As String,  _
                    ByVal Original_INSPSJ_INSPECTION15 As String,  _
                    ByVal Original_INSPSJ_INSPECTION16 As String,  _
                    ByVal Original_INSPSJ_INSPECTION_TIME02 As Date,  _
                    ByVal Original_UPDATED_BY As String,  _
                    ByVal Original_CREATED_WHEN As Date,  _
                    ByVal Original_UPDATED_WHEN As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(ENGINE_TYPE, ENGINE_NO, ENGINE_ASM_NO, BOOK, YEAR, MODEL_CODE, LOT_NO, UNIT_NO, AT_MT, EMISSION, INJ_MODEL_CODE, SPARE_001, SB_DATA_SB_PARTS_NO, SB_DATA_SB_SERIAL_NO, SB_DATA_GASKET_GRADE, LINE_ON_TIME, LINE_OFF_TIME, RPCOCF_SBLO_BCT, RPCOCF_SBLO_CRT, RPCOCF_SBLO_CTM, RPCOCF_SBLO_SPARE01, RPCOCF_SBLO_SPARE02, RPCOCF_SBLO_SPARE03, RPCOCF_MALO_CCT, RPCOCF_MALO_DPT, RPCOCF_MALO_FWT, RPCOCF_MALO_SPARE01, RPCOCF_MALO_SPARE02, RPCOCF_MALO_SPARE03, RPCOCF_MBLO_HDT, RPCOCF_MBLO_CCT, RPCOCF_MBLO_HCT, RPCOCF_MBLO_PPT, RPCOCF_MBLO_SPARE01, RPCOCF_MBLO_SPARE02, RPCOCF_MBLO_SPARE03, RPCOCF_MBLO_SPARE04, INSPSJ_INSPECTION01, INSPSJ_INSPECTION02, INSPSJ_INSPECTION03, INSPSJ_INSPECTION04, INSPSJ_INSPECTION05, INSPSJ_INSPECTION06, INSPSJ_INSPECTION_TIME01, INSPSJ_INSPECTION11, INSPSJ_INSPECTION12, INSPSJ_INSPECTION13, INSPSJ_INSPECTION14, INSPSJ_INSPECTION15, INSPSJ_INSPECTION16, INSPSJ_INSPECTION_TIME02, UPDATED_BY, CREATED_WHEN, UPDATED_WHEN, Original_ID, Original_ENGINE_TYPE, Original_ENGINE_NO, Original_ENGINE_ASM_NO, Original_BOOK, Original_YEAR, Original_MODEL_CODE, Original_LOT_NO, Original_UNIT_NO, Original_AT_MT, Original_EMISSION, Original_INJ_MODEL_CODE, Original_SPARE_001, Original_SB_DATA_SB_PARTS_NO, Original_SB_DATA_SB_SERIAL_NO, Original_SB_DATA_GASKET_GRADE, Original_LINE_ON_TIME, Original_LINE_OFF_TIME, Original_RPCOCF_SBLO_BCT, Original_RPCOCF_SBLO_CRT, Original_RPCOCF_SBLO_CTM, Original_RPCOCF_SBLO_SPARE01, Original_RPCOCF_SBLO_SPARE02, Original_RPCOCF_SBLO_SPARE03, Original_RPCOCF_MALO_CCT, Original_RPCOCF_MALO_DPT, Original_RPCOCF_MALO_FWT, Original_RPCOCF_MALO_SPARE01, Original_RPCOCF_MALO_SPARE02, Original_RPCOCF_MALO_SPARE03, Original_RPCOCF_MBLO_HDT, Original_RPCOCF_MBLO_CCT, Original_RPCOCF_MBLO_HCT, Original_RPCOCF_MBLO_PPT, Original_RPCOCF_MBLO_SPARE01, Original_RPCOCF_MBLO_SPARE02, Original_RPCOCF_MBLO_SPARE03, Original_RPCOCF_MBLO_SPARE04, Original_INSPSJ_INSPECTION01, Original_INSPSJ_INSPECTION02, Original_INSPSJ_INSPECTION03, Original_INSPSJ_INSPECTION04, Original_INSPSJ_INSPECTION05, Original_INSPSJ_INSPECTION06, Original_INSPSJ_INSPECTION_TIME01, Original_INSPSJ_INSPECTION11, Original_INSPSJ_INSPECTION12, Original_INSPSJ_INSPECTION13, Original_INSPSJ_INSPECTION14, Original_INSPSJ_INSPECTION15, Original_INSPSJ_INSPECTION16, Original_INSPSJ_INSPECTION_TIME02, Original_UPDATED_BY, Original_CREATED_WHEN, Original_UPDATED_WHEN, Original_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WORKING_TYPETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WORKING_TYPE"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_NAME", "WORKING_TYPE_NAME")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        WORKING_TYPE.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_TYPE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.WORKING_TYPEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.WORKING_TYPEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.WORKING_TYPEDataTable = New DataSet1.WORKING_TYPEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WORKING_DATA_STRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WORKING_DATA_STR"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("WORKING_COLUMNS_ID", "WORKING_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [WORKING_DATA_STR] WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([W"& _ 
                "ORKING_COLUMNS_ID] = @Original_WORKING_COLUMNS_ID) AND ([REV_NO] = @Original_REV"& _ 
                "_NO) AND ([DATA] = @Original_DATA) AND ([REVISE_DATE] = @Original_REVISE_DATE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [WORKING_DATA_STR] ([ENGINE_ID], [WORKING_COLUMNS_ID], [REV_NO], [DAT"& _ 
                "A], [REVISE_DATE]) VALUES (@ENGINE_ID, @WORKING_COLUMNS_ID, @REV_NO, @DATA, @REV"& _ 
                "ISE_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, WORKING_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM"& _ 
                " WORKING_DATA_STR WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) AND (WOR"& _ 
                "KING_COLUMNS_ID = @WORKING_COLUMNS_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [WORKING_DATA_STR] SET [ENGINE_ID] = @ENGINE_ID, [WORKING_COLUMNS_ID] = @W"& _ 
                "ORKING_COLUMNS_ID, [REV_NO] = @REV_NO, [DATA] = @DATA, [REVISE_DATE] = @REVISE_D"& _ 
                "ATE WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([WORKING_COLUMNS_ID] = @Orig"& _ 
                "inal_WORKING_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) AND ([DATA] = @Origin"& _ 
                "al_DATA) AND ([REVISE_DATE] = @Original_REVISE_DATE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, WORKIN"& _ 
                "G_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM WORKING_DATA_STR WHERE (ENGINE_ID ="& _ 
                " @ENGINE_ID) AND (REV_NO = @REV_NO) AND (WORKING_COLUMNS_ID = @WORKING_COLUMNS_I"& _ 
                "D)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        WORKING_DATA_STR.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_DATA_STR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT wds.DATA, wds.ENGINE_ID, wds.REVISE_DATE, wds.REV_NO, wds.WORKING_COLUMNS_"& _ 
                "ID FROM WORKING_COLUMNS AS wc INNER JOIN WORKING_TYPE AS wt ON wc.WORKING_TYPE_I"& _ 
                "D = wt.ID INNER JOIN WORKING_DATA_STR AS wds ON wc.ID = wds.WORKING_COLUMNS_ID L"& _ 
                "EFT OUTER JOIN ENGINE_LIST AS es ON wds.ENGINE_ID = es.ID WHERE (es.ENGINE_NO LI"& _ 
                "KE @pENGINE_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT wds.DATA, wds.ENGINE_ID, wds.REVISE_DATE, wds.REV_NO, wds.WORKING_COLUMNS_"& _ 
                "ID FROM WORKING_COLUMNS AS wc INNER JOIN WORKING_TYPE AS wt ON wc.WORKING_TYPE_I"& _ 
                "D = wt.ID INNER JOIN WORKING_DATA_STR AS wds ON wc.ID = wds.WORKING_COLUMNS_ID L"& _ 
                "EFT OUTER JOIN ENGINE_LIST AS es ON wds.ENGINE_ID = es.ID WHERE (wt.ID = @pWORKI"& _ 
                "NG_TYPE_ID) AND (es.ENGINE_NO LIKE @pENGINE_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        wds.DATA, wds.ENGINE_ID, wds.REVISE_DATE, wds.REV_NO, wds.WORKING_C"& _ 
                "OLUMNS_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_COLUMNS AS wc INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      WORKING_TYPE AS wt ON wc.WORKING_TYPE_ID = wt.ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            WORKING_DATA_STR AS wds ON wc.ID = wds.WORKING_COLUMNS_ID LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ENGINE_LIST AS es ON wds.ENGINE_ID = es.ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (wt.ID = @pWORKING_TYPE_ID) AND (es.MODEL_CODE LIKE @pMODEL_CODE) AND ("& _ 
                "es.LOT_NO LIKE @pLOT_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT ws.DATA, ws.ENGINE_ID, ws.REVISE_DATE, ws.REV_NO, ws.WORKING_COLUMNS_ID FR"& _ 
                "OM WORKING_DATA_STR AS ws INNER JOIN WORKING_COLUMNS AS wc ON ws.WORKING_COLUMNS"& _ 
                "_ID = wc.ID WHERE (wc.WORKING_TYPE_ID = @workingTypeId)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        wds.DATA, wds.ENGINE_ID, wds.REVISE_DATE, wds.REV_NO, wds.WORKING_C"& _ 
                "OLUMNS_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_COLUMNS AS wc INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      WORKING_TYPE AS wt ON wc.WORKING_TYPE_ID = wt.ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            WORKING_DATA_STR AS wds ON wc.ID = wds.WORKING_COLUMNS_ID LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ENGINE_LIST AS es ON wds.ENGINE_ID = es.ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (wt.ID = @pWORKING_TYPE_ID) AND (es.ENGINE_NO LIKE @pENGINE_NO) AND (wd"& _ 
                "s.REV_NO = @pRevNo)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pRevNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.WORKING_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.WORKING_DATA_STRDataTable = New DataSet1.WORKING_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByENGINE_NO(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByENGINE_NO(ByVal pENGINE_NO As String) As DataSet1.WORKING_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_STRDataTable = New DataSet1.WORKING_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWORKING_ENGINE_NO(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWORKING_ENGINE_NO(ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String) As DataSet1.WORKING_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_STRDataTable = New DataSet1.WORKING_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWORKING_MODELCODE_LOTNO(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE,String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWORKING_MODELCODE_LOTNO(ByVal pWORKING_TYPE_ID As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.WORKING_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE,String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_STRDataTable = New DataSet1.WORKING_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWorkingTypeId(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable, ByVal workingTypeId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWorkingTypeId(ByVal workingTypeId As Integer) As DataSet1.WORKING_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            Dim dataTable As DataSet1.WORKING_DATA_STRDataTable = New DataSet1.WORKING_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWorkingTypeId_EngineNo_REV(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String, ByVal pRevNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWorkingTypeId_EngineNo_REV(ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String, ByVal pRevNo As Integer) As DataSet1.WORKING_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo,Integer)
            Dim dataTable As DataSet1.WORKING_DATA_STRDataTable = New DataSet1.WORKING_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.WORKING_DATA_STRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "WORKING_DATA_STR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As String, ByVal Original_REVISE_DATE As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ENGINE_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_WORKING_COLUMNS_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REV_NO,Integer)
            If (Original_DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DATA")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DATA,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As String, ByVal REVISE_DATE As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(WORKING_COLUMNS_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(REV_NO,Integer)
            If (DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DATA")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As String, ByVal REVISE_DATE As Date, ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As String, ByVal Original_REVISE_DATE As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(WORKING_COLUMNS_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REV_NO,Integer)
            If (DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DATA")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REVISE_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ENGINE_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_WORKING_COLUMNS_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_REV_NO,Integer)
            If (Original_DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DATA")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DATA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DATA As String, ByVal REVISE_DATE As Date, ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As String, ByVal Original_REVISE_DATE As Date) As Integer
            Return Me.Update(Original_ENGINE_ID, Original_WORKING_COLUMNS_ID, Original_REV_NO, DATA, REVISE_DATE, Original_ENGINE_ID, Original_WORKING_COLUMNS_ID, Original_REV_NO, Original_DATA, Original_REVISE_DATE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class V_SETTING_COLUMNSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "V_SETTING_COLUMNS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("DATA_TYPE", "DATA_TYPE")
            tableMapping.ColumnMappings.Add("COLUMN_REGEX", "COLUMN_REGEX")
            tableMapping.ColumnMappings.Add("CAN_EDIT", "CAN_EDIT")
            tableMapping.ColumnMappings.Add("CAN_ADD", "CAN_ADD")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, SEQ, COLUMN_NAME, DATA_TYPE, COLUMN_REGEX, CAN_EDIT, CAN_ADD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"F"& _ 
                "ROM            WORKING_COLUMNS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (WORKING_TYPE_ID = @workingTypeId)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TRACE_COLUMNS.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TRACE_COLUMNS"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillWorkingColumns(ByVal dataTable As DataSet1.V_SETTING_COLUMNSDataTable, ByVal workingTypeId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetWorkingColumns(ByVal workingTypeId As Integer) As DataSet1.V_SETTING_COLUMNSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            Dim dataTable As DataSet1.V_SETTING_COLUMNSDataTable = New DataSet1.V_SETTING_COLUMNSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillTraceColumns(ByVal dataTable As DataSet1.V_SETTING_COLUMNSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetTraceColumns() As DataSet1.V_SETTING_COLUMNSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DataSet1.V_SETTING_COLUMNSDataTable = New DataSet1.V_SETTING_COLUMNSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WORKING_DATA_INTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WORKING_DATA_INT"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("WORKING_COLUMNS_ID", "WORKING_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [WORKING_DATA_INT] WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([W"& _ 
                "ORKING_COLUMNS_ID] = @Original_WORKING_COLUMNS_ID) AND ([REV_NO] = @Original_REV"& _ 
                "_NO) AND ([DATA] = @Original_DATA) AND ([REVISE_DATE] = @Original_REVISE_DATE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [WORKING_DATA_INT] ([ENGINE_ID], [WORKING_COLUMNS_ID], [REV_NO], [DAT"& _ 
                "A], [REVISE_DATE]) VALUES (@ENGINE_ID, @WORKING_COLUMNS_ID, @REV_NO, @DATA, @REV"& _ 
                "ISE_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, WORKING_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM"& _ 
                " WORKING_DATA_INT WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) AND (WOR"& _ 
                "KING_COLUMNS_ID = @WORKING_COLUMNS_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [WORKING_DATA_INT] SET [ENGINE_ID] = @ENGINE_ID, [WORKING_COLUMNS_ID] = @W"& _ 
                "ORKING_COLUMNS_ID, [REV_NO] = @REV_NO, [DATA] = @DATA, [REVISE_DATE] = @REVISE_D"& _ 
                "ATE WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([WORKING_COLUMNS_ID] = @Orig"& _ 
                "inal_WORKING_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) AND ([DATA] = @Origin"& _ 
                "al_DATA) AND ([REVISE_DATE] = @Original_REVISE_DATE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, WORKIN"& _ 
                "G_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM WORKING_DATA_INT WHERE (ENGINE_ID ="& _ 
                " @ENGINE_ID) AND (REV_NO = @REV_NO) AND (WORKING_COLUMNS_ID = @WORKING_COLUMNS_I"& _ 
                "D)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        WORKING_DATA_INT.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_DATA_INT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT WDI.DATA, WDI.ENGINE_ID, WDI.REVISE_DATE, WDI.REV_NO, WDI.WORKING_COLUMNS_"& _ 
                "ID FROM WORKING_COLUMNS AS WC INNER JOIN WORKING_TYPE AS WT ON WC.WORKING_TYPE_I"& _ 
                "D = WT.ID INNER JOIN WORKING_DATA_INT AS WDI ON WC.ID = WDI.WORKING_COLUMNS_ID L"& _ 
                "EFT OUTER JOIN ENGINE_LIST AS ES ON WDI.ENGINE_ID = ES.ID WHERE (ES.ENGINE_NO LI"& _ 
                "KE @pENGINE_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT WDI.DATA, WDI.ENGINE_ID, WDI.REVISE_DATE, WDI.REV_NO, WDI.WORKING_COLUMNS_"& _ 
                "ID FROM WORKING_COLUMNS AS WC INNER JOIN WORKING_TYPE AS WT ON WC.WORKING_TYPE_I"& _ 
                "D = WT.ID INNER JOIN WORKING_DATA_INT AS WDI ON WC.ID = WDI.WORKING_COLUMNS_ID L"& _ 
                "EFT OUTER JOIN ENGINE_LIST AS ES ON WDI.ENGINE_ID = ES.ID WHERE (WT.ID = @pWORKI"& _ 
                "NG_TYPE_ID) AND (ES.ENGINE_NO LIKE @pENGINE_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        WDI.DATA, WDI.ENGINE_ID, WDI.REVISE_DATE, WDI.REV_NO, WDI.WORKING_C"& _ 
                "OLUMNS_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_COLUMNS AS WC INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      WORKING_TYPE AS WT ON WC.WORKING_TYPE_ID = WT.ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            WORKING_DATA_INT AS WDI ON WC.ID = WDI.WORKING_COLUMNS_ID LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ENGINE_LIST AS ES ON WDI.ENGINE_ID = ES.ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (WT.ID = @pWORKING_TYPE_ID) AND (ES.MODEL_CODE LIKE @pMODEL_CODE) AND ("& _ 
                "ES.LOT_NO LIKE @pLOT_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT wd.DATA, wd.ENGINE_ID, wd.REVISE_DATE, wd.REV_NO, wd.WORKING_COLUMNS_ID FR"& _ 
                "OM WORKING_DATA_INT AS wd INNER JOIN WORKING_COLUMNS AS wc ON wd.WORKING_COLUMNS"& _ 
                "_ID = wc.ID WHERE (wc.WORKING_TYPE_ID = @workingTypeId)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        WDI.DATA, WDI.ENGINE_ID, WDI.REVISE_DATE, WDI.REV_NO, WDI.WORKING_C"& _ 
                "OLUMNS_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_COLUMNS AS WC INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      WORKING_TYPE AS WT ON WC.WORKING_TYPE_ID = WT.ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            WORKING_DATA_INT AS WDI ON WC.ID = WDI.WORKING_COLUMNS_ID LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ENGINE_LIST AS ES ON WDI.ENGINE_ID = ES.ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (WT.ID = @pWORKING_TYPE_ID) AND (ES.ENGINE_NO LIKE @pENGINE_NO) AND (WD"& _ 
                "I.REV_NO = @pRevNo)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pRevNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.WORKING_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.WORKING_DATA_INTDataTable = New DataSet1.WORKING_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByENGINE_NO(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByENGINE_NO(ByVal pENGINE_NO As String) As DataSet1.WORKING_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_INTDataTable = New DataSet1.WORKING_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWORKING_ENGINE_NO(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWORKING_ENGINE_NO(ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String) As DataSet1.WORKING_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_INTDataTable = New DataSet1.WORKING_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWORKING_MODELCODE_LOTNO(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE,String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWORKING_MODELCODE_LOTNO(ByVal pWORKING_TYPE_ID As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.WORKING_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE,String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_INTDataTable = New DataSet1.WORKING_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWorkingTypeId(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable, ByVal workingTypeId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWorkingTypeId(ByVal workingTypeId As Integer) As DataSet1.WORKING_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            Dim dataTable As DataSet1.WORKING_DATA_INTDataTable = New DataSet1.WORKING_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWorkingTypeId_EngineNo_REV(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String, ByVal pRevNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWorkingTypeId_EngineNo_REV(ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String, ByVal pRevNo As Integer) As DataSet1.WORKING_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo,Integer)
            Dim dataTable As DataSet1.WORKING_DATA_INTDataTable = New DataSet1.WORKING_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.WORKING_DATA_INTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "WORKING_DATA_INT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Integer, ByVal Original_REVISE_DATE As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ENGINE_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_WORKING_COLUMNS_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REV_NO,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DATA,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Integer, ByVal REVISE_DATE As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(WORKING_COLUMNS_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(REV_NO,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATA,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Integer, ByVal REVISE_DATE As Date, ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Integer, ByVal Original_REVISE_DATE As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(WORKING_COLUMNS_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REV_NO,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATA,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REVISE_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ENGINE_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_WORKING_COLUMNS_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_REV_NO,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DATA,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DATA As Integer, ByVal REVISE_DATE As Date, ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Integer, ByVal Original_REVISE_DATE As Date) As Integer
            Return Me.Update(Original_ENGINE_ID, Original_WORKING_COLUMNS_ID, Original_REV_NO, DATA, REVISE_DATE, Original_ENGINE_ID, Original_WORKING_COLUMNS_ID, Original_REV_NO, Original_DATA, Original_REVISE_DATE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class WORKING_DATA_DATETIMETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "WORKING_DATA_DATETIME"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("WORKING_COLUMNS_ID", "WORKING_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [WORKING_DATA_DATETIME] WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AN"& _ 
                "D ([WORKING_COLUMNS_ID] = @Original_WORKING_COLUMNS_ID) AND ([REV_NO] = @Origina"& _ 
                "l_REV_NO) AND ([DATA] = @Original_DATA) AND ([REVISE_DATE] = @Original_REVISE_DA"& _ 
                "TE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [WORKING_DATA_DATETIME] ([ENGINE_ID], [WORKING_COLUMNS_ID], [REV_NO],"& _ 
                " [DATA], [REVISE_DATE]) VALUES (@ENGINE_ID, @WORKING_COLUMNS_ID, @REV_NO, @DATA,"& _ 
                " @REVISE_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, WORKING_COLUMNS_ID, REV_NO, DATA, REVISE_DATE"& _ 
                " FROM WORKING_DATA_DATETIME WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO"& _ 
                ") AND (WORKING_COLUMNS_ID = @WORKING_COLUMNS_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [WORKING_DATA_DATETIME] SET [ENGINE_ID] = @ENGINE_ID, [WORKING_COLUMNS_ID]"& _ 
                " = @WORKING_COLUMNS_ID, [REV_NO] = @REV_NO, [DATA] = @DATA, [REVISE_DATE] = @REV"& _ 
                "ISE_DATE WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([WORKING_COLUMNS_ID] = "& _ 
                "@Original_WORKING_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) AND ([DATA] = @O"& _ 
                "riginal_DATA) AND ([REVISE_DATE] = @Original_REVISE_DATE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, W"& _ 
                "ORKING_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM WORKING_DATA_DATETIME WHERE (E"& _ 
                "NGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) AND (WORKING_COLUMNS_ID = @WORKING"& _ 
                "_COLUMNS_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WORKING_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        WORKING_DATA_DATETIME.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_DATA_DATETIME"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT WDD.DATA, WDD.ENGINE_ID, WDD.REVISE_DATE, WDD.REV_NO, WDD.WORKING_COLUMNS_"& _ 
                "ID FROM WORKING_COLUMNS AS WC INNER JOIN WORKING_TYPE AS WT ON WC.WORKING_TYPE_I"& _ 
                "D = WT.ID INNER JOIN WORKING_DATA_DATETIME AS WDD ON WC.ID = WDD.WORKING_COLUMNS"& _ 
                "_ID LEFT OUTER JOIN ENGINE_LIST AS ES ON WDD.ENGINE_ID = ES.ID WHERE (ES.ENGINE_"& _ 
                "NO LIKE @pENGINE_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT WDD.DATA, WDD.ENGINE_ID, WDD.REVISE_DATE, WDD.REV_NO, WDD.WORKING_COLUMNS_"& _ 
                "ID FROM WORKING_COLUMNS AS WC INNER JOIN WORKING_TYPE AS WT ON WC.WORKING_TYPE_I"& _ 
                "D = WT.ID INNER JOIN WORKING_DATA_DATETIME AS WDD ON WC.ID = WDD.WORKING_COLUMNS"& _ 
                "_ID LEFT OUTER JOIN ENGINE_LIST AS ES ON WDD.ENGINE_ID = ES.ID WHERE (WT.ID = @p"& _ 
                "WORKING_TYPE_ID) AND (ES.ENGINE_NO LIKE @pENGINE_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        WDD.DATA, WDD.ENGINE_ID, WDD.REVISE_DATE, WDD.REV_NO, WDD.WORKING_C"& _ 
                "OLUMNS_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_COLUMNS AS WC INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      WORKING_TYPE AS WT ON WC.WORKING_TYPE_ID = WT.ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            WORKING_DATA_DATETIME AS WDD ON WC.ID = WDD.WORKING_COLUMNS_ID LEFT "& _ 
                "OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ENGINE_LIST AS ES ON WDD.ENGINE_ID = ES.ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (WT.ID = @pWORKING_TYPE_ID) AND (ES.MODEL_CODE LIKE @pMODEL_CODE) "& _ 
                "AND (ES.LOT_NO LIKE @pLOT_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT wd.DATA, wd.ENGINE_ID, wd.REVISE_DATE, wd.REV_NO, wd.WORKING_COLUMNS_ID FR"& _ 
                "OM WORKING_DATA_DATETIME AS wd INNER JOIN WORKING_COLUMNS AS wc ON wd.WORKING_CO"& _ 
                "LUMNS_ID = wc.ID WHERE (wc.WORKING_TYPE_ID = @workingTypeId)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        WDD.DATA, WDD.ENGINE_ID, WDD.REVISE_DATE, WDD.REV_NO, WDD.WORKING_C"& _ 
                "OLUMNS_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            WORKING_COLUMNS AS WC INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      WORKING_TYPE AS WT ON WC.WORKING_TYPE_ID = WT.ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            WORKING_DATA_DATETIME AS WDD ON WC.ID = WDD.WORKING_COLUMNS_ID LEFT "& _ 
                "OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ENGINE_LIST AS ES ON WDD.ENGINE_ID = ES.ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (WT.ID = @pWORKING_TYPE_ID) AND (ES.ENGINE_NO LIKE @pENGINE_NO) AN"& _ 
                "D (WDD.REV_NO = @pRevNo)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pWORKING_TYPE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pRevNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.WORKING_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable = New DataSet1.WORKING_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByENGINE_NO(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByENGINE_NO(ByVal pENGINE_NO As String) As DataSet1.WORKING_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable = New DataSet1.WORKING_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWORKING_ENGINE_NO(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWORKING_ENGINE_NO(ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String) As DataSet1.WORKING_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable = New DataSet1.WORKING_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWORKING_MODELCODE_LOTNO(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE,String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWORKING_MODELCODE_LOTNO(ByVal pWORKING_TYPE_ID As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.WORKING_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE,String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO,String)
            End If
            Dim dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable = New DataSet1.WORKING_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWorkingTypeId(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable, ByVal workingTypeId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWorkingTypeId(ByVal workingTypeId As Integer) As DataSet1.WORKING_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId,Integer)
            Dim dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable = New DataSet1.WORKING_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWorkingTypeId_EngineNo_REV(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable, ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String, ByVal pRevNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWorkingTypeId_EngineNo_REV(ByVal pWORKING_TYPE_ID As Integer, ByVal pENGINE_NO As String, ByVal pRevNo As Integer) As DataSet1.WORKING_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pWORKING_TYPE_ID,Integer)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pENGINE_NO,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo,Integer)
            Dim dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable = New DataSet1.WORKING_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.WORKING_DATA_DATETIMEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "WORKING_DATA_DATETIME")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Date, ByVal Original_REVISE_DATE As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ENGINE_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_WORKING_COLUMNS_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REV_NO,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DATA,Date)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Date, ByVal REVISE_DATE As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(WORKING_COLUMNS_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(REV_NO,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATA,Date)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ENGINE_ID As Integer, ByVal WORKING_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Date, ByVal REVISE_DATE As Date, ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Date, ByVal Original_REVISE_DATE As Date) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(WORKING_COLUMNS_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REV_NO,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATA,Date)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REVISE_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ENGINE_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_WORKING_COLUMNS_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_REV_NO,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DATA,Date)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_REVISE_DATE,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DATA As Date, ByVal REVISE_DATE As Date, ByVal Original_ENGINE_ID As Integer, ByVal Original_WORKING_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Date, ByVal Original_REVISE_DATE As Date) As Integer
            Return Me.Update(Original_ENGINE_ID, Original_WORKING_COLUMNS_ID, Original_REV_NO, DATA, REVISE_DATE, Original_ENGINE_ID, Original_WORKING_COLUMNS_ID, Original_REV_NO, Original_DATA, Original_REVISE_DATE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TRACE_COLUMNSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRACE_COLUMNS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("DATA_TYPE", "DATA_TYPE")
            tableMapping.ColumnMappings.Add("COLUMN_REGEX", "COLUMN_REGEX")
            tableMapping.ColumnMappings.Add("CAN_EDIT", "CAN_EDIT")
            tableMapping.ColumnMappings.Add("CAN_ADD", "CAN_ADD")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TRACE_COLUMNS.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TRACE_COLUMNS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.TRACE_COLUMNSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.TRACE_COLUMNSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.TRACE_COLUMNSDataTable = New DataSet1.TRACE_COLUMNSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TRACE_DATA_STRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRACE_DATA_STR"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TRACE_DATA_STR] WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([TRA"& _ 
                "CE_COLUMNS_ID] = @Original_TRACE_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) A"& _ 
                "ND ([DATA] = @Original_DATA) AND ((@IsNull_REVISE_DATE = 1 AND [REVISE_DATE] IS "& _ 
                "NULL) OR ([REVISE_DATE] = @Original_REVISE_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TRACE_DATA_STR] ([ENGINE_ID], [TRACE_COLUMNS_ID], [REV_NO], [DATA], "& _ 
                "[REVISE_DATE]) VALUES (@ENGINE_ID, @TRACE_COLUMNS_ID, @REV_NO, @DATA, @REVISE_DA"& _ 
                "TE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, TRACE_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM TRACE_D"& _ 
                "ATA_STR WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) AND (TRACE_COLUMNS"& _ 
                "_ID = @TRACE_COLUMNS_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TRACE_DATA_STR] SET [ENGINE_ID] = @ENGINE_ID, [TRACE_COLUMNS_ID] = @TRACE"& _ 
                "_COLUMNS_ID, [REV_NO] = @REV_NO, [DATA] = @DATA, [REVISE_DATE] = @REVISE_DATE WH"& _ 
                "ERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([TRACE_COLUMNS_ID] = @Original_TRA"& _ 
                "CE_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) AND ([DATA] = @Original_DATA) A"& _ 
                "ND ((@IsNull_REVISE_DATE = 1 AND [REVISE_DATE] IS NULL) OR ([REVISE_DATE] = @Ori"& _ 
                "ginal_REVISE_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ENGINE_ID, TRACE_COLUMNS_ID, REV_NO, DATA, REVISE_"& _ 
                "DATE FROM TRACE_DATA_STR WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) A"& _ 
                "ND (TRACE_COLUMNS_ID = @TRACE_COLUMNS_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TRACE_DATA_STR.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            TRACE_DATA_STR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT tds.DATA, tds.ENGINE_ID, tds.REVISE_DATE, tds.REV_NO, tds.TRACE_COLUMNS_ID" & _
                " FROM TRACE_COLUMNS AS tc INNER JOIN TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE_" & _
                "COLUMNS_ID LEFT OUTER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es.ID WHERE (tc." & _
                "COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No|') AND (es.LINE_ON_TIME >" & _
                "= @pFrom) AND (es.LINE_ON_TIME >= @pTo)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT tds.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_STR AS tds ON tc" & _
                ".ID = tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID" & _
                " = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "AND (tds.ENGINE_ID = @pENGINE_ID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT tds.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_STR AS tds ON tc" & _
                ".ID = tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es." & _
                "ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " AND (e" & _
                "s.ENGINE_NO = @pENGINE_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT tds.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_STR AS tds ON tc" & _
                ".ID = tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es." & _
                "ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " AND (E" & _
                "S.MODEL_CODE LIKE @pMODEL_CODE) AND (ES.LOT_NO LIKE @pLOT_NO)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT tds.DATA, tds.ENGINE_ID, tds.REVISE_DATE, tds.REV_NO, tds.TRACE_COLUMNS_ID" & _
                " FROM TRACE_COLUMNS AS tc INNER JOIN TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE_" & _
                "COLUMNS_ID LEFT OUTER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es.ID WHERE (tc." & _
                "COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No|') AND (tds.DATA = @pSERI" & _
                "AL_NO) AND (tc.ID = @pTRACE_COLUMNS_ID)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSERIAL_NO", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pTRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT tds.DATA, tds.ENGINE_ID, tds.REVISE_DATE, tds.REV_NO, tds.TRACE_COLUMNS_ID" & _
                " FROM TRACE_COLUMNS AS tc INNER JOIN TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE_" & _
                "COLUMNS_ID LEFT OUTER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es.ID WHERE (tc." & _
                "COLUMN_NAME LIKE 'SHORT BLOCK DATA%') AND (es.ENGINE_NO LIKE @pENGINE_NO)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByASM_DATE(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable, ByVal pFrom As Date, ByVal pTo As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pFrom, Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTo, Date)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByASM_DATE(ByVal pFrom As Date, ByVal pTo As Date) As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pFrom, Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTo, Date)
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByENGINE_ID_FOR_PART_AND_SERIAL_NO(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByENGINE_ID_FOR_PART_AND_SERIAL_NO(ByVal pENGINE_ID As Integer) As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByENGINE_NO_TRACEABILITY(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByENGINE_NO_TRACEABILITY(ByVal pENGINE_NO As String) As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByModelCode_LotNo_TRACEABILITY(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByModelCode_LotNo_TRACEABILITY(ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBySerialNoAndTraceId(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable, ByVal pSERIAL_NO As String, ByVal pTRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (pSERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBySerialNoAndTraceId(ByVal pSERIAL_NO As String, ByVal pTRACE_COLUMNS_ID As Integer) As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (pSERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pSERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBySHORT_BLOCK_DATA(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBySHORT_BLOCK_DATA(ByVal pENGINE_NO As String) As DataSet1.TRACE_DATA_STRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_STRDataTable = New DataSet1.TRACE_DATA_STRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.TRACE_DATA_STRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TRACE_DATA_STR")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As String, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ENGINE_ID, Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TRACE_COLUMNS_ID, Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REV_NO, Integer)
            If (Original_DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DATA")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DATA, String)
            End If
            If (Original_REVISE_DATE.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_REVISE_DATE.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As String, ByVal REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_ID, Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(REV_NO, Integer)
            If (DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DATA")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATA, String)
            End If
            If (REVISE_DATE.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(REVISE_DATE.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As String, ByVal REVISE_DATE As Global.System.Nullable(Of Date), ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As String, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REV_NO, Integer)
            If (DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DATA")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATA, String)
            End If
            If (REVISE_DATE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REVISE_DATE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ENGINE_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TRACE_COLUMNS_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_REV_NO, Integer)
            If (Original_DATA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DATA")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DATA, String)
            End If
            If (Original_REVISE_DATE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_REVISE_DATE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal DATA As String, ByVal REVISE_DATE As Global.System.Nullable(Of Date), ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As String, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ENGINE_ID, Original_TRACE_COLUMNS_ID, Original_REV_NO, DATA, REVISE_DATE, Original_ENGINE_ID, Original_TRACE_COLUMNS_ID, Original_REV_NO, Original_DATA, Original_REVISE_DATE)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class TRACE_DATA_INTTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRACE_DATA_INT"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TRACE_DATA_INT] WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([TRA" & _
                "CE_COLUMNS_ID] = @Original_TRACE_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) A" & _
                "ND ([DATA] = @Original_DATA) AND ((@IsNull_REVISE_DATE = 1 AND [REVISE_DATE] IS " & _
                "NULL) OR ([REVISE_DATE] = @Original_REVISE_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TRACE_DATA_INT] ([ENGINE_ID], [TRACE_COLUMNS_ID], [REV_NO], [DATA], " & _
                "[REVISE_DATE]) VALUES (@ENGINE_ID, @TRACE_COLUMNS_ID, @REV_NO, @DATA, @REVISE_DA" & _
                "TE);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT ENGINE_ID, TRACE_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM TRACE_D" & _
                "ATA_INT WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) AND (TRACE_COLUMNS" & _
                "_ID = @TRACE_COLUMNS_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TRACE_DATA_INT] SET [ENGINE_ID] = @ENGINE_ID, [TRACE_COLUMNS_ID] = @TRACE" & _
                "_COLUMNS_ID, [REV_NO] = @REV_NO, [DATA] = @DATA, [REVISE_DATE] = @REVISE_DATE WH" & _
                "ERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([TRACE_COLUMNS_ID] = @Original_TRA" & _
                "CE_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) AND ([DATA] = @Original_DATA) A" & _
                "ND ((@IsNull_REVISE_DATE = 1 AND [REVISE_DATE] IS NULL) OR ([REVISE_DATE] = @Ori" & _
                "ginal_REVISE_DATE)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT ENGINE_ID, TRACE_COLUMNS_ID, REV_NO, DATA, REVISE_" & _
                "DATE FROM TRACE_DATA_INT WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) A" & _
                "ND (TRACE_COLUMNS_ID = @TRACE_COLUMNS_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TRACE_DATA_INT.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            TRACE_DATA_INT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT tdi.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_INT AS tdi ON tc" & _
                ".ID = tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tdi.ENGINE_ID" & _
                " = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "AND (tdi.ENGINE_ID = @pENGINE_ID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT tdi.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_INT AS tdi ON tc" & _
                ".ID = tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tdi.ENGINE_ID" & _
                " = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "AND (es.ENGINE_NO = @pENGINE_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT tdi.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_INT AS tdi ON tc" & _
                ".ID = tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tdi.ENGINE_ID" & _
                " = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "AND (ES.MODEL_CODE LIKE @pMODEL_CODE) AND (ES.LOT_NO LIKE @pLOT_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT tds.DATA, tds.ENGINE_ID, tds.REVISE_DATE, tds.REV_NO, tds.TRACE_COLUMNS_ID" & _
                " FROM TRACE_COLUMNS AS tc INNER JOIN TRACE_DATA_INT AS tds ON tc.ID = tds.TRACE_" & _
                "COLUMNS_ID LEFT OUTER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es.ID WHERE (tc." & _
                "COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No|') AND (tds.DATA = @pSERI" & _
                "AL_NO) AND (tc.ID = @pTRACE_COLUMNS_ID)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSERIAL_NO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pTRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.TRACE_DATA_INTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.TRACE_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.TRACE_DATA_INTDataTable = New DataSet1.TRACE_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByENGINE_ID_FOR_PART_AND_SERIAL_NO(ByVal dataTable As DataSet1.TRACE_DATA_INTDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByENGINE_ID_FOR_PART_AND_SERIAL_NO(ByVal pENGINE_ID As Integer) As DataSet1.TRACE_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_INTDataTable = New DataSet1.TRACE_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByENGINE_NO_TRACEABILITY(ByVal dataTable As DataSet1.TRACE_DATA_INTDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByENGINE_NO_TRACEABILITY(ByVal pENGINE_NO As String) As DataSet1.TRACE_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_INTDataTable = New DataSet1.TRACE_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByModelCode_LotNo_TRACEABILITY(ByVal dataTable As DataSet1.TRACE_DATA_INTDataTable, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByModelCode_LotNo_TRACEABILITY(ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.TRACE_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_INTDataTable = New DataSet1.TRACE_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBySerialNoAndTraceId(ByVal dataTable As DataSet1.TRACE_DATA_INTDataTable, ByVal pSERIAL_NO As Integer, ByVal pTRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSERIAL_NO, Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBySerialNoAndTraceId(ByVal pSERIAL_NO As Integer, ByVal pTRACE_COLUMNS_ID As Integer) As DataSet1.TRACE_DATA_INTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSERIAL_NO, Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_INTDataTable = New DataSet1.TRACE_DATA_INTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.TRACE_DATA_INTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TRACE_DATA_INT")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Integer, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ENGINE_ID, Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TRACE_COLUMNS_ID, Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REV_NO, Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DATA, Integer)
            If (Original_REVISE_DATE.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_REVISE_DATE.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Integer, ByVal REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_ID, Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(REV_NO, Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATA, Integer)
            If (REVISE_DATE.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(REVISE_DATE.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Integer, ByVal REVISE_DATE As Global.System.Nullable(Of Date), ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Integer, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REV_NO, Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATA, Integer)
            If (REVISE_DATE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REVISE_DATE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ENGINE_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TRACE_COLUMNS_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_REV_NO, Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DATA, Integer)
            If (Original_REVISE_DATE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_REVISE_DATE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal DATA As Integer, ByVal REVISE_DATE As Global.System.Nullable(Of Date), ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Integer, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ENGINE_ID, Original_TRACE_COLUMNS_ID, Original_REV_NO, DATA, REVISE_DATE, Original_ENGINE_ID, Original_TRACE_COLUMNS_ID, Original_REV_NO, Original_DATA, Original_REVISE_DATE)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class TRACE_DATA_DATETIMETableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRACE_DATA_DATETIME"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TRACE_DATA_DATETIME] WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND " & _
                "([TRACE_COLUMNS_ID] = @Original_TRACE_COLUMNS_ID) AND ([REV_NO] = @Original_REV_" & _
                "NO) AND ([DATA] = @Original_DATA) AND ((@IsNull_REVISE_DATE = 1 AND [REVISE_DATE" & _
                "] IS NULL) OR ([REVISE_DATE] = @Original_REVISE_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TRACE_DATA_DATETIME] ([ENGINE_ID], [TRACE_COLUMNS_ID], [REV_NO], [DA" & _
                "TA], [REVISE_DATE]) VALUES (@ENGINE_ID, @TRACE_COLUMNS_ID, @REV_NO, @DATA, @REVI" & _
                "SE_DATE);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT ENGINE_ID, TRACE_COLUMNS_ID, REV_NO, DATA, REVISE_DATE FROM TR" & _
                "ACE_DATA_DATETIME WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = @REV_NO) AND (TRA" & _
                "CE_COLUMNS_ID = @TRACE_COLUMNS_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TRACE_DATA_DATETIME] SET [ENGINE_ID] = @ENGINE_ID, [TRACE_COLUMNS_ID] = @" & _
                "TRACE_COLUMNS_ID, [REV_NO] = @REV_NO, [DATA] = @DATA, [REVISE_DATE] = @REVISE_DA" & _
                "TE WHERE (([ENGINE_ID] = @Original_ENGINE_ID) AND ([TRACE_COLUMNS_ID] = @Origina" & _
                "l_TRACE_COLUMNS_ID) AND ([REV_NO] = @Original_REV_NO) AND ([DATA] = @Original_DA" & _
                "TA) AND ((@IsNull_REVISE_DATE = 1 AND [REVISE_DATE] IS NULL) OR ([REVISE_DATE] =" & _
                " @Original_REVISE_DATE)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT ENGINE_ID, TRACE_COLUMNS_ID, REV_NO, DATA, RE" & _
                "VISE_DATE FROM TRACE_DATA_DATETIME WHERE (ENGINE_ID = @ENGINE_ID) AND (REV_NO = " & _
                "@REV_NO) AND (TRACE_COLUMNS_ID = @TRACE_COLUMNS_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENGINE_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REV_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REVISE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVISE_DATE", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TRACE_DATA_DATETIME.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            TRACE_DATA_DATETIME"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT tdd.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_DATETIME AS tdd " & _
                "ON tc.ID = tdd.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tdd.ENGI" & _
                "NE_ID = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No" & _
                "')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " AND (tdd.ENGINE_ID = @pENGINE_ID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT tdd.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_DATETIME AS tdd " & _
                "ON tc.ID = tdd.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tdd.ENGI" & _
                "NE_ID = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No" & _
                "')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " AND (es.ENGINE_NO = @pENGINE_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT tdd.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_DATETIME AS tdd " & _
                "ON tc.ID = tdd.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN ENGINE_LIST AS es ON tdd.ENGI" & _
                "NE_ID = es.ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No" & _
                "')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " AND (ES.MODEL_CODE LIKE @pMODEL_CODE) AND (ES.LOT_NO LIKE @pLOT_NO)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT tds.DATA, tds.ENGINE_ID, tds.REVISE_DATE, tds.REV_NO, tds.TRACE_COLUMNS_ID" & _
                " FROM TRACE_COLUMNS AS tc INNER JOIN TRACE_DATA_DATETIME AS tds ON tc.ID = tds.T" & _
                "RACE_COLUMNS_ID LEFT OUTER JOIN ENGINE_LIST AS es ON tds.ENGINE_ID = es.ID WHERE" & _
                " (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No|') AND (tds.DATA = @" & _
                "pSERIAL_NO) AND (tc.ID = @pTRACE_COLUMNS_ID)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pSERIAL_NO", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pTRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.TRACE_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable = New DataSet1.TRACE_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByENGINE_ID_FOR_PART_AND_SERIAL_NO(ByVal dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByENGINE_ID_FOR_PART_AND_SERIAL_NO(ByVal pENGINE_ID As Integer) As DataSet1.TRACE_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable = New DataSet1.TRACE_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByENGINE_NO_TRACEABILITY(ByVal dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByENGINE_NO_TRACEABILITY(ByVal pENGINE_NO As String) As DataSet1.TRACE_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable = New DataSet1.TRACE_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByModelCode_LotNo_TRACEABILITY(ByVal dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByModelCode_LotNo_TRACEABILITY(ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.TRACE_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable = New DataSet1.TRACE_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBySerialNoAndTraceId(ByVal dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable, ByVal pSERIAL_NO As Date, ByVal pTRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSERIAL_NO, Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBySerialNoAndTraceId(ByVal pSERIAL_NO As Date, ByVal pTRACE_COLUMNS_ID As Integer) As DataSet1.TRACE_DATA_DATETIMEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pSERIAL_NO, Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(pTRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable = New DataSet1.TRACE_DATA_DATETIMEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.TRACE_DATA_DATETIMEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TRACE_DATA_DATETIME")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete(ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Date, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ENGINE_ID, Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TRACE_COLUMNS_ID, Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_REV_NO, Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DATA, Date)
            If (Original_REVISE_DATE.HasValue = True) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_REVISE_DATE.Value, Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Date, ByVal REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ENGINE_ID, Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(REV_NO, Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATA, Date)
            If (REVISE_DATE.HasValue = True) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(REVISE_DATE.Value, Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal ENGINE_ID As Integer, ByVal TRACE_COLUMNS_ID As Integer, ByVal REV_NO As Integer, ByVal DATA As Date, ByVal REVISE_DATE As Global.System.Nullable(Of Date), ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Date, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ENGINE_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REV_NO, Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATA, Date)
            If (REVISE_DATE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REVISE_DATE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_ENGINE_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TRACE_COLUMNS_ID, Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_REV_NO, Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DATA, Date)
            If (Original_REVISE_DATE.HasValue = True) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_REVISE_DATE.Value, Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update(ByVal DATA As Date, ByVal REVISE_DATE As Global.System.Nullable(Of Date), ByVal Original_ENGINE_ID As Integer, ByVal Original_TRACE_COLUMNS_ID As Integer, ByVal Original_REV_NO As Integer, ByVal Original_DATA As Date, ByVal Original_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_ENGINE_ID, Original_TRACE_COLUMNS_ID, Original_REV_NO, DATA, REVISE_DATE, Original_ENGINE_ID, Original_TRACE_COLUMNS_ID, Original_REV_NO, Original_DATA, Original_REVISE_DATE)
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class V_WORKING_DATA_STATICTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "V_WORKING_DATA_STATIC"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_ID", "WORKING_TYPE_ID")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_NAME", "WORKING_TYPE_NAME")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_SEQ", "WORKING_TYPE_SEQ")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.W" & _
                "ORKING_TYPE_ID, v.WORKING_TYPE_NAME, v.SEQ AS WORKING_TYPE_SEQ, v.MAX_REV" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM " & _
                "           ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELE" & _
                "CT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, " & _
                "ws.ENGINE_ID, ws.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_" & _
                "TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                  WORKING_DATA_STR AS ws ON wcol" & _
                ".ID = ws.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                        " & _
                "                 ENGINE_LIST AS el ON el.ID = ws.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT DISTINCT wt.ID AS WO" & _
                "RKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, wi.ENGINE_ID, wi.REV_NO" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                        WORKING_COLUMNS AS wcol " & _
                "ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         WORKING_DATA_INT AS wi ON wcol.ID = wi.WORKING_COLUMNS_" & _
                "ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_LI" & _
                "ST AS el ON el.ID = wi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                           SELECT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt." & _
                "WORKING_TYPE_NAME, wt.MAX_REV, wd.ENGINE_ID, wd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "       FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                              WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = " & _
                "wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        W" & _
                "ORKING_DATA_DATETIME AS wd ON wcol.ID = wd.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                  ENGINE_LIST AS el ON el.ID = w" & _
                "d.ENGINE_ID) AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (v.ENGINE_ID = @engId) AN" & _
                "D (v.WORKING_TYPE_ID = @workingTypeId)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v." & _
                "REV_NO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@engId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.W" & _
                "ORKING_TYPE_ID, v.WORKING_TYPE_NAME, v.SEQ AS WORKING_TYPE_SEQ, v.MAX_REV" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM " & _
                "           ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELE" & _
                "CT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, " & _
                "ws.ENGINE_ID, ws.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_" & _
                "TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                  WORKING_DATA_STR AS ws ON wcol" & _
                ".ID = ws.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                        " & _
                "                 ENGINE_LIST AS el ON el.ID = ws.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT DISTINCT wt.ID AS WO" & _
                "RKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, wi.ENGINE_ID, wi.REV_NO" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                        WORKING_COLUMNS AS wcol " & _
                "ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         WORKING_DATA_INT AS wi ON wcol.ID = wi.WORKING_COLUMNS_" & _
                "ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_LI" & _
                "ST AS el ON el.ID = wi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                           SELECT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt." & _
                "WORKING_TYPE_NAME, wt.MAX_REV, wd.ENGINE_ID, wd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "       FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                              WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = " & _
                "wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        W" & _
                "ORKING_DATA_DATETIME AS wd ON wcol.ID = wd.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                  ENGINE_LIST AS el ON el.ID = w" & _
                "d.ENGINE_ID) AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE       (v.WORKING_TYPE_ID = @work" & _
                "ingTypeId) AND (el.ENGINE_NO = @engNo)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v." & _
                "REV_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@engNo", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.W" & _
                "ORKING_TYPE_ID, v.WORKING_TYPE_NAME, v.SEQ AS WORKING_TYPE_SEQ, v.MAX_REV" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM " & _
                "           ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELE" & _
                "CT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, " & _
                "ws.ENGINE_ID, ws.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_" & _
                "TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                  WORKING_DATA_STR AS ws ON wcol" & _
                ".ID = ws.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                        " & _
                "                 ENGINE_LIST AS el ON el.ID = ws.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT DISTINCT wt.ID AS WO" & _
                "RKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, wi.ENGINE_ID, wi.REV_NO" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                        WORKING_COLUMNS AS wcol " & _
                "ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         WORKING_DATA_INT AS wi ON wcol.ID = wi.WORKING_COLUMNS_" & _
                "ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_LI" & _
                "ST AS el ON el.ID = wi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                           SELECT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt." & _
                "WORKING_TYPE_NAME, wt.MAX_REV, wd.ENGINE_ID, wd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "       FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                              WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = " & _
                "wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        W" & _
                "ORKING_DATA_DATETIME AS wd ON wcol.ID = wd.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                  ENGINE_LIST AS el ON el.ID = w" & _
                "d.ENGINE_ID) AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE       (v.WORKING_TYPE_ID = @work" & _
                "ingTypeId) AND (EL.MODEL_CODE LIKE @pMODEL_CODE) AND (EL.LOT_NO LIKE @pLOT_NO)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v.REV_NO"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, el.AT_MT, el.EMISSION, el.INJ_MODEL_CODE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "             el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, el.LINE_ON_TIME, el.LINE_OFF_TIME, el.RPCOCF_SBLO_BCT, el.R" & _
                "PCOCF_SBLO_CRT, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03, el.RPCOCF_MALO_CCT, el.RP" & _
                "COCF_MALO_DPT, el.RPCOCF_MALO_FWT, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPA" & _
                "RE01, el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03, el.RPCOCF_MBLO_HDT, el.RPC" & _
                "OCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                " el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.RPCOCF_MBLO_SPARE03, el.RPCO" & _
                "CF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, el.INSPSJ_INSPECTION02, el.INSPSJ_INSPE" & _
                "CTION03, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INSPSJ_INSPECTION04, el.INSPSJ_INSPECTION" & _
                "05, el.INSPSJ_INSPECTION06, el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11," & _
                " el.INSPSJ_INSPECTION12, el.INSPSJ_INSPECTION13, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.I" & _
                "NSPSJ_INSPECTION14, el.INSPSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_IN" & _
                "SPECTION_TIME02, el.UPDATED_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, v.WO" & _
                "RKING_TYPE_ID, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.WORKING_TYPE_NAME, v.SEQ AS WORKING_" & _
                "TYPE_SEQ, v.MAX_REV" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                     (SELECT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt.WORKI" & _
                "NG_TYPE_NAME, wt.MAX_REV, ws.ENGINE_ID, ws.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "  FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                          WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = wt.I" & _
                "D LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         WORK" & _
                "ING_DATA_STR AS ws ON wcol.ID = ws.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                           ENGINE_LIST AS el ON el.ID = ws.ENGIN" & _
                "E_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               S" & _
                "ELECT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_RE" & _
                "V, wi.ENGINE_ID, wi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKI" & _
                "NG_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                      " & _
                "  WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                   WORKING_DATA_INT AS wi ON wco" & _
                "l.ID = wi.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       " & _
                "                 ENGINE_LIST AS el ON el.ID = wi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT DISTINCT wt.ID AS WO" & _
                "RKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, wd.ENGINE_ID, wd.REV_NO" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                        WORKING_COLUMNS AS wcol " & _
                "ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         WORKING_DATA_DATETIME AS wd ON wcol.ID = wd.WORKING_COL" & _
                "UMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGI" & _
                "NE_LIST AS el ON el.ID = wd.ENGINE_ID) AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE       " & _
                " (v.WORKING_TYPE_ID = @workingTypeId) AND (el.ENGINE_NO = @engNo) AND (v.REV_NO " & _
                "= @pRevNo)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v.REV_NO"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@engNo", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pRevNo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "REV_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.W" & _
                "ORKING_TYPE_ID, v.WORKING_TYPE_NAME, v.SEQ AS WORKING_TYPE_SEQ, v.MAX_REV" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM " & _
                "           ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELE" & _
                "CT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, " & _
                "ws.ENGINE_ID, ws.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_" & _
                "TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                  WORKING_DATA_STR AS ws ON wcol" & _
                ".ID = ws.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                        " & _
                "                 ENGINE_LIST AS el ON el.ID = ws.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT DISTINCT wt.ID AS WO" & _
                "RKING_TYPE_ID, wt.SEQ, wt.WORKING_TYPE_NAME, wt.MAX_REV, wi.ENGINE_ID, wi.REV_NO" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                        WORKING_COLUMNS AS wcol " & _
                "ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         WORKING_DATA_INT AS wi ON wcol.ID = wi.WORKING_COLUMNS_" & _
                "ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_LI" & _
                "ST AS el ON el.ID = wi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                           SELECT DISTINCT wt.ID AS WORKING_TYPE_ID, wt.SEQ, wt." & _
                "WORKING_TYPE_NAME, wt.MAX_REV, wd.ENGINE_ID, wd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "       FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                              WORKING_COLUMNS AS wcol ON wcol.WORKING_TYPE_ID = " & _
                "wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        W" & _
                "ORKING_DATA_DATETIME AS wd ON wcol.ID = wd.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                  ENGINE_LIST AS el ON el.ID = w" & _
                "d.ENGINE_ID) AS v ON el.ID = v.ENGINE_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "  (SELECT        WORKING_TYPE_ID, ENGINE_ID, MAX(REV_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "                   FROM            (SELECT DISTINCT wt.ID AS WORKING_TYPE_ID, ws" & _
                ".ENGINE_ID, ws.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                 " & _
                "                                                  WORKING_COLUMNS AS wcol ON wco" & _
                "l.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     " & _
                "                                              WORKING_DATA_STR AS ws ON wcol.ID " & _
                "= ws.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "                                       ENGINE_LIST AS el ON el.ID = ws.ENGINE_ID" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                               SELECT DISTINCT wt.ID AS WORKING_" & _
                "TYPE_ID, wi.ENGINE_ID, wi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "           FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                                                            WORKING_COLUMNS AS w" & _
                "col ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "                                                       WORKING_DATA_INT AS wi ON" & _
                " wcol.ID = wi.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                   " & _
                "                                               ENGINE_LIST AS el ON el.ID = wi.E" & _
                "NGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                       SELECT DISTINCT wt.ID AS " & _
                "WORKING_TYPE_ID, wd.ENGINE_ID, wd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "                   FROM            WORKING_TYPE AS wt INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                    WORKING_COLU" & _
                "MNS AS wcol ON wcol.WORKING_TYPE_ID = wt.ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "                                                               WORKING_DATA_DATE" & _
                "TIME AS wd ON wcol.ID = wd.WORKING_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                                                            ENGINE_LIST AS el ON" & _
                " el.ID = wd.ENGINE_ID) AS tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               GROUP BY WORKING_T" & _
                "YPE_ID, ENGINE_ID) AS vmax ON v.ENGINE_ID = vmax.ENGINE_ID AND v.REV_NO = vmax.R" & _
                "EV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (v.ENGINE_ID = @engId) AND (v.WORKING_TYPE_ID = @workingType" & _
                "Id)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v.REV_NO"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@engId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@workingTypeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "WORKING_TYPE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillAllRevEngIdAndWorkingTypeId(ByVal dataTable As DataSet1.V_WORKING_DATA_STATICDataTable, ByVal engId As Integer, ByVal workingTypeId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(engId, Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(workingTypeId, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetAllRevByEngIdAndWorkingTypeId(ByVal engId As Integer, ByVal workingTypeId As Integer) As DataSet1.V_WORKING_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(engId, Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(workingTypeId, Integer)
            Dim dataTable As DataSet1.V_WORKING_DATA_STATICDataTable = New DataSet1.V_WORKING_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByWorkingID_EngineNo(ByVal dataTable As DataSet1.V_WORKING_DATA_STATICDataTable, ByVal workingTypeId As Integer, ByVal engNo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId, Integer)
            If (engNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(engNo, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByWorkingID_EngineNo(ByVal workingTypeId As Integer, ByVal engNo As String) As DataSet1.V_WORKING_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId, Integer)
            If (engNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(engNo, String)
            End If
            Dim dataTable As DataSet1.V_WORKING_DATA_STATICDataTable = New DataSet1.V_WORKING_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByWorkingID_ModelCode_LotNo(ByVal dataTable As DataSet1.V_WORKING_DATA_STATICDataTable, ByVal workingTypeId As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId, Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByWorkingID_ModelCode_LotNo(ByVal workingTypeId As Integer, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.V_WORKING_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId, Integer)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(pLOT_NO, String)
            End If
            Dim dataTable As DataSet1.V_WORKING_DATA_STATICDataTable = New DataSet1.V_WORKING_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByWorkingTypeId_EngineNo_REV(ByVal dataTable As DataSet1.V_WORKING_DATA_STATICDataTable, ByVal workingTypeId As Integer, ByVal engNo As String, ByVal pRevNo As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId, Integer)
            If (engNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(engNo, String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByWorkingTypeId_EngineNo_REV(ByVal workingTypeId As Integer, ByVal engNo As String, ByVal pRevNo As Integer) As DataSet1.V_WORKING_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(workingTypeId, Integer)
            If (engNo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engNo")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(engNo, String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(pRevNo, Integer)
            Dim dataTable As DataSet1.V_WORKING_DATA_STATICDataTable = New DataSet1.V_WORKING_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillMaxRevByEngIdAndWorkingTypeId(ByVal dataTable As DataSet1.V_WORKING_DATA_STATICDataTable, ByVal engId As Integer, ByVal workingTypeId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(engId, Integer)
            If (workingTypeId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(workingTypeId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetMaxRevByEngIdAndWorkingTypeId(ByVal engId As Integer, ByVal workingTypeId As Global.System.Nullable(Of Integer)) As DataSet1.V_WORKING_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(engId, Integer)
            If (workingTypeId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(workingTypeId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DataSet1.V_WORKING_DATA_STATICDataTable = New DataSet1.V_WORKING_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class FOR_CHECK_LIST_BOXTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FOR_CHECK_LIST_BOX"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_NAME", "WORKING_TYPE_NAME")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, SEQ, WORKING_TYPE_NAME, MAX_REV" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            WORKING_TYPE A" & _
                "S wt" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT        999 AS Expr1, 999 AS Expr2, 'ALL WORKING DATA' AS" & _
                " Expr3, 999 AS Expr4"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.FOR_CHECK_LIST_BOXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.FOR_CHECK_LIST_BOXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.FOR_CHECK_LIST_BOXDataTable = New DataSet1.FOR_CHECK_LIST_BOXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class V_TRACE_DATA_STATICTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "V_TRACE_DATA_STATIC"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("WORKING_TYPE_SEQ", "WORKING_TYPE_SEQ")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.T" & _
                "RACE_COLUMNS_ID, v.COLUMN_NAME, v.SEQ AS WORKING_TYPE_SEQ, v.MAX_REV, V.REVISE_D" & _
                "ATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "     (SELECT tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, td" & _
                "s.ENGINE_ID, tds.REV_NO, MAX(tds.REVISE_DATE) as REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "             FROM            TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "                                      TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE" & _
                "_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        " & _
                " ENGINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "group by tc.ID , tc.SEQ," & _
                " tc.COLUMN_NAME , tds.ENGINE_ID, tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNIO" & _
                "N ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, " & _
                "tc.COLUMN_NAME, 4 AS MAX_REV, tdi.ENGINE_ID, tdi.REV_NO, MAX(tdi.REVISE_DATE) as" & _
                " REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_COLUMNS AS tc" & _
                " INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        TRACE_DATA_" & _
                "INT AS tdi ON tc.ID = tdi.TRACE_COLUMNS_ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                    ENGINE_LIST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "" & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "group by tc.ID , tc.SEQ, tc.COLUMN_NAME , tdi.ENGINE_ID, tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT " & _
                "tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tdd.ENGINE_ID, " & _
                "tdd.REV_NO, MAX(tdd.REVISE_DATE) as REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "FROM         TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                   " & _
                "                     TRACE_DATA_DATETIME AS tdd ON tc.ID = tdd.TRACE_COLUMNS_ID " & _
                "INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_LIST " & _
                "AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "group by tc.ID , tc.SEQ, tc.COLUMN_NA" & _
                "ME , tdd.ENGINE_ID, tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ") AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE     " & _
                "   (el.SB_DATA_SB_SERIAL_NO = @SERIAL_NO) AND (v.TRACE_COLUMNS_ID = @TRACE_COLUM" & _
                "NS_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIAL_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.T" & _
                "RACE_COLUMNS_ID, v.COLUMN_NAME, v.SEQ AS WORKING_TYPE_SEQ, v.MAX_REV, V.REVISE_D" & _
                "ATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "     (SELECT tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, td" & _
                "s.ENGINE_ID, tds.REV_NO, MAX(tds.REVISE_DATE) as REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "             FROM            TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "                                      TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE" & _
                "_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        " & _
                " ENGINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "group by tc.ID , tc.SEQ," & _
                " tc.COLUMN_NAME , tds.ENGINE_ID, tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNIO" & _
                "N ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, " & _
                "tc.COLUMN_NAME, 4 AS MAX_REV, tdi.ENGINE_ID, tdi.REV_NO, MAX(tdi.REVISE_DATE) as" & _
                " REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_COLUMNS AS tc" & _
                " INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        TRACE_DATA_" & _
                "INT AS tdi ON tc.ID = tdi.TRACE_COLUMNS_ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                    ENGINE_LIST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "" & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "group by tc.ID , tc.SEQ, tc.COLUMN_NAME , tdi.ENGINE_ID, tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT " & _
                "tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tdd.ENGINE_ID, " & _
                "tdd.REV_NO, MAX(tdd.REVISE_DATE) as REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "FROM         TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                   " & _
                "                     TRACE_DATA_DATETIME AS tdd ON tc.ID = tdd.TRACE_COLUMNS_ID " & _
                "INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_LIST " & _
                "AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "group by tc.ID , tc.SEQ, tc.COLUMN_NA" & _
                "ME , tdd.ENGINE_ID, tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ") AS v ON el.ID = v.ENGINE_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        TRACE_COLUMNS_ID, ENGINE_ID, MAX(RE" & _
                "V_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            (SELECT DISTINCT" & _
                " tc.ID AS TRACE_COLUMNS_ID, tds.ENGINE_ID, tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "                                FROM            TRACE_COLUMNS tc LEFT OUTER JOIN" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                              " & _
                "     TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                                                          ENGINE" & _
                "_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                          " & _
                "               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                      " & _
                "   SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID, tdi.ENGINE_ID, tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                  FROM            TRACE_COLUMNS " & _
                "tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                            " & _
                "                       TRACE_DATA_INT AS tdi ON tc.ID = tdi.TRACE_COLUMNS_ID INN" & _
                "ER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                       " & _
                "           ENGINE_LIST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "                                UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     " & _
                "                    SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID, tdd.ENGINE_ID, td" & _
                "d.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         FROM         " & _
                "   TRACE_COLUMNS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                           " & _
                "                                        TRACE_DATA_DATETIME AS tdd ON tc.ID = td" & _
                "d.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "                                 ENGINE_LIST AS el ON el.ID = tdd.ENGINE_ID) AS " & _
                "tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               GROUP BY TRACE_COLUMNS_ID, ENGINE_ID) AS vma" & _
                "x ON v.ENGINE_ID = vmax.ENGINE_ID AND v.REV_NO = vmax.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (el.S" & _
                "B_DATA_SB_SERIAL_NO = @SERIAL_NO) AND (v.TRACE_COLUMNS_ID = @TRACE_COLUMNS_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "ORDER BY ENGINE_ID, WORKING_TYPE_SEQ, v.REV_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIAL_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "SB_DATA_SB_SERIAL_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillAllRevSerialNoAndTraceId(ByVal dataTable As DataSet1.V_TRACE_DATA_STATICDataTable, ByVal SERIAL_NO As String, ByVal TRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetDataAllRevSerialNoAndTraceId(ByVal SERIAL_NO As String, ByVal TRACE_COLUMNS_ID As Integer) As DataSet1.V_TRACE_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.V_TRACE_DATA_STATICDataTable = New DataSet1.V_TRACE_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByMaxRevBySerialNoAndTraceId(ByVal dataTable As DataSet1.V_TRACE_DATA_STATICDataTable, ByVal SERIAL_NO As String, ByVal TRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByMaxRevBySerialNoAndTraceId(ByVal SERIAL_NO As String, ByVal TRACE_COLUMNS_ID As Integer) As DataSet1.V_TRACE_DATA_STATICDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.V_TRACE_DATA_STATICDataTable = New DataSet1.V_TRACE_DATA_STATICDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class SERIAL_NO_PART_NO_SHOWTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SERIAL_NO_PART_NO_SHOW"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            tableMapping.ColumnMappings.Add("PART_NAME", "PART_NAME")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("MODEL_LOT", "MODEL_LOT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.T" & _
                "RACE_COLUMNS_ID, v.COLUMN_NAME, v.SEQ, v.MAX_REV, v.REVISE_DATE, v.PART_NAME, v." & _
                "DATA, el.MODEL_CODE+ ' ' +el.LOT_NO AS MODEL_LOT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ENGINE_LIST AS" & _
                " el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        tc.ID AS TRACE_" & _
                "COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tds.ENGINE_ID, tds.REV_NO, MAX" & _
                "(tds.REVISE_DATE) AS REVISE_DATE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "             SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX" & _
                "('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                     1, CHARINDEX('SERIAL No', SUBSTRING(tc.COLU" & _
                "MN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                       LEN(tc.COLUMN_NAME))) - 1" & _
                ") AS PART_NAME, tds.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_C" & _
                "OLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                       " & _
                "  TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "                                             ENGINE_LIST AS el ON el.ID = tds.EN" & _
                "GINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               WHERE        (tc.COLUMN_NAME LIKE 'MACHI" & _
                "NING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               GROUP BY tc.ID" & _
                ", tc.SEQ, tc.COLUMN_NAME, tds.ENGINE_ID, tds.REV_NO, SUBSTRING(SUBSTRING(tc.COLU" & _
                "MN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "                         REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, " & _
                "CHARINDEX('SERIAL No', SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                                - CHARINDEX('|', REVERSE(tc.COLU" & _
                "MN_NAME)) + 2, LEN(tc.COLUMN_NAME))) - 1), tds.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "    UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT        tc.ID AS TRACE_COLUM" & _
                "NS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tdi.ENGINE_ID, tdi.REV_NO, MAX(tdi." & _
                "REVISE_DATE) AS REVISE_DATE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "       SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', " & _
                "REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                 CHARINDEX('SERIAL No', SUBSTRING(tc.COLUMN_NAME" & _
                ", LEN(tc.COLUMN_NAME) - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                               LEN(tc.COLUMN_NAME))) - 1) AS PAR" & _
                "T_NAME, CONVERT(varchar(255), tdi.DATA) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                              " & _
                " FROM            TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         TRACE_DATA_INT AS tdi ON tc.ID = tdi.TRACE_COLUMNS_ID L" & _
                "EFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_L" & _
                "IST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               WHERE        " & _
                "(tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "             GROUP BY tc.ID, tc.SEQ, tc.COLUMN_NAME, tdi.ENGINE_ID, tdi.REV_NO, " & _
                "SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                   REVERSE(tc.COLUMN_NAME)) + 2," & _
                " LEN(tc.COLUMN_NAME)), 1, CHARINDEX('SERIAL No', SUBSTRING(tc.COLUMN_NAME, LEN(t" & _
                "c.COLUMN_NAME) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        - CHARI" & _
                "NDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME))) - 1), tdi.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                             UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT   " & _
                "     tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tdd.ENGINE" & _
                "_ID, tdd.REV_NO, MAX(tdd.REVISE_DATE) AS REVISE_DATE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUM" & _
                "N_NAME) - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, " & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        CHARINDEX('SERIAL No'," & _
                " SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', REVERSE(tc.COLUM" & _
                "N_NAME)) + 2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        LEN(tc.C" & _
                "OLUMN_NAME))) - 1) AS PART_NAME, CONVERT(VARCHAR, tdd.DATA, 112) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                          FROM            TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                  TRACE_DATA_DATETIME AS tdd ON " & _
                "tc.ID = tdd.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       " & _
                "                 ENGINE_LIST AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "            WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL" & _
                " No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               GROUP BY tc.ID, tc.SEQ, tc.COLUMN_NAME, td" & _
                "d.ENGINE_ID, tdd.REV_NO, SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME)" & _
                " - CHARINDEX('|', " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        REVE" & _
                "RSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, CHARINDEX('SERIAL No', SUBSTR" & _
                "ING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "                  - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_N" & _
                "AME))) - 1), tdd.DATA) AS v ON el.ID = v.ENGINE_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "            (SELECT        TRACE_COLUMNS_ID, ENGINE_ID, MAX(REV_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                              FROM            (SELECT DISTINCT tc.ID AS TRACE_CO" & _
                "LUMNS_ID, tds.ENGINE_ID, tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                           " & _
                "              FROM            TRACE_COLUMNS AS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "                                                                      TRACE_DATA" & _
                "_STR AS tds ON tc.ID = tds.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                                           ENGINE_LIST AS el ON " & _
                "el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                    UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "                                        SELECT DISTINCT tc.ID AS TRACE_COLUMNS_I" & _
                "D, tdi.ENGINE_ID, tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "       FROM            TRACE_COLUMNS AS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                                              TRACE_DATA_INT AS " & _
                "tdi ON tc.ID = tdi.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "                                                  ENGINE_LIST AS el ON el.ID = t" & _
                "di.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         WHERE    " & _
                "    (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                               SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID, tdd.EN" & _
                "GINE_ID, tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         FR" & _
                "OM            TRACE_COLUMNS AS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "                                                     TRACE_DATA_DATETIME AS tdd " & _
                "ON tc.ID = tdd.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                                              ENGINE_LIST AS el ON el.ID = tdd.E" & _
                "NGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         WHERE        " & _
                "(tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')) AS tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                     GROUP BY TRACE_COLUMNS_ID, ENGINE_ID) AS vmax ON v.ENGINE_I" & _
                "D = vmax.ENGINE_ID AND v.REV_NO = vmax.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (v.DATA = @SERIAL_NO" & _
                ") AND (v.TRACE_COLUMNS_ID = @TRACE_COLUMNS_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, v.SEQ, v.REV" & _
                "_NO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIAL_NO", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.T" & _
                "RACE_COLUMNS_ID, v.COLUMN_NAME, v.SEQ, v.MAX_REV, v.REVISE_DATE, v.PART_NAME, v." & _
                "DATA, el.MODEL_CODE+ ' ' +el.LOT_NO AS MODEL_LOT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ENGINE_LIST AS" & _
                " el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        tc.ID AS TRACE_" & _
                "COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tds.ENGINE_ID, tds.REV_NO, MAX" & _
                "(tds.REVISE_DATE) AS REVISE_DATE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "             SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX" & _
                "('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                     1, CHARINDEX('SERIAL No', SUBSTRING(tc.COLU" & _
                "MN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                       LEN(tc.COLUMN_NAME))) - 1" & _
                ") AS PART_NAME, tds.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_C" & _
                "OLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                       " & _
                "  TRACE_DATA_STR AS tds ON tc.ID = tds.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "                                             ENGINE_LIST AS el ON el.ID = tds.EN" & _
                "GINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               WHERE        (tc.COLUMN_NAME LIKE 'MACHI" & _
                "NING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               GROUP BY tc.ID" & _
                ", tc.SEQ, tc.COLUMN_NAME, tds.ENGINE_ID, tds.REV_NO, SUBSTRING(SUBSTRING(tc.COLU" & _
                "MN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "                         REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, " & _
                "CHARINDEX('SERIAL No', SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                                - CHARINDEX('|', REVERSE(tc.COLU" & _
                "MN_NAME)) + 2, LEN(tc.COLUMN_NAME))) - 1), tds.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "    UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT        tc.ID AS TRACE_COLUM" & _
                "NS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tdi.ENGINE_ID, tdi.REV_NO, MAX(tdi." & _
                "REVISE_DATE) AS REVISE_DATE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "       SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', " & _
                "REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                 CHARINDEX('SERIAL No', SUBSTRING(tc.COLUMN_NAME" & _
                ", LEN(tc.COLUMN_NAME) - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                               LEN(tc.COLUMN_NAME))) - 1) AS PAR" & _
                "T_NAME, CONVERT(varchar(255), tdi.DATA) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                              " & _
                " FROM            TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         TRACE_DATA_INT AS tdi ON tc.ID = tdi.TRACE_COLUMNS_ID L" & _
                "EFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        ENGINE_L" & _
                "IST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               WHERE        " & _
                "(tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "             GROUP BY tc.ID, tc.SEQ, tc.COLUMN_NAME, tdi.ENGINE_ID, tdi.REV_NO, " & _
                "SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                   REVERSE(tc.COLUMN_NAME)) + 2," & _
                " LEN(tc.COLUMN_NAME)), 1, CHARINDEX('SERIAL No', SUBSTRING(tc.COLUMN_NAME, LEN(t" & _
                "c.COLUMN_NAME) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        - CHARI" & _
                "NDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME))) - 1), tdi.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                             UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               SELECT   " & _
                "     tc.ID AS TRACE_COLUMNS_ID, tc.SEQ, tc.COLUMN_NAME, 4 AS MAX_REV, tdd.ENGINE" & _
                "_ID, tdd.REV_NO, MAX(tdd.REVISE_DATE) AS REVISE_DATE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUM" & _
                "N_NAME) - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, " & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        CHARINDEX('SERIAL No'," & _
                " SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) - CHARINDEX('|', REVERSE(tc.COLUM" & _
                "N_NAME)) + 2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        LEN(tc.C" & _
                "OLUMN_NAME))) - 1) AS PART_NAME, CONVERT(VARCHAR, tdd.DATA, 112) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                          FROM            TRACE_COLUMNS AS tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                  TRACE_DATA_DATETIME AS tdd ON " & _
                "tc.ID = tdd.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       " & _
                "                 ENGINE_LIST AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "            WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL" & _
                " No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               GROUP BY tc.ID, tc.SEQ, tc.COLUMN_NAME, td" & _
                "d.ENGINE_ID, tdd.REV_NO, SUBSTRING(SUBSTRING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME)" & _
                " - CHARINDEX('|', " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        REVE" & _
                "RSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_NAME)), 1, CHARINDEX('SERIAL No', SUBSTR" & _
                "ING(tc.COLUMN_NAME, LEN(tc.COLUMN_NAME) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "                  - CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2, LEN(tc.COLUMN_N" & _
                "AME))) - 1), tdd.DATA) AS v ON el.ID = v.ENGINE_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "            (SELECT        TRACE_COLUMNS_ID, ENGINE_ID, MAX(REV_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                              FROM            (SELECT DISTINCT tc.ID AS TRACE_CO" & _
                "LUMNS_ID, tds.ENGINE_ID, tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                           " & _
                "              FROM            TRACE_COLUMNS AS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "                                                                      TRACE_DATA" & _
                "_STR AS tds ON tc.ID = tds.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                                           ENGINE_LIST AS el ON " & _
                "el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                    UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "                                        SELECT DISTINCT tc.ID AS TRACE_COLUMNS_I" & _
                "D, tdi.ENGINE_ID, tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "       FROM            TRACE_COLUMNS AS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                                              TRACE_DATA_INT AS " & _
                "tdi ON tc.ID = tdi.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "                                                  ENGINE_LIST AS el ON el.ID = t" & _
                "di.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         WHERE    " & _
                "    (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                           UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                               SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID, tdd.EN" & _
                "GINE_ID, tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         FR" & _
                "OM            TRACE_COLUMNS AS tc LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "                                                     TRACE_DATA_DATETIME AS tdd " & _
                "ON tc.ID = tdd.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                                              ENGINE_LIST AS el ON el.ID = tdd.E" & _
                "NGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         WHERE        " & _
                "(tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')) AS tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                     GROUP BY TRACE_COLUMNS_ID, ENGINE_ID) AS vmax ON v.ENGINE_I" & _
                "D = vmax.ENGINE_ID AND v.REV_NO = vmax.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (el.LINE_ON_TIME >= " & _
                "@LINE_ON_TIME_FROM and el.LINE_ON_TIME < dateadd(day,1,@LINE_ON_TIME_TO)) AND (v" & _
                ".TRACE_COLUMNS_ID = @TRACE_COLUMNS_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, v.SEQ, v.REV_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINE_ON_TIME_FROM", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINE_ON_TIME_TO", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LINE_ON_TIME", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACE_COLUMNS_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACE_COLUMNS_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillMaxRevBySerialNoAndTraceId(ByVal dataTable As DataSet1.SERIAL_NO_PART_NO_SHOWDataTable, ByVal SERIAL_NO As String, ByVal TRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetDataMaxRevBySerialNoAndTraceId(ByVal SERIAL_NO As String, ByVal TRACE_COLUMNS_ID As Integer) As DataSet1.SERIAL_NO_PART_NO_SHOWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.SERIAL_NO_PART_NO_SHOWDataTable = New DataSet1.SERIAL_NO_PART_NO_SHOWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByLINE_ON_TIME_AND_TRACE_ID(ByVal dataTable As DataSet1.SERIAL_NO_PART_NO_SHOWDataTable, ByVal LINE_ON_TIME_FROM As Date, ByVal LINE_ON_TIME_TO As Date, ByVal TRACE_COLUMNS_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LINE_ON_TIME_FROM, Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LINE_ON_TIME_TO, Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(TRACE_COLUMNS_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByLINE_ON_TIME_AND_TRACE_ID(ByVal LINE_ON_TIME_FROM As Date, ByVal LINE_ON_TIME_TO As Date, ByVal TRACE_COLUMNS_ID As Integer) As DataSet1.SERIAL_NO_PART_NO_SHOWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LINE_ON_TIME_FROM, Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(LINE_ON_TIME_TO, Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(TRACE_COLUMNS_ID, Integer)
            Dim dataTable As DataSet1.SERIAL_NO_PART_NO_SHOWDataTable = New DataSet1.SERIAL_NO_PART_NO_SHOWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class SERIAL_NO_PART_NO_HISTORYTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SERIAL_NO_PART_NO_HISTORY"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TOP (100) PERCENT el.ID AS ENGINE_ID, " & _
                "el.ENGINE_TYPE, el.ENGINE_NO, el.ENGINE_ASM_NO, el.BOOK, el.YEAR, el.MODEL_CODE," & _
                " el.LOT_NO, el.UNIT_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.AT_MT, el.EMISSION, el.INJ" & _
                "_MODEL_CODE, el.SPARE_001, el.SB_DATA_SB_PARTS_NO, el.SB_DATA_SB_SERIAL_NO, el.S" & _
                "B_DATA_GASKET_GRADE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.LINE_ON_TIME, el.LINE_OFF_TIM" & _
                "E, el.RPCOCF_SBLO_BCT, el.RPCOCF_SBLO_CRT, el.RPCOCF_SBLO_CTM, el.RPCOCF_SBLO_SP" & _
                "ARE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_SBLO_SPARE02, el.RPCOCF_SBLO_SPARE03" & _
                ", el.RPCOCF_MALO_CCT, el.RPCOCF_MALO_DPT, el.RPCOCF_MALO_FWT, el.RPCOCF_MALO_SPA" & _
                "RE01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MALO_SPARE02, el.RPCOCF_MALO_SPARE03," & _
                " el.RPCOCF_MBLO_HDT, el.RPCOCF_MBLO_CCT, el.RPCOCF_MBLO_HCT, el.RPCOCF_MBLO_PPT," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.RPCOCF_MBLO_SPARE01, el.RPCOCF_MBLO_SPARE02, el.R" & _
                "PCOCF_MBLO_SPARE03, el.RPCOCF_MBLO_SPARE04, el.INSPSJ_INSPECTION01, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               el.INSPSJ_INSPECTION02, el.INSPSJ_INSPECTION03, el.INSPSJ_INSPECT" & _
                "ION04, el.INSPSJ_INSPECTION05, el.INSPSJ_INSPECTION06, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "  el.INSPSJ_INSPECTION_TIME01, el.INSPSJ_INSPECTION11, el.INSPSJ_INSPECTION12, e" & _
                "l.INSPSJ_INSPECTION13, el.INSPSJ_INSPECTION14, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         el.INS" & _
                "PSJ_INSPECTION15, el.INSPSJ_INSPECTION16, el.INSPSJ_INSPECTION_TIME02, el.UPDATE" & _
                "D_BY, el.CREATED_WHEN, el.UPDATED_WHEN, v.REV_NO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         v.M" & _
                "AX_REV, v.REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            ENGINE_LIST AS el LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                       (SELECT        4 AS MAX_REV, tds.ENGINE_ID, tds.REV_NO, t" & _
                "ds.REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_COLUMNS AS " & _
                "tc INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         TRACE_DA" & _
                "TA_STR AS tds ON tc.ID = tds.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                                   ENGINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                              WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS" & _
                " SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "                  SELECT        4 AS MAX_REV, tdi.ENGINE_ID, tdi.REV_NO, tdi.REV" & _
                "ISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_COLUMNS AS tc INN" & _
                "ER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        TRACE_DATA_INT " & _
                "AS tdi ON tc.ID = tdi.TRACE_COLUMNS_ID LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                ENGINE_LIST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                           WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS SE" & _
                "RIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "               SELECT        4 AS MAX_REV, tdd.ENGINE_ID, tdd.REV_NO, tdd.REVISE" & _
                "_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            TRACE_COLUMNS AS tc INNER " & _
                "JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        TRACE_DATA_DATETIM" & _
                "E AS tdd ON tc.ID = tdd.TRACE_COLUMNS_ID INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "                             ENGINE_LIST AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                        WHERE        (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIA" & _
                "L No|%SERIAL No')) AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (el.ID = @pENGINE_I" & _
                "D)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY ENGINE_ID, v.REV_NO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillEngineId(ByVal dataTable As DataSet1.SERIAL_NO_PART_NO_HISTORYDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetDataEngineId(ByVal pENGINE_ID As Integer) As DataSet1.SERIAL_NO_PART_NO_HISTORYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.SERIAL_NO_PART_NO_HISTORYDataTable = New DataSet1.SERIAL_NO_PART_NO_HISTORYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class TRACE_DATA_MIXTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRACE_DATA_MIX"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            tableMapping.ColumnMappings.Add("SRC", "SRC")
            tableMapping.ColumnMappings.Add("PART_NAME", "PART_NAME")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CAST('' AS varchar(255)) AS PART_NAME, - 1 AS ENGINE_ID, - 1 AS TRA" & _
                "CE_COLUMNS_ID, - 1 AS REV_NO, CAST('' AS varchar(255)) AS DATA, GETDATE() " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                     AS REVISE_DATE, '   ' AS SRC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT SUBSTRING(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "          CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 LEN(tc." & _
                "COLUMN_NAME)) AS PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.TRACE_COLUMNS_ID," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       'DT' AS SRC," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.D" & _
                "ATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_DATETIME AS tds ON tc.ID" & _
                " = tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN ENGINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   AND (td" & _
                "s.ENGINE_ID = @pENGINE_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   AND tds.REV_NO =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       (SELECT MAX(REV_NO) FROM" & _
                " TRACE_DATA_STR WHERE ENGINE_ID = @pENGINE_ID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT SUBSTRING(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "          CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 LEN(tc." & _
                "COLUMN_NAME)) AS PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.TRACE_COLUMNS_ID," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       'INT' AS SRC," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds." & _
                "DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_INT AS tds ON tc.ID = t" & _
                "ds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN ENGINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WH" & _
                "ERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   AND (tds.EN" & _
                "GINE_ID = @pENGINE_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   AND tds.REV_NO =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       (SELECT MAX(REV_NO) FROM TRA" & _
                "CE_DATA_STR WHERE ENGINE_ID = @pENGINE_ID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT SUBSTRING(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "          CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 LEN(tc." & _
                "COLUMN_NAME)) AS PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.TRACE_COLUMNS_ID," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds.REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       'STR' AS SRC," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       tds." & _
                "DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN TRACE_DATA_STR AS tds ON tc.ID = t" & _
                "ds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN ENGINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WH" & _
                "ERE (tc.COLUMN_NAME LIKE 'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   AND (tds.EN" & _
                "GINE_ID = @pENGINE_ID)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   AND tds.REV_NO =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       (SELECT MAX(REV_NO) FROM TRA" & _
                "CE_DATA_STR WHERE ENGINE_ID = @pENGINE_ID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_ID", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.TRACE_DATA_MIXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.TRACE_DATA_MIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.TRACE_DATA_MIXDataTable = New DataSet1.TRACE_DATA_MIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillDateByENGINE_ID(ByVal dataTable As DataSet1.TRACE_DATA_MIXDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataDateByENGINE_ID(ByVal pENGINE_ID As Integer) As DataSet1.TRACE_DATA_MIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_MIXDataTable = New DataSet1.TRACE_DATA_MIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillIntByENGINE_ID(ByVal dataTable As DataSet1.TRACE_DATA_MIXDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataIntByENGINE_ID(ByVal pENGINE_ID As Integer) As DataSet1.TRACE_DATA_MIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_MIXDataTable = New DataSet1.TRACE_DATA_MIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillStrByENGINE_ID(ByVal dataTable As DataSet1.TRACE_DATA_MIXDataTable, ByVal pENGINE_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataStrByENGINE_ID(ByVal pENGINE_ID As Integer) As DataSet1.TRACE_DATA_MIXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_ID, Integer)
            Dim dataTable As DataSet1.TRACE_DATA_MIXDataTable = New DataSet1.TRACE_DATA_MIXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class SHORT_BLOCK_SERIAL_NO_SHOWTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SHORT_BLOCK_SERIAL_NO_SHOW"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            tableMapping.ColumnMappings.Add("PART_NAME", "PART_NAME")
            tableMapping.ColumnMappings.Add("DATA", "DATA")
            tableMapping.ColumnMappings.Add("MODEL_LOT", "MODEL_LOT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT TOP(100) PERCENT el.ID AS ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_T" & _
                "YPE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_ASM_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "        el.BOOK," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.YEAR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.MODEL_CODE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.LOT_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UNIT_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.AT_MT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                el.EMISSION," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INJ_MODEL_CODE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "  el.SPARE_001," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_DATA_SB_PARTS_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_" & _
                "DATA_SB_SERIAL_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_DATA_GASKET_GRADE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el" & _
                ".LINE_ON_TIME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.LINE_OFF_TIME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBL" & _
                "O_BCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_CRT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_CTM," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE0" & _
                "2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_CCT," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_DPT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_FWT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.RPCOCF_MALO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_SPARE02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "              el.RPCOCF_MALO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_HDT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.RPCOCF_MBLO_CCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_HCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.RPCOCF_MBLO_PPT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "    el.RPCOCF_MBLO_SPARE02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.RPCOCF_MBLO_SPARE04," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "        el.INSPSJ_INSPECTION02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "          el.INSPSJ_INSPECTION04," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION05," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.INSPSJ_INSPECTION06," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION_TIME01" & _
                "," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION11," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION" & _
                "12," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION13," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTI" & _
                "ON14," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION15," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPEC" & _
                "TION16," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION_TIME02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UPDATE" & _
                "D_BY," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.CREATED_WHEN," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UPDATED_WHEN," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "           v.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.COL" & _
                "UMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v" & _
                ".REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.DATA," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.MODEL_CODE + ' ' + el.LOT_NO AS MODEL_LOT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM ENGINE_LIST AS el" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "LEFT OUTER JOIN (SELECT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc" & _
                ".SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 AS" & _
                " MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          t" & _
                "ds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          MAX(tds.REVISE_DATE) AS REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                      SUBSTRING(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "     LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    CHARINDEX('|', R" & _
                "EVERSE(tc.COLUMN_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    LEN(tc.COLUMN_" & _
                "NAME)) AS PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tds.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     F" & _
                "ROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN TRACE_DATA_STR AS tds ON" & _
                " tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        tds.TRACE_COLU" & _
                "MNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN ENGINE_LIST AS el ON el.ID = tds.ENGINE_I" & _
                "D" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_NAME LIKE 'SHORT BLOCK DATA|%')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "             GROUP BY tc.ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "                 tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                            tds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             SUBSTRING(" & _
                "tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                                      CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + " & _
                "2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       LEN(tc.COLUMN_NAME))," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "               tds.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   SELECT" & _
                " tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 AS MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "              tdi.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "               MAX(tdi.REVISE_DATE) AS REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          S" & _
                "UBSTRING(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    LEN(tc.COLUMN_NAME" & _
                ") -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    CHARINDEX('|', REVERSE(tc.COLUMN_NAME))" & _
                " + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    LEN(tc.COLUMN_NAME)) AS PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                         CONVERT(varchar(255), tdi.DATA) AS DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "       FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN TRACE_DATA_INT A" & _
                "S tdi ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                        tdi.TR" & _
                "ACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     LEFT OUTER JOIN ENGINE_LIST AS el ON el.ID " & _
                "=" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                          tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                WHERE (tc.COLUMN_NAME LIKE 'SHORT BLOCK DATA|%')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "      GROUP BY tc.ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tdi.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                     tdi.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             SUBSTRING(tc.COLU" & _
                "MN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                               CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                                    LEN(tc.COLUMN_NAME))," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "        tdi.DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   SELECT tc.ID " & _
                "AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "   tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 AS MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "       tdd.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdd.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "        MAX(tdd.REVISE_DATE) AS REVISE_DATE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SUBSTRIN" & _
                "G(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    LEN(tc.COLUMN_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                  CHARINDEX('|', REVERSE(tc.COLUMN_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                    LEN(tc.COLUMN_NAME)) AS PART_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                  CONVERT(VARCHAR, tdd.DATA, 112) AS DATA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN TRACE_DATA_DATETIME AS " & _
                "tdd ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                             tdd" & _
                ".TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN ENGINE_LIST AS el ON el.ID = t" & _
                "dd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_NAME LIKE 'SHORT BLOCK DATA|%" & _
                "')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    GROUP BY tc.ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                            tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tdd.EN" & _
                "GINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             tdd.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            " & _
                " SUBSTRING(tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       LEN(tc.COLUMN" & _
                "_NAME) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       CHARINDEX('|', REVERSE(tc.COLUM" & _
                "N_NAME)) + 2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       LEN(tc.COLUMN_NAME))," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                          tdd.DATA) AS v ON el.ID = v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JOIN (SE" & _
                "LECT TRACE_COLUMNS_ID, ENGINE_ID, MAX(REV_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "               FROM (SE" & _
                "LECT DISTINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     t" & _
                "ds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "       FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TRACE_DA" & _
                "TA_STR AS tds ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                      " & _
                "          tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LIST AS " & _
                "el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (tc.COLUMN_NAME LIKE 'S" & _
                "HORT BLOCK DATA|%')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     SELECT" & _
                " DISTINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdi.E" & _
                "NGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "   FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TRACE_DATA_I" & _
                "NT AS tdi ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                          " & _
                "      tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LIST AS el O" & _
                "N el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (tc.COLUMN_NAME LIKE 'SHORT" & _
                " BLOCK DATA|%')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     SELECT DIS" & _
                "TINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdd.ENGIN" & _
                "E_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       F" & _
                "ROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TRACE_DATA_DATET" & _
                "IME AS tdd ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "            tdd.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LIST A" & _
                "S el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (tc.COLUMN_NAME LIKE " & _
                "'SHORT BLOCK DATA|%')) AS tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              GROUP BY TRACE_COLUMNS_ID, ENGINE_I" & _
                "D) AS vmax ON v.ENGINE_ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   " & _
                "            vmax.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    " & _
                "       AND v.REV_NO =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                         " & _
                "      vmax.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (v.DATA = @SERIAL_NO)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " ORDER BY ENGINE_ID, v.SE" & _
                "Q, v.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIAL_NO", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "DATA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillSERIAL_NO(ByVal dataTable As DataSet1.SHORT_BLOCK_SERIAL_NO_SHOWDataTable, ByVal SERIAL_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetDataSERIAL_NO(ByVal SERIAL_NO As String) As DataSet1.SHORT_BLOCK_SERIAL_NO_SHOWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SERIAL_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SERIAL_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SERIAL_NO, String)
            End If
            Dim dataTable As DataSet1.SHORT_BLOCK_SERIAL_NO_SHOWDataTable = New DataSet1.SHORT_BLOCK_SERIAL_NO_SHOWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class TRACE_ABILITY_DATA_SHOWTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRACE_ABILITY_DATA_SHOW"
            tableMapping.ColumnMappings.Add("ENGINE_ID", "ENGINE_ID")
            tableMapping.ColumnMappings.Add("ENGINE_TYPE", "ENGINE_TYPE")
            tableMapping.ColumnMappings.Add("ENGINE_NO", "ENGINE_NO")
            tableMapping.ColumnMappings.Add("ENGINE_ASM_NO", "ENGINE_ASM_NO")
            tableMapping.ColumnMappings.Add("BOOK", "BOOK")
            tableMapping.ColumnMappings.Add("YEAR", "YEAR")
            tableMapping.ColumnMappings.Add("MODEL_CODE", "MODEL_CODE")
            tableMapping.ColumnMappings.Add("LOT_NO", "LOT_NO")
            tableMapping.ColumnMappings.Add("UNIT_NO", "UNIT_NO")
            tableMapping.ColumnMappings.Add("AT_MT", "AT_MT")
            tableMapping.ColumnMappings.Add("EMISSION", "EMISSION")
            tableMapping.ColumnMappings.Add("INJ_MODEL_CODE", "INJ_MODEL_CODE")
            tableMapping.ColumnMappings.Add("SPARE_001", "SPARE_001")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_PARTS_NO", "SB_DATA_SB_PARTS_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_SB_SERIAL_NO", "SB_DATA_SB_SERIAL_NO")
            tableMapping.ColumnMappings.Add("SB_DATA_GASKET_GRADE", "SB_DATA_GASKET_GRADE")
            tableMapping.ColumnMappings.Add("LINE_ON_TIME", "LINE_ON_TIME")
            tableMapping.ColumnMappings.Add("LINE_OFF_TIME", "LINE_OFF_TIME")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_BCT", "RPCOCF_SBLO_BCT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CRT", "RPCOCF_SBLO_CRT")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_CTM", "RPCOCF_SBLO_CTM")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE01", "RPCOCF_SBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE02", "RPCOCF_SBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_SBLO_SPARE03", "RPCOCF_SBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_CCT", "RPCOCF_MALO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_DPT", "RPCOCF_MALO_DPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_FWT", "RPCOCF_MALO_FWT")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE01", "RPCOCF_MALO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE02", "RPCOCF_MALO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MALO_SPARE03", "RPCOCF_MALO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HDT", "RPCOCF_MBLO_HDT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_CCT", "RPCOCF_MBLO_CCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_HCT", "RPCOCF_MBLO_HCT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_PPT", "RPCOCF_MBLO_PPT")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE01", "RPCOCF_MBLO_SPARE01")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE02", "RPCOCF_MBLO_SPARE02")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE03", "RPCOCF_MBLO_SPARE03")
            tableMapping.ColumnMappings.Add("RPCOCF_MBLO_SPARE04", "RPCOCF_MBLO_SPARE04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION01", "INSPSJ_INSPECTION01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION02", "INSPSJ_INSPECTION02")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION03", "INSPSJ_INSPECTION03")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION04", "INSPSJ_INSPECTION04")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION05", "INSPSJ_INSPECTION05")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION06", "INSPSJ_INSPECTION06")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME01", "INSPSJ_INSPECTION_TIME01")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION11", "INSPSJ_INSPECTION11")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION12", "INSPSJ_INSPECTION12")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION13", "INSPSJ_INSPECTION13")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION14", "INSPSJ_INSPECTION14")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION15", "INSPSJ_INSPECTION15")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION16", "INSPSJ_INSPECTION16")
            tableMapping.ColumnMappings.Add("INSPSJ_INSPECTION_TIME02", "INSPSJ_INSPECTION_TIME02")
            tableMapping.ColumnMappings.Add("UPDATED_BY", "UPDATED_BY")
            tableMapping.ColumnMappings.Add("CREATED_WHEN", "CREATED_WHEN")
            tableMapping.ColumnMappings.Add("UPDATED_WHEN", "UPDATED_WHEN")
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO")
            tableMapping.ColumnMappings.Add("TRACE_COLUMNS_ID", "TRACE_COLUMNS_ID")
            tableMapping.ColumnMappings.Add("COLUMN_NAME", "COLUMN_NAME")
            tableMapping.ColumnMappings.Add("SEQ", "SEQ")
            tableMapping.ColumnMappings.Add("MAX_REV", "MAX_REV")
            tableMapping.ColumnMappings.Add("REVISE_DATE", "REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.pdt_es01_client.My.MySettings.Default.iemt_pdt_es01_developmentConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT TOP(100) PERCENT el.ID AS ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_T" & _
                "YPE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_ASM_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "        el.BOOK," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.YEAR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.MODEL_CODE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.LOT_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UNIT_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.AT_MT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                el.EMISSION," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INJ_MODEL_CODE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "  el.SPARE_001," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_DATA_SB_PARTS_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_" & _
                "DATA_SB_SERIAL_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_DATA_GASKET_GRADE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el" & _
                ".LINE_ON_TIME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.LINE_OFF_TIME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBL" & _
                "O_BCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_CRT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_CTM," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE0" & _
                "2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_CCT," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_DPT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_FWT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.RPCOCF_MALO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_SPARE02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "              el.RPCOCF_MALO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_HDT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.RPCOCF_MBLO_CCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_HCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.RPCOCF_MBLO_PPT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "    el.RPCOCF_MBLO_SPARE02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.RPCOCF_MBLO_SPARE04," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "        el.INSPSJ_INSPECTION02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "          el.INSPSJ_INSPECTION04," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION05," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.INSPSJ_INSPECTION06," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION_TIME01" & _
                "," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION11," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION" & _
                "12," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION13," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTI" & _
                "ON14," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION15," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPEC" & _
                "TION16," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION_TIME02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UPDATE" & _
                "D_BY," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.CREATED_WHEN," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UPDATED_WHEN," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "           v.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.COL" & _
                "UMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v" & _
                ".REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM ENGINE_LIST AS el" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN (SELECT tc.ID AS TRACE" & _
                "_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.CO" & _
                "LUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 AS MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          t" & _
                "ds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "tds.REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "    INNER JOIN TRACE_DATA_STR AS tds ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN EN" & _
                "GINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_N" & _
                "AME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   SELECT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                         4 AS MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.ENGINE_ID," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.REVISE_DA" & _
                "TE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOI" & _
                "N TRACE_DATA_INT AS tdi ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "            tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     LEFT OUTER JOIN ENGINE_LI" & _
                "ST AS el ON el.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                          t" & _
                "di.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "        'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                  SELECT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          t" & _
                "c.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 A" & _
                "S MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdd.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "tdd.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdd.REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     FRO" & _
                "M TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN TRACE_DATA_DATETIME AS tdd" & _
                " ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                             tdd.TR" & _
                "ACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN ENGINE_LIST AS el ON el.ID = tdd." & _
                "ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "     'MACHINING PARTS SERIAL No|%SERIAL No')) AS v ON el.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "                                                          v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JO" & _
                "IN (SELECT TRACE_COLUMNS_ID, ENGINE_ID, MAX(REV_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "               FR" & _
                "OM (SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "     tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "             FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TR" & _
                "ACE_DATA_STR AS tds ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LI" & _
                "ST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (tc.COLUMN_NAME L" & _
                "IKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     SELECT DISTINCT tc.ID AS TRACE_CO" & _
                "LUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdi.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "                     tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       FROM TRACE_COLUMNS AS tc" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TRACE_DATA_INT AS tdi ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                           tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LIST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                    WHERE (tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            'MAC" & _
                "HINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "          SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "           tdd.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                   FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER J" & _
                "OIN TRACE_DATA_DATETIME AS tdd ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     " & _
                "                                tdd.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNE" & _
                "R JOIN ENGINE_LIST AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (" & _
                "tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            'MACHINING PARTS SERIAL No|%SER" & _
                "IAL No')) AS tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              GROUP BY TRACE_COLUMNS_ID, ENGINE_ID) AS vmax ON" & _
                " v.ENGINE_ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                               v" & _
                "max.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                           AND v." & _
                "REV_NO =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                               vmax.RE" & _
                "V_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (el.ENGINE_NO = @pENGINE_NO)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " ORDER BY ENGINE_ID, v.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pENGINE_NO", Global.System.Data.SqlDbType.[Char], 6, Global.System.Data.ParameterDirection.Input, 0, 0, "ENGINE_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT DISTINCT TOP(100) PERCENT el.ID AS ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_T" & _
                "YPE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.ENGINE_ASM_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "        el.BOOK," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.YEAR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.MODEL_CODE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.LOT_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UNIT_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.AT_MT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                el.EMISSION," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INJ_MODEL_CODE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "  el.SPARE_001," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_DATA_SB_PARTS_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_" & _
                "DATA_SB_SERIAL_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.SB_DATA_GASKET_GRADE," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el" & _
                ".LINE_ON_TIME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.LINE_OFF_TIME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBL" & _
                "O_BCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_CRT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_CTM," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE0" & _
                "2," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_SBLO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_CCT," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_DPT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_FWT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.RPCOCF_MALO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MALO_SPARE02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "              el.RPCOCF_MALO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_HDT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.RPCOCF_MBLO_CCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_HCT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.RPCOCF_MBLO_PPT," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_SPARE01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "            " & _
                "    el.RPCOCF_MBLO_SPARE02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.RPCOCF_MBLO_SPARE03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "      el.RPCOCF_MBLO_SPARE04," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION01," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "        el.INSPSJ_INSPECTION02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION03," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "          el.INSPSJ_INSPECTION04," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION05," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "            el.INSPSJ_INSPECTION06," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION_TIME01" & _
                "," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION11," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION" & _
                "12," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION13," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTI" & _
                "ON14," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION15," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPEC" & _
                "TION16," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.INSPSJ_INSPECTION_TIME02," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UPDATE" & _
                "D_BY," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.CREATED_WHEN," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                el.UPDATED_WHEN," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "           v.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.COL" & _
                "UMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v.MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                v" & _
                ".REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  FROM ENGINE_LIST AS el" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  LEFT OUTER JOIN (SELECT tc.ID AS TRACE" & _
                "_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.CO" & _
                "LUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 AS MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          t" & _
                "ds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tds.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "tds.REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "    INNER JOIN TRACE_DATA_STR AS tds ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                         tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN EN" & _
                "GINE_LIST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_N" & _
                "AME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   SELECT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                         4 AS MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.ENGINE_ID," & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdi.REVISE_DA" & _
                "TE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOI" & _
                "N TRACE_DATA_INT AS tdi ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "            tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     LEFT OUTER JOIN ENGINE_LI" & _
                "ST AS el ON el.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                          t" & _
                "di.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "        'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                  SELECT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          t" & _
                "c.SEQ," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tc.COLUMN_NAME," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          4 A" & _
                "S MAX_REV," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdd.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "tdd.REV_NO," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          tdd.REVISE_DATE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     FRO" & _
                "M TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN TRACE_DATA_DATETIME AS tdd" & _
                " ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                             tdd.TR" & _
                "ACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    INNER JOIN ENGINE_LIST AS el ON el.ID = tdd." & _
                "ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    WHERE (tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "     'MACHINING PARTS SERIAL No|%SERIAL No')) AS v ON el.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "                                                          v.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " INNER JO" & _
                "IN (SELECT TRACE_COLUMNS_ID, ENGINE_ID, MAX(REV_NO) AS REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "               FR" & _
                "OM (SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "     tds.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tds.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "             FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TR" & _
                "ACE_DATA_STR AS tds ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                tds.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LI" & _
                "ST AS el ON el.ID = tds.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (tc.COLUMN_NAME L" & _
                "IKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            'MACHINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "               UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     SELECT DISTINCT tc.ID AS TRACE_CO" & _
                "LUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdi.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "                     tdi.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       FROM TRACE_COLUMNS AS tc" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER JOIN TRACE_DATA_INT AS tdi ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                           tdi.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNER JOIN ENGINE_LIST AS el ON el.ID = tdi.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                    WHERE (tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            'MAC" & _
                "HINING PARTS SERIAL No|%SERIAL No')" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     UNION ALL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "          SELECT DISTINCT tc.ID AS TRACE_COLUMNS_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "           tdd.ENGINE_ID," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     tdd.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                   FROM TRACE_COLUMNS AS tc" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       LEFT OUTER J" & _
                "OIN TRACE_DATA_DATETIME AS tdd ON tc.ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                     " & _
                "                                tdd.TRACE_COLUMNS_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      INNE" & _
                "R JOIN ENGINE_LIST AS el ON el.ID = tdd.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      WHERE (" & _
                "tc.COLUMN_NAME LIKE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            'MACHINING PARTS SERIAL No|%SER" & _
                "IAL No')) AS tmp" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              GROUP BY TRACE_COLUMNS_ID, ENGINE_ID) AS vmax ON" & _
                " v.ENGINE_ID =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                               v" & _
                "max.ENGINE_ID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                           AND v." & _
                "REV_NO =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                               vmax.RE" & _
                "V_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " WHERE (EL.MODEL_CODE LIKE @pMODEL_CODE) AND (EL.LOT_NO LIKE @pLOT_NO)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " O" & _
                "RDER BY ENGINE_ID, v.REV_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pMODEL_CODE", Global.System.Data.SqlDbType.[Char], 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MODEL_CODE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pLOT_NO", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LOT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill_ENGINE_NO(ByVal dataTable As DataSet1.TRACE_ABILITY_DATA_SHOWDataTable, ByVal pENGINE_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData_ENGINE_NO(ByVal pENGINE_NO As String) As DataSet1.TRACE_ABILITY_DATA_SHOWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (pENGINE_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pENGINE_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pENGINE_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_ABILITY_DATA_SHOWDataTable = New DataSet1.TRACE_ABILITY_DATA_SHOWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByModelCode_LotNo(ByVal dataTable As DataSet1.TRACE_ABILITY_DATA_SHOWDataTable, ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataByModelCode_LotNo(ByVal pMODEL_CODE As String, ByVal pLOT_NO As String) As DataSet1.TRACE_ABILITY_DATA_SHOWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (pMODEL_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pMODEL_CODE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(pMODEL_CODE, String)
            End If
            If (pLOT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pLOT_NO")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(pLOT_NO, String)
            End If
            Dim dataTable As DataSet1.TRACE_ABILITY_DATA_SHOWDataTable = New DataSet1.TRACE_ABILITY_DATA_SHOWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _eNGINE_LISTTableAdapter As ENGINE_LISTTableAdapter
        
        Private _wORKING_DATA_STRTableAdapter As WORKING_DATA_STRTableAdapter
        
        Private _wORKING_DATA_INTTableAdapter As WORKING_DATA_INTTableAdapter
        
        Private _wORKING_DATA_DATETIMETableAdapter As WORKING_DATA_DATETIMETableAdapter
        
        Private _tRACE_DATA_STRTableAdapter As TRACE_DATA_STRTableAdapter
        
        Private _tRACE_DATA_INTTableAdapter As TRACE_DATA_INTTableAdapter
        
        Private _tRACE_DATA_DATETIMETableAdapter As TRACE_DATA_DATETIMETableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ENGINE_LISTTableAdapter() As ENGINE_LISTTableAdapter
            Get
                Return Me._eNGINE_LISTTableAdapter
            End Get
            Set
                Me._eNGINE_LISTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property WORKING_DATA_STRTableAdapter() As WORKING_DATA_STRTableAdapter
            Get
                Return Me._wORKING_DATA_STRTableAdapter
            End Get
            Set
                Me._wORKING_DATA_STRTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property WORKING_DATA_INTTableAdapter() As WORKING_DATA_INTTableAdapter
            Get
                Return Me._wORKING_DATA_INTTableAdapter
            End Get
            Set
                Me._wORKING_DATA_INTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property WORKING_DATA_DATETIMETableAdapter() As WORKING_DATA_DATETIMETableAdapter
            Get
                Return Me._wORKING_DATA_DATETIMETableAdapter
            End Get
            Set
                Me._wORKING_DATA_DATETIMETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TRACE_DATA_STRTableAdapter() As TRACE_DATA_STRTableAdapter
            Get
                Return Me._tRACE_DATA_STRTableAdapter
            End Get
            Set
                Me._tRACE_DATA_STRTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TRACE_DATA_INTTableAdapter() As TRACE_DATA_INTTableAdapter
            Get
                Return Me._tRACE_DATA_INTTableAdapter
            End Get
            Set
                Me._tRACE_DATA_INTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TRACE_DATA_DATETIMETableAdapter() As TRACE_DATA_DATETIMETableAdapter
            Get
                Return Me._tRACE_DATA_DATETIMETableAdapter
            End Get
            Set
                Me._tRACE_DATA_DATETIMETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._eNGINE_LISTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._eNGINE_LISTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._eNGINE_LISTTableAdapter.Connection
                End If
                If ((Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._wORKING_DATA_STRTableAdapter.Connection) Is Nothing)) Then
                    Return Me._wORKING_DATA_STRTableAdapter.Connection
                End If
                If ((Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._wORKING_DATA_INTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._wORKING_DATA_INTTableAdapter.Connection
                End If
                If ((Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._wORKING_DATA_DATETIMETableAdapter.Connection) Is Nothing)) Then
                    Return Me._wORKING_DATA_DATETIMETableAdapter.Connection
                End If
                If ((Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tRACE_DATA_STRTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tRACE_DATA_STRTableAdapter.Connection
                End If
                If ((Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tRACE_DATA_INTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tRACE_DATA_INTTableAdapter.Connection
                End If
                If ((Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tRACE_DATA_DATETIMETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tRACE_DATA_DATETIMETableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._eNGINE_LISTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._eNGINE_LISTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ENGINE_LIST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._eNGINE_LISTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_STR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_STRTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_INT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_INTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_DATETIME.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_DATETIMETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_INT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_INTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_DATETIME.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_DATETIMETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_STR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_STRTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._eNGINE_LISTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ENGINE_LIST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._eNGINE_LISTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_STR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_STRTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_INT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_INTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_DATETIME.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_DATETIMETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_INT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_INTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_DATETIME.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_DATETIMETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_STR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_STRTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_STR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_STRTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_DATETIME.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_DATETIMETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.WORKING_DATA_INT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._wORKING_DATA_INTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_DATETIME.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_DATETIMETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_INT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_INTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TRACE_DATA_STR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tRACE_DATA_STRTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._eNGINE_LISTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ENGINE_LIST.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._eNGINE_LISTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._eNGINE_LISTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._eNGINE_LISTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._wORKING_DATA_STRTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._wORKING_DATA_INTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._wORKING_DATA_DATETIMETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tRACE_DATA_STRTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tRACE_DATA_INTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tRACE_DATA_DATETIMETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._eNGINE_LISTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._eNGINE_LISTTableAdapter, Me._eNGINE_LISTTableAdapter.Connection)
                    Me._eNGINE_LISTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._eNGINE_LISTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._eNGINE_LISTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._eNGINE_LISTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._eNGINE_LISTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._wORKING_DATA_STRTableAdapter, Me._wORKING_DATA_STRTableAdapter.Connection)
                    Me._wORKING_DATA_STRTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._wORKING_DATA_STRTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._wORKING_DATA_STRTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._wORKING_DATA_STRTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._wORKING_DATA_STRTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._wORKING_DATA_INTTableAdapter, Me._wORKING_DATA_INTTableAdapter.Connection)
                    Me._wORKING_DATA_INTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._wORKING_DATA_INTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._wORKING_DATA_INTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._wORKING_DATA_INTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._wORKING_DATA_INTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._wORKING_DATA_DATETIMETableAdapter, Me._wORKING_DATA_DATETIMETableAdapter.Connection)
                    Me._wORKING_DATA_DATETIMETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._wORKING_DATA_DATETIMETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._wORKING_DATA_DATETIMETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._wORKING_DATA_DATETIMETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._wORKING_DATA_DATETIMETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tRACE_DATA_STRTableAdapter, Me._tRACE_DATA_STRTableAdapter.Connection)
                    Me._tRACE_DATA_STRTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tRACE_DATA_STRTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tRACE_DATA_STRTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tRACE_DATA_STRTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tRACE_DATA_STRTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tRACE_DATA_INTTableAdapter, Me._tRACE_DATA_INTTableAdapter.Connection)
                    Me._tRACE_DATA_INTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tRACE_DATA_INTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tRACE_DATA_INTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tRACE_DATA_INTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tRACE_DATA_INTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tRACE_DATA_DATETIMETableAdapter, Me._tRACE_DATA_DATETIMETableAdapter.Connection)
                    Me._tRACE_DATA_DATETIMETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tRACE_DATA_DATETIMETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tRACE_DATA_DATETIMETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tRACE_DATA_DATETIMETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tRACE_DATA_DATETIMETableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._eNGINE_LISTTableAdapter) Is Nothing) Then
                    Me._eNGINE_LISTTableAdapter.Connection = CType(revertConnections(Me._eNGINE_LISTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._eNGINE_LISTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._wORKING_DATA_STRTableAdapter) Is Nothing) Then
                    Me._wORKING_DATA_STRTableAdapter.Connection = CType(revertConnections(Me._wORKING_DATA_STRTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._wORKING_DATA_STRTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._wORKING_DATA_INTTableAdapter) Is Nothing) Then
                    Me._wORKING_DATA_INTTableAdapter.Connection = CType(revertConnections(Me._wORKING_DATA_INTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._wORKING_DATA_INTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._wORKING_DATA_DATETIMETableAdapter) Is Nothing) Then
                    Me._wORKING_DATA_DATETIMETableAdapter.Connection = CType(revertConnections(Me._wORKING_DATA_DATETIMETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._wORKING_DATA_DATETIMETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tRACE_DATA_STRTableAdapter) Is Nothing) Then
                    Me._tRACE_DATA_STRTableAdapter.Connection = CType(revertConnections(Me._tRACE_DATA_STRTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tRACE_DATA_STRTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tRACE_DATA_INTTableAdapter) Is Nothing) Then
                    Me._tRACE_DATA_INTTableAdapter.Connection = CType(revertConnections(Me._tRACE_DATA_INTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tRACE_DATA_INTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tRACE_DATA_DATETIMETableAdapter) Is Nothing) Then
                    Me._tRACE_DATA_DATETIMETableAdapter.Connection = CType(revertConnections(Me._tRACE_DATA_DATETIMETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tRACE_DATA_DATETIMETableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
