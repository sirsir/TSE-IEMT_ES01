Public Class frmTraceAbilityData_Show

    'Public Property pp_sphENGINE_ID As Integer

    Private m_taTraceAbility As DataSet1TableAdapters.TRACE_ABILITY_DATA_SHOWTableAdapter


    Private Sub frmTraceAbilityData_Show_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Try
            InitializeControls()

            Dim hCtrls As New Hashtable
            'hCtrls("ButtonHISTORY") = 0.1
            hCtrls("ButtonHISTORY") = 0.3
            hCtrls("ButtonPRINT") = 0.5
            hCtrls("ButtonCANCEL") = 0.7
            hCtrls("ButtonMAINMENU") = 0.9

            ShowOnlyControls(hCtrls)


            '-------- Initialize table

            'm_dtWorkingString = Nothing
            'm_dtWorkingInteger = Nothing
            'm_dtWorkingDatetime = Nothing
            'm_dtSettingColumns = Nothing

            'MsgBox(modGlobalVariables.searchBy)
            If modGlobalVariables.searchBy = modGlobalVariables.SEARCH_BY.ENGINE_NO Then
                m_dtEngineList = m_taTraceAbility.GetData_ENGINE_NO(modGlobalVariables.arrIn(0))
                m_dtTraceString = m_taTraceString.GetDataByENGINE_NO_TRACEABILITY(modGlobalVariables.arrIn(0))
                m_dtTraceInteger = m_taTraceInteger.GetDataByENGINE_NO_TRACEABILITY(modGlobalVariables.arrIn(0))
                m_dtTraceDatetime = m_taTraceDatetime.GetDataByENGINE_NO_TRACEABILITY(modGlobalVariables.arrIn(0))
                m_dtSettingColumns = m_taSettingColumns.GetTraceColumns()
            Else 'ElseIf modGlobalVariables.searchBy = modGlobalVariables.SEARCH_BY.MODEL_CODE_LOT_NO Then
                m_dtEngineList = m_taTraceAbility.GetDataByModelCode_LotNo(modGlobalVariables.arrIn(0), modGlobalVariables.arrIn(1))
                m_dtTraceString = m_taTraceString.GetDataByModelCode_LotNo_TRACEABILITY(modGlobalVariables.arrIn(0), modGlobalVariables.arrIn(1))
                m_dtTraceInteger = m_taTraceInteger.GetDataByModelCode_LotNo_TRACEABILITY(modGlobalVariables.arrIn(0), modGlobalVariables.arrIn(1))
                m_dtTraceDatetime = m_taTraceDatetime.GetDataByModelCode_LotNo_TRACEABILITY(modGlobalVariables.arrIn(0), modGlobalVariables.arrIn(1))
                m_dtSettingColumns = m_taSettingColumns.GetTraceColumns()
            End If
            


            'm_dtWorkingString = m_taWorkingString.GetDataByWorkingTypeId(11)
            'm_dtWorkingInteger = m_taWorkingInteger.GetDataByWorkingTypeId(11)
            'm_dtWorkingDatetime = m_taWorkingDatetime.GetDataByWorkingTypeId(11)
            'm_dtSettingColumns = m_taSettingColumns.GetWorkingColumns(11)
            'Dim strHiddenColNames() As String = {"ENGINE_ID"}
            strHiddenColNames = {"REV_NO" _
                                , "ENGINE_NO" _
                                , "MODEL_CODE" _
                                , "LOT_NO" _
                                , "UNIT_NO" _
                                , "ENGINE_ASM_NO"
                                }

            'LoadData(m_dtEngineList _
            '                               , m_dtWorkingString _
            '                               , m_dtWorkingInteger _
            '                               , m_dtWorkingDatetime _
            '                               , m_dtSettingColumns _
            '                               , {"ENGINE_ID", "REV_NO"} _
            '                               , "WORKING_COLUMNS_ID" _
            '                               , {"ENGINE_ID", "REV_NO"} _
            '                               , "DATA" _
            '                               , strHiddenColNames)


            LoadData(m_dtEngineList _
                                           , m_dtTraceString _
                                           , m_dtTraceInteger _
                                           , m_dtTraceDatetime _
                                           , m_dtSettingColumns _
                                           , {"ENGINE_ID", "REV_NO"} _
                                           , "TRACE_COLUMNS_ID" _
                                           , {"ENGINE_ID", "REV_NO"} _
                                           , "DATA" _
                                           , strHiddenColNames)



        Catch ex As Exception
            modLogger.HandleException(ex, True)
        End Try
    End Sub

    Protected Overrides Sub InitializeVariables()
        ' Add any initialization after the InitializeComponent() call.
        'If modGlobalVariables.tabletype = modGlobalVariables.TABLE2SHOW.ENGINE_LIST Then
        '    m_dtEngineList = New DataSet1.ENGINE_LISTDataTable
        'End If
        m_dtEngineList = New DataSet1.TRACE_ABILITY_DATA_SHOWDataTable
        'm_dtWorkingString = New DataSet1.WORKING_DATA_STRDataTable
        'm_dtWorkingInteger = New DataSet1.WORKING_DATA_INTDataTable
        'm_dtWorkingDatetime = New DataSet1.WORKING_DATA_DATETIMEDataTable
        m_dtTraceString = New DataSet1.TRACE_DATA_STRDataTable
        m_dtTraceInteger = New DataSet1.TRACE_DATA_INTDataTable
        m_dtTraceDatetime = New DataSet1.TRACE_DATA_DATETIMEDataTable
        m_dtSettingColumns = New DataSet1.V_SETTING_COLUMNSDataTable
        'm_objPivotGrid = New ctrlPivotGrid
        'If modGlobalVariables.tabletype = modGlobalVariables.TABLE2SHOW.ENGINE_LIST Then
        '    m_taEngineList = New DataSet1TableAdapters.ENGINE_LISTTableAdapter

        '    'm_taEngineList = DirectCast(New DataSet1TableAdapters.ENGINE_LISTTableAdapter, DataSet1TableAdapters.ENGINE_LISTTableAdapter)
        '    'Dim m_taEngineList = DirectCast(New DataSet1TableAdapters.ENGINE_LISTTableAdapter, DataSet1TableAdapters.ENGINE_LISTTableAdapter)
        '    'm_taEngineList.getdata
        'End If
        m_taTraceAbility = New DataSet1TableAdapters.TRACE_ABILITY_DATA_SHOWTableAdapter
        'm_taWorkingString = New DataSet1TableAdapters.WORKING_DATA_STRTableAdapter
        'm_taWorkingInteger = New DataSet1TableAdapters.WORKING_DATA_INTTableAdapter
        'm_taWorkingDatetime = New DataSet1TableAdapters.WORKING_DATA_DATETIMETableAdapter
        m_taTraceString = New DataSet1TableAdapters.TRACE_DATA_STRTableAdapter
        m_taTraceInteger = New DataSet1TableAdapters.TRACE_DATA_INTTableAdapter
        m_taTraceDatetime = New DataSet1TableAdapters.TRACE_DATA_DATETIMETableAdapter
        m_taSettingColumns = New DataSet1TableAdapters.V_SETTING_COLUMNSTableAdapter
    End Sub

    Protected Overrides Sub ButtonHISTORY_Click(sender As Object, e As EventArgs)
        Dim inEngineId As Integer
        Dim frmShow As frmSerialNo_PartNo_History
        'Try/Catch exception in every event, not in every function
        Try
            frmShow = New frmSerialNo_PartNo_History
            If CtrlPivotGrid1.SelectedRows.Count = 1 Then
                inEngineId = CtrlPivotGrid1.SelectedRows(0).Cells("ENGINE_ID").Value
                frmShow.pp_sphENGINE_ID = inEngineId
            End If
            If frmShow.ShowDialog() = Windows.Forms.DialogResult.Abort Then
                Me.DialogResult = Windows.Forms.DialogResult.Abort
                Me.Close()
            End If

        Catch ex As Exception
            modLogger.HandleException(ex, True)
        End Try
    End Sub

    Protected Overrides Sub ButtonBACK_Click(sender As Object, e As EventArgs)
        Try
            Me.Close()
        Catch ex As Exception
            modLogger.HandleException(ex, True)
        End Try

    End Sub

End Class